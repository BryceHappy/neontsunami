{"version":3,"sources":["bootstrap.js","rails.js","selectize.js","app.js"],"names":["jQuery","Error","$","version","fn","jquery","split","transitionEnd","el","document","createElement","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","name","undefined","style","end","emulateTransitionEnd","duration","called","$el","this","one","callback","trigger","support","setTimeout","event","special","bsTransitionEnd","bindType","delegateType","handle","e","target","is","handleObj","handler","apply","arguments","Plugin","option","each","$this","data","Alert","call","dismiss","on","close","VERSION","TRANSITION_DURATION","prototype","removeElement","$parent","detach","remove","selector","attr","replace","preventDefault","length","closest","Event","isDefaultPrevented","removeClass","hasClass","old","alert","Constructor","noConflict","options","Button","toggle","setState","element","$element","extend","DEFAULTS","isLoading","loadingText","state","d","val","resetText","proxy","addClass","removeAttr","changed","$input","find","prop","toggleClass","button","$btn","test","type","Carousel","action","slide","to","interval","pause","cycle","$indicators","paused","sliding","$active","$items","keyboard","keydown","documentElement","wrap","tagName","which","prev","next","clearInterval","setInterval","getItemIndex","item","parent","children","index","getItemForDirection","direction","active","activeIndex","willWrap","delta","itemIndex","eq","pos","that","$next","isCycling","relatedTarget","slideEvent","$nextIndicator","slidEvent","offsetWidth","join","carousel","clickHandler","href","$target","slideIndex","window","$carousel","getTargetFromTrigger","$trigger","Collapse","id","transitioning","getParent","addAriaAndCollapsedClass","dimension","hasWidth","show","activesData","actives","startEvent","complete","scrollSize","camelCase","hide","offsetHeight","i","isOpen","collapse","clearMenus","backdrop","Dropdown","isActive","insertAfter","stopPropagation","desc","dropdown","_relatedTarget","Modal","$body","body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","load","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","resize","appendTo","scrollTop","adjustDialog","enforceFocus","off","hideModal","has","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","animate","doAnimate","currentTarget","focus","callbackRemove","modalIsOverflowing","scrollHeight","clientHeight","css","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","measureScrollbar","bodyPad","parseInt","scrollDiv","className","append","removeChild","modal","showEvent","Tooltip","enabled","timeout","hoverState","init","animation","placement","template","title","delay","html","container","viewport","padding","getOptions","$viewport","constructor","triggers","eventIn","eventOut","enter","leave","_options","fixTitle","getDefaults","getDelegateOptions","defaults","key","value","obj","self","$tip","clearTimeout","hasContent","inDom","contains","ownerDocument","tip","tipId","getUID","setContent","autoToken","autoPlace","top","display","getPosition","actualWidth","actualHeight","orgPlacement","$container","containerDim","bottom","width","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","offset","height","marginTop","marginLeft","isNaN","setOffset","using","props","round","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","$e","isBody","elRect","elOffset","scroll","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","o","prefix","random","getElementById","$arrow","enable","disable","toggleEnabled","destroy","removeData","tooltip","Popover","content","getContent","popover","ScrollSpy","$scrollElement","offsets","targets","activeTarget","process","refresh","getScrollHeight","max","offsetMethod","offsetBase","isWindow","map","$href","sort","a","b","push","maxScroll","activate","clear","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","position","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","rails","error","$document","linkClickSelector","buttonClickSelector","inputChangeSelector","formSubmitSelector","formInputClickSelector","disableSelector","enableSelector","requiredInputSelector","fileInputSelector","linkDisableSelector","buttonDisableSelector","CSRFProtection","xhr","token","setRequestHeader","refreshCSRFTokens","csrfToken","csrfParam","fire","result","confirm","message","ajax","handleRemote","method","url","elCrossDomain","crossDomain","withCredentials","dataType","ajaxSettings","serializeArray","serialize","beforeSend","settings","accepts","script","success","status","xhrFields","handleMethod","link","form","metadataInput","submit","formElements","elements","filter","disableFormElements","disableFormElement","replacement","enableFormElements","enableFormElement","allowAction","answer","blankInputs","specifiedSelector","nonBlank","input","valueToCheck","inputs","allInputs","add","nonBlankInputs","stopEverything","stopImmediatePropagation","disableElement","bind","enableElement","unbind","ajaxPrefilter","originalOptions","delegate","metaClick","metaKey","ctrlKey","blankRequiredInputs","nonBlankFileInputs","aborted","root","factory","define","amd","exports","module","Sifter","items","diacritics","tokenize","query","trim","String","toLowerCase","n","regex","letter","tokens","words","escape_regex","DIACRITICS","hasOwnProperty","RegExp","string","iterator","object","is_array","Array","forEach","getScoreFunction","search","fields","token_count","prepareSearch","scoreValue","score","scoreObject","field_count","sum","conjunction","getSortFunction","field","fields_count","multiplier","multipliers","get_field","implicit_score","sort_empty","unshift","splice","cmp","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","limit","slice","asciifold","k","str","isArray","Object","toString","c","l","r","s","t","u","y","z","chunk","foreignletters","lookup","substring","charAt","regexp","foreignletter","MicroPlugin","mixin","Interface","plugins","initializePlugins","queue","names","requested","loaded","utils","require","shift","loadPlugin","plugin","vArg","Selectize","highlight","pattern","node","skip","nodeType","match","spannode","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","MicroEvent","fct","_events","indexOf","destObject","IS_MAC","navigator","userAgent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_P","KEY_RIGHT","KEY_DOWN","KEY_N","KEY_BACKSPACE","KEY_DELETE","KEY_SHIFT","KEY_CMD","KEY_CTRL","KEY_TAB","TAG_SELECT","TAG_INPUT","SUPPORTS_VALIDITY_API","validity","isset","hash_key","escape_html","escape_replace","hook","before","original","after","once","debounce","args","debounce_events","types","event_args","watchChildEvent","child","getSelection","start","selectionStart","selectionEnd","selection","sel","createRange","selLen","text","moveStart","transferStyles","$from","$to","properties","styles","measureString","$test","whiteSpace","autoGrow","currentWidth","update","keyCode","printable","placeholder","character","altKey","force","shiftKey","fromCharCode","toUpperCase","triggerHandler","dir","selectize","computedStyle","getComputedStyle","getPropertyValue","currentStyle","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","renderCache","onSearchChange","loadThrottle","sifter","registerOption","registerOptionGroup","mode","maxItems","hideSelected","setupCallbacks","setupTemplates","setup","$wrapper","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","$window","wrapperClass","inputClass","dropdownParent","dropdownClass","dropdownContentClass","copyClassesToDropdown","splitOn","delimiter","delimiterEscaped","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","click","onClick","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","positionDropdown","blur","onBlur","onFocus","paste","onPaste","revertSettings","$children","tabindex","setValue","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","onChange","preload","field_label","labelField","field_optgroup","optgroupLabelField","templates","optgroup","optgroup_header","option_create","render","callbacks","initialize","change","item_add","item_remove","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","defaultPrevented","open","setActiveItem","isFull","splitInput","createItem","create","selectAll","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","refreshOptions","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","createOnBlur","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","addOption","getValue","silent","events","addItems","$item","eventName","idx","begin","swap","$last","hideInput","$option","height_menu","height_item","scroll_top","scroll_bottom","outerHeight","stop","scrollDuration","opacity","getSearchOptions","sortField","searchField","searchConjunction","calculateScore","triggerDropdown","j","groups","groups_order","option_html","html_children","has_create_option","$active_before","$create","active_before","maxOptions","min","optgroupField","lockOptgroupOrder","a_order","$order","b_order","canCreate","prepend","addPrecedence","valueField","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","getElementWithValue","$options","$els","getAttribute","values","isPending","value_next","wasFull","insertAtCaret","persist","caret","lock","unlock","output","invalid","refreshClasses","isEmptyObject","opts","label","visibility","outerWidth","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","cursorAtEdge","advanceCaret","$adj","$child","templateName","cache","regex_tag","clearCache","createFilter","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_optgroup_label","field_optgroup_value","optionsMap","init_textbox","settings_element","data_raw","JSON","parse","init_select","readData","group","arr","addGroup","$optgroup","instance","tag_name","sortable","forcePlaceholderSize","disabled","ui","helper","overflow","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","getScrollbarWidth","div","doc","innerHTML","firstChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","html_container","html_element","render_item","slug"],"mappings":"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","file":"app.js","sourcesContent":["/*!\n * Bootstrap v3.3.4 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n\n+function ($) {\n  'use strict';\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.4\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.3.4\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.4'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.4\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.4'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state = state + 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked') && this.$element.hasClass('active')) changed = false\n        else $parent.find('.active').removeClass('active')\n      }\n      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n    }\n\n    if (changed) this.$element.toggleClass('active')\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.4\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.4'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.4\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.4'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.4\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.4'\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--                        // up\n    if (e.which == 40 && index < $items.length - 1) index++                        // down\n    if (!~index)                                      index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.3.4\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.4'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element\n        .addClass('in')\n        .attr('aria-hidden', false)\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .attr('aria-hidden', true)\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $('<div class=\"modal-backdrop ' + animate + '\" />')\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.4\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.4'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (self && self.$tip && self.$tip.is(':visible')) {\n      self.hoverState = 'in'\n      return\n    }\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var $container   = this.options.container ? $(this.options.container) : this.$element.parent()\n        var containerDim = this.getPosition($container)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > containerDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < containerDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > containerDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < containerDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  = offset.top  + marginTop\n    offset.left = offset.left + marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    return (this.$tip = this.$tip || $(this.options.template))\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.3.4\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.4'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.4\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.4'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.4\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    this.element = $(element)\n  }\n\n  Tab.VERSION = '3.3.4'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && (($active.length && $active.hasClass('fade')) || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.4\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.4'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = $(document.body).height()\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","(function($, undefined) {\n\n/**\n * Unobtrusive scripting adapter for jQuery\n * https://github.com/rails/jquery-ujs\n *\n * Requires jQuery 1.8.0 or later.\n *\n * Released under the MIT license\n *\n */\n\n  // Cut down on the number of issues from people inadvertently including jquery_ujs twice\n  // by detecting and raising an error when it happens.\n  if ( $.rails !== undefined ) {\n    $.error('jquery-ujs has already been loaded!');\n  }\n\n  // Shorthand to make it a little easier to call public rails functions from within rails.js\n  var rails;\n  var $document = $(document);\n\n  $.rails = rails = {\n    // Link elements bound by jquery-ujs\n    linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote], a[data-disable-with], a[data-disable]',\n\n    // Button elements bound by jquery-ujs\n    buttonClickSelector: 'button[data-remote], button[data-confirm]',\n\n    // Select elements bound by jquery-ujs\n    inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n\n    // Form elements bound by jquery-ujs\n    formSubmitSelector: 'form',\n\n    // Form input elements bound by jquery-ujs\n    formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n\n    // Form input elements disabled during form submission\n    disableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n\n    // Form input elements re-enabled after form submission\n    enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n\n    // Form required input elements\n    requiredInputSelector: 'input[name][required]:not([disabled]),textarea[name][required]:not([disabled])',\n\n    // Form file input elements\n    fileInputSelector: 'input[type=file]',\n\n    // Link onClick disable selector with possible reenable after remote submission\n    linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n\n    // Button onClick disable selector with possible reenable after remote submission\n    buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]',\n\n    // Make sure that every Ajax request sends the CSRF token\n    CSRFProtection: function(xhr) {\n      var token = $('meta[name=\"csrf-token\"]').attr('content');\n      if (token) xhr.setRequestHeader('X-CSRF-Token', token);\n    },\n\n    // making sure that all forms have actual up-to-date token(cached forms contain old one)\n    refreshCSRFTokens: function(){\n      var csrfToken = $('meta[name=csrf-token]').attr('content');\n      var csrfParam = $('meta[name=csrf-param]').attr('content');\n      $('form input[name=\"' + csrfParam + '\"]').val(csrfToken);\n    },\n\n    // Triggers an event on an element and returns false if the event result is false\n    fire: function(obj, name, data) {\n      var event = $.Event(name);\n      obj.trigger(event, data);\n      return event.result !== false;\n    },\n\n    // Default confirm dialog, may be overridden with custom confirm dialog in $.rails.confirm\n    confirm: function(message) {\n      return confirm(message);\n    },\n\n    // Default ajax function, may be overridden with custom function in $.rails.ajax\n    ajax: function(options) {\n      return $.ajax(options);\n    },\n\n    // Default way to get an element's href. May be overridden at $.rails.href.\n    href: function(element) {\n      return element.attr('href');\n    },\n\n    // Submits \"remote\" forms and links with ajax\n    handleRemote: function(element) {\n      var method, url, data, elCrossDomain, crossDomain, withCredentials, dataType, options;\n\n      if (rails.fire(element, 'ajax:before')) {\n        elCrossDomain = element.data('cross-domain');\n        crossDomain = elCrossDomain === undefined ? null : elCrossDomain;\n        withCredentials = element.data('with-credentials') || null;\n        dataType = element.data('type') || ($.ajaxSettings && $.ajaxSettings.dataType);\n\n        if (element.is('form')) {\n          method = element.attr('method');\n          url = element.attr('action');\n          data = element.serializeArray();\n          // memoized value from clicked submit button\n          var button = element.data('ujs:submit-button');\n          if (button) {\n            data.push(button);\n            element.data('ujs:submit-button', null);\n          }\n        } else if (element.is(rails.inputChangeSelector)) {\n          method = element.data('method');\n          url = element.data('url');\n          data = element.serialize();\n          if (element.data('params')) data = data + \"&\" + element.data('params');\n        } else if (element.is(rails.buttonClickSelector)) {\n          method = element.data('method') || 'get';\n          url = element.data('url');\n          data = element.serialize();\n          if (element.data('params')) data = data + \"&\" + element.data('params');\n        } else {\n          method = element.data('method');\n          url = rails.href(element);\n          data = element.data('params') || null;\n        }\n\n        options = {\n          type: method || 'GET', data: data, dataType: dataType,\n          // stopping the \"ajax:beforeSend\" event will cancel the ajax request\n          beforeSend: function(xhr, settings) {\n            if (settings.dataType === undefined) {\n              xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);\n            }\n            if (rails.fire(element, 'ajax:beforeSend', [xhr, settings])) {\n              element.trigger('ajax:send', xhr);\n            } else {\n              return false;\n            }\n          },\n          success: function(data, status, xhr) {\n            element.trigger('ajax:success', [data, status, xhr]);\n          },\n          complete: function(xhr, status) {\n            element.trigger('ajax:complete', [xhr, status]);\n          },\n          error: function(xhr, status, error) {\n            element.trigger('ajax:error', [xhr, status, error]);\n          },\n          crossDomain: crossDomain\n        };\n\n        // There is no withCredentials for IE6-8 when\n        // \"Enable native XMLHTTP support\" is disabled\n        if (withCredentials) {\n          options.xhrFields = {\n            withCredentials: withCredentials\n          };\n        }\n\n        // Only pass url to `ajax` options if not blank\n        if (url) { options.url = url; }\n\n        return rails.ajax(options);\n      } else {\n        return false;\n      }\n    },\n\n    // Handles \"data-method\" on links such as:\n    // <a href=\"/users/5\" data-method=\"delete\" rel=\"nofollow\" data-confirm=\"Are you sure?\">Delete</a>\n    handleMethod: function(link) {\n      var href = rails.href(link),\n        method = link.data('method'),\n        target = link.attr('target'),\n        csrfToken = $('meta[name=csrf-token]').attr('content'),\n        csrfParam = $('meta[name=csrf-param]').attr('content'),\n        form = $('<form method=\"post\" action=\"' + href + '\"></form>'),\n        metadataInput = '<input name=\"_method\" value=\"' + method + '\" type=\"hidden\" />';\n\n      if (csrfParam !== undefined && csrfToken !== undefined) {\n        metadataInput += '<input name=\"' + csrfParam + '\" value=\"' + csrfToken + '\" type=\"hidden\" />';\n      }\n\n      if (target) { form.attr('target', target); }\n\n      form.hide().append(metadataInput).appendTo('body');\n      form.submit();\n    },\n\n    // Helper function that returns form elements that match the specified CSS selector\n    // If form is actually a \"form\" element this will return associated elements outside the from that have\n    // the html form attribute set\n    formElements: function(form, selector) {\n      return form.is('form') ? $(form[0].elements).filter(selector) : form.find(selector);\n    },\n\n    /* Disables form elements:\n      - Caches element value in 'ujs:enable-with' data store\n      - Replaces element text with value of 'data-disable-with' attribute\n      - Sets disabled property to true\n    */\n    disableFormElements: function(form) {\n      rails.formElements(form, rails.disableSelector).each(function() {\n        rails.disableFormElement($(this));\n      });\n    },\n\n    disableFormElement: function(element) {\n      var method, replacement;\n\n      method = element.is('button') ? 'html' : 'val';\n      replacement = element.data('disable-with');\n\n      element.data('ujs:enable-with', element[method]());\n      if (replacement !== undefined) {\n        element[method](replacement);\n      }\n\n      element.prop('disabled', true);\n    },\n\n    /* Re-enables disabled form elements:\n      - Replaces element text with cached value from 'ujs:enable-with' data store (created in `disableFormElements`)\n      - Sets disabled property to false\n    */\n    enableFormElements: function(form) {\n      rails.formElements(form, rails.enableSelector).each(function() {\n        rails.enableFormElement($(this));\n      });\n    },\n\n    enableFormElement: function(element) {\n      var method = element.is('button') ? 'html' : 'val';\n      if (element.data('ujs:enable-with')) element[method](element.data('ujs:enable-with'));\n      element.prop('disabled', false);\n    },\n\n   /* For 'data-confirm' attribute:\n      - Fires `confirm` event\n      - Shows the confirmation dialog\n      - Fires the `confirm:complete` event\n\n      Returns `true` if no function stops the chain and user chose yes; `false` otherwise.\n      Attaching a handler to the element's `confirm` event that returns a `falsy` value cancels the confirmation dialog.\n      Attaching a handler to the element's `confirm:complete` event that returns a `falsy` value makes this function\n      return false. The `confirm:complete` event is fired whether or not the user answered true or false to the dialog.\n   */\n    allowAction: function(element) {\n      var message = element.data('confirm'),\n          answer = false, callback;\n      if (!message) { return true; }\n\n      if (rails.fire(element, 'confirm')) {\n        answer = rails.confirm(message);\n        callback = rails.fire(element, 'confirm:complete', [answer]);\n      }\n      return answer && callback;\n    },\n\n    // Helper function which checks for blank inputs in a form that match the specified CSS selector\n    blankInputs: function(form, specifiedSelector, nonBlank) {\n      var inputs = $(), input, valueToCheck,\n          selector = specifiedSelector || 'input,textarea',\n          allInputs = form.find(selector);\n\n      allInputs.each(function() {\n        input = $(this);\n        valueToCheck = input.is('input[type=checkbox],input[type=radio]') ? input.is(':checked') : input.val();\n        // If nonBlank and valueToCheck are both truthy, or nonBlank and valueToCheck are both falsey\n        if (!valueToCheck === !nonBlank) {\n\n          // Don't count unchecked required radio if other radio with same name is checked\n          if (input.is('input[type=radio]') && allInputs.filter('input[type=radio]:checked[name=\"' + input.attr('name') + '\"]').length) {\n            return true; // Skip to next input\n          }\n\n          inputs = inputs.add(input);\n        }\n      });\n      return inputs.length ? inputs : false;\n    },\n\n    // Helper function which checks for non-blank inputs in a form that match the specified CSS selector\n    nonBlankInputs: function(form, specifiedSelector) {\n      return rails.blankInputs(form, specifiedSelector, true); // true specifies nonBlank\n    },\n\n    // Helper function, needed to provide consistent behavior in IE\n    stopEverything: function(e) {\n      $(e.target).trigger('ujs:everythingStopped');\n      e.stopImmediatePropagation();\n      return false;\n    },\n\n    //  replace element's html with the 'data-disable-with' after storing original html\n    //  and prevent clicking on it\n    disableElement: function(element) {\n      var replacement = element.data('disable-with');\n\n      element.data('ujs:enable-with', element.html()); // store enabled state\n      if (replacement !== undefined) {\n        element.html(replacement);\n      }\n\n      element.bind('click.railsDisable', function(e) { // prevent further clicking\n        return rails.stopEverything(e);\n      });\n    },\n\n    // restore element to its original state which was disabled by 'disableElement' above\n    enableElement: function(element) {\n      if (element.data('ujs:enable-with') !== undefined) {\n        element.html(element.data('ujs:enable-with')); // set to old enabled state\n        element.removeData('ujs:enable-with'); // clean up cache\n      }\n      element.unbind('click.railsDisable'); // enable element\n    }\n  };\n\n  if (rails.fire($document, 'rails:attachBindings')) {\n\n    $.ajaxPrefilter(function(options, originalOptions, xhr){ if ( !options.crossDomain ) { rails.CSRFProtection(xhr); }});\n\n    $document.delegate(rails.linkDisableSelector, 'ajax:complete', function() {\n        rails.enableElement($(this));\n    });\n\n    $document.delegate(rails.buttonDisableSelector, 'ajax:complete', function() {\n        rails.enableFormElement($(this));\n    });\n\n    $document.delegate(rails.linkClickSelector, 'click.rails', function(e) {\n      var link = $(this), method = link.data('method'), data = link.data('params'), metaClick = e.metaKey || e.ctrlKey;\n      if (!rails.allowAction(link)) return rails.stopEverything(e);\n\n      if (!metaClick && link.is(rails.linkDisableSelector)) rails.disableElement(link);\n\n      if (link.data('remote') !== undefined) {\n        if (metaClick && (!method || method === 'GET') && !data) { return true; }\n\n        var handleRemote = rails.handleRemote(link);\n        // response from rails.handleRemote() will either be false or a deferred object promise.\n        if (handleRemote === false) {\n          rails.enableElement(link);\n        } else {\n          handleRemote.error( function() { rails.enableElement(link); } );\n        }\n        return false;\n\n      } else if (link.data('method')) {\n        rails.handleMethod(link);\n        return false;\n      }\n    });\n\n    $document.delegate(rails.buttonClickSelector, 'click.rails', function(e) {\n      var button = $(this);\n      if (!rails.allowAction(button)) return rails.stopEverything(e);\n\n      if (button.is(rails.buttonDisableSelector)) rails.disableFormElement(button);\n\n      var handleRemote = rails.handleRemote(button);\n      // response from rails.handleRemote() will either be false or a deferred object promise.\n      if (handleRemote === false) {\n        rails.enableFormElement(button);\n      } else {\n        handleRemote.error( function() { rails.enableFormElement(button); } );\n      }\n      return false;\n    });\n\n    $document.delegate(rails.inputChangeSelector, 'change.rails', function(e) {\n      var link = $(this);\n      if (!rails.allowAction(link)) return rails.stopEverything(e);\n\n      rails.handleRemote(link);\n      return false;\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'submit.rails', function(e) {\n      var form = $(this),\n        remote = form.data('remote') !== undefined,\n        blankRequiredInputs,\n        nonBlankFileInputs;\n\n      if (!rails.allowAction(form)) return rails.stopEverything(e);\n\n      // skip other logic when required values are missing or file upload is present\n      if (form.attr('novalidate') == undefined) {\n        blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector);\n        if (blankRequiredInputs && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {\n          return rails.stopEverything(e);\n        }\n      }\n\n      if (remote) {\n        nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);\n        if (nonBlankFileInputs) {\n          // slight timeout so that the submit button gets properly serialized\n          // (make it easy for event handler to serialize form without disabled values)\n          setTimeout(function(){ rails.disableFormElements(form); }, 13);\n          var aborted = rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);\n\n          // re-enable form elements if event bindings return false (canceling normal form submission)\n          if (!aborted) { setTimeout(function(){ rails.enableFormElements(form); }, 13); }\n\n          return aborted;\n        }\n\n        rails.handleRemote(form);\n        return false;\n\n      } else {\n        // slight timeout so that the submit button gets properly serialized\n        setTimeout(function(){ rails.disableFormElements(form); }, 13);\n      }\n    });\n\n    $document.delegate(rails.formInputClickSelector, 'click.rails', function(event) {\n      var button = $(this);\n\n      if (!rails.allowAction(button)) return rails.stopEverything(event);\n\n      // register the pressed submit button\n      var name = button.attr('name'),\n        data = name ? {name:name, value:button.val()} : null;\n\n      button.closest('form').data('ujs:submit-button', data);\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'ajax:send.rails', function(event) {\n      if (this == event.target) rails.disableFormElements($(this));\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'ajax:complete.rails', function(event) {\n      if (this == event.target) rails.enableFormElements($(this));\n    });\n\n    $(function(){\n      rails.refreshCSRFTokens();\n    });\n  }\n\n})( jQuery );","/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('sifter', factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.Sifter = factory();\n    }\n}(this, function() {\n\n    /**\n     * Textually searches arrays and hashes of objects\n     * by property (or multiple properties). Designed\n     * specifically for autocomplete.\n     *\n     * @constructor\n     * @param {array|object} items\n     * @param {object} items\n     */\n    var Sifter = function(items, settings) {\n        this.items = items;\n        this.settings = settings || {diacritics: true};\n    };\n\n    /**\n     * Splits a search string into an array of individual\n     * regexps to be used to match results.\n     *\n     * @param {string} query\n     * @returns {array}\n     */\n    Sifter.prototype.tokenize = function(query) {\n        query = trim(String(query || '').toLowerCase());\n        if (!query || !query.length) return [];\n\n        var i, n, regex, letter;\n        var tokens = [];\n        var words = query.split(/ +/);\n\n        for (i = 0, n = words.length; i < n; i++) {\n            regex = escape_regex(words[i]);\n            if (this.settings.diacritics) {\n                for (letter in DIACRITICS) {\n                    if (DIACRITICS.hasOwnProperty(letter)) {\n                        regex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n                    }\n                }\n            }\n            tokens.push({\n                string : words[i],\n                regex  : new RegExp(regex, 'i')\n            });\n        }\n\n        return tokens;\n    };\n\n    /**\n     * Iterates over arrays and hashes.\n     *\n     * ```\n     * this.iterator(this.items, function(item, id) {\n     *    // invoked for each item\n     * });\n     * ```\n     *\n     * @param {array|object} object\n     */\n    Sifter.prototype.iterator = function(object, callback) {\n        var iterator;\n        if (is_array(object)) {\n            iterator = Array.prototype.forEach || function(callback) {\n                for (var i = 0, n = this.length; i < n; i++) {\n                    callback(this[i], i, this);\n                }\n            };\n        } else {\n            iterator = function(callback) {\n                for (var key in this) {\n                    if (this.hasOwnProperty(key)) {\n                        callback(this[key], key, this);\n                    }\n                }\n            };\n        }\n\n        iterator.apply(object, [callback]);\n    };\n\n    /**\n     * Returns a function to be used to score individual results.\n     *\n     * Good matches will have a higher score than poor matches.\n     * If an item is not a match, 0 will be returned by the function.\n     *\n     * @param {object|string} search\n     * @param {object} options (optional)\n     * @returns {function}\n     */\n    Sifter.prototype.getScoreFunction = function(search, options) {\n        var self, fields, tokens, token_count;\n\n        self        = this;\n        search      = self.prepareSearch(search, options);\n        tokens      = search.tokens;\n        fields      = search.options.fields;\n        token_count = tokens.length;\n\n        /**\n         * Calculates how close of a match the\n         * given value is against a search token.\n         *\n         * @param {mixed} value\n         * @param {object} token\n         * @return {number}\n         */\n        var scoreValue = function(value, token) {\n            var score, pos;\n\n            if (!value) return 0;\n            value = String(value || '');\n            pos = value.search(token.regex);\n            if (pos === -1) return 0;\n            score = token.string.length / value.length;\n            if (pos === 0) score += 0.5;\n            return score;\n        };\n\n        /**\n         * Calculates the score of an object\n         * against the search query.\n         *\n         * @param {object} token\n         * @param {object} data\n         * @return {number}\n         */\n        var scoreObject = (function() {\n            var field_count = fields.length;\n            if (!field_count) {\n                return function() { return 0; };\n            }\n            if (field_count === 1) {\n                return function(token, data) {\n                    return scoreValue(data[fields[0]], token);\n                };\n            }\n            return function(token, data) {\n                for (var i = 0, sum = 0; i < field_count; i++) {\n                    sum += scoreValue(data[fields[i]], token);\n                }\n                return sum / field_count;\n            };\n        })();\n\n        if (!token_count) {\n            return function() { return 0; };\n        }\n        if (token_count === 1) {\n            return function(data) {\n                return scoreObject(tokens[0], data);\n            };\n        }\n\n        if (search.options.conjunction === 'and') {\n            return function(data) {\n                var score;\n                for (var i = 0, sum = 0; i < token_count; i++) {\n                    score = scoreObject(tokens[i], data);\n                    if (score <= 0) return 0;\n                    sum += score;\n                }\n                return sum / token_count;\n            };\n        } else {\n            return function(data) {\n                for (var i = 0, sum = 0; i < token_count; i++) {\n                    sum += scoreObject(tokens[i], data);\n                }\n                return sum / token_count;\n            };\n        }\n    };\n\n    /**\n     * Returns a function that can be used to compare two\n     * results, for sorting purposes. If no sorting should\n     * be performed, `null` will be returned.\n     *\n     * @param {string|object} search\n     * @param {object} options\n     * @return function(a,b)\n     */\n    Sifter.prototype.getSortFunction = function(search, options) {\n        var i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n        self   = this;\n        search = self.prepareSearch(search, options);\n        sort   = (!search.query && options.sort_empty) || options.sort;\n\n        /**\n         * Fetches the specified sort field value\n         * from a search result item.\n         *\n         * @param  {string} name\n         * @param  {object} result\n         * @return {mixed}\n         */\n        get_field = function(name, result) {\n            if (name === '$score') return result.score;\n            return self.items[result.id][name];\n        };\n\n        // parse options\n        fields = [];\n        if (sort) {\n            for (i = 0, n = sort.length; i < n; i++) {\n                if (search.query || sort[i].field !== '$score') {\n                    fields.push(sort[i]);\n                }\n            }\n        }\n\n        // the \"$score\" field is implied to be the primary\n        // sort field, unless it's manually specified\n        if (search.query) {\n            implicit_score = true;\n            for (i = 0, n = fields.length; i < n; i++) {\n                if (fields[i].field === '$score') {\n                    implicit_score = false;\n                    break;\n                }\n            }\n            if (implicit_score) {\n                fields.unshift({field: '$score', direction: 'desc'});\n            }\n        } else {\n            for (i = 0, n = fields.length; i < n; i++) {\n                if (fields[i].field === '$score') {\n                    fields.splice(i, 1);\n                    break;\n                }\n            }\n        }\n\n        multipliers = [];\n        for (i = 0, n = fields.length; i < n; i++) {\n            multipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n        }\n\n        // build function\n        fields_count = fields.length;\n        if (!fields_count) {\n            return null;\n        } else if (fields_count === 1) {\n            field = fields[0].field;\n            multiplier = multipliers[0];\n            return function(a, b) {\n                return multiplier * cmp(\n                    get_field(field, a),\n                    get_field(field, b)\n                );\n            };\n        } else {\n            return function(a, b) {\n                var i, result, a_value, b_value, field;\n                for (i = 0; i < fields_count; i++) {\n                    field = fields[i].field;\n                    result = multipliers[i] * cmp(\n                        get_field(field, a),\n                        get_field(field, b)\n                    );\n                    if (result) return result;\n                }\n                return 0;\n            };\n        }\n    };\n\n    /**\n     * Parses a search query and returns an object\n     * with tokens and fields ready to be populated\n     * with results.\n     *\n     * @param {string} query\n     * @param {object} options\n     * @returns {object}\n     */\n    Sifter.prototype.prepareSearch = function(query, options) {\n        if (typeof query === 'object') return query;\n\n        options = extend({}, options);\n\n        var option_fields     = options.fields;\n        var option_sort       = options.sort;\n        var option_sort_empty = options.sort_empty;\n\n        if (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n        if (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n        if (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n        return {\n            options : options,\n            query   : String(query || '').toLowerCase(),\n            tokens  : this.tokenize(query),\n            total   : 0,\n            items   : []\n        };\n    };\n\n    /**\n     * Searches through all items and returns a sorted array of matches.\n     *\n     * The `options` parameter can contain:\n     *\n     *   - fields {string|array}\n     *   - sort {array}\n     *   - score {function}\n     *   - filter {bool}\n     *   - limit {integer}\n     *\n     * Returns an object containing:\n     *\n     *   - options {object}\n     *   - query {string}\n     *   - tokens {array}\n     *   - total {int}\n     *   - items {array}\n     *\n     * @param {string} query\n     * @param {object} options\n     * @returns {object}\n     */\n    Sifter.prototype.search = function(query, options) {\n        var self = this, value, score, search, calculateScore;\n        var fn_sort;\n        var fn_score;\n\n        search  = this.prepareSearch(query, options);\n        options = search.options;\n        query   = search.query;\n\n        // generate result scoring function\n        fn_score = options.score || self.getScoreFunction(search);\n\n        // perform search and sort\n        if (query.length) {\n            self.iterator(self.items, function(item, id) {\n                score = fn_score(item);\n                if (options.filter === false || score > 0) {\n                    search.items.push({'score': score, 'id': id});\n                }\n            });\n        } else {\n            self.iterator(self.items, function(item, id) {\n                search.items.push({'score': 1, 'id': id});\n            });\n        }\n\n        fn_sort = self.getSortFunction(search, options);\n        if (fn_sort) search.items.sort(fn_sort);\n\n        // apply limits\n        search.total = search.items.length;\n        if (typeof options.limit === 'number') {\n            search.items = search.items.slice(0, options.limit);\n        }\n\n        return search;\n    };\n\n    // utilities\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n    var cmp = function(a, b) {\n        if (typeof a === 'number' && typeof b === 'number') {\n            return a > b ? 1 : (a < b ? -1 : 0);\n        }\n        a = asciifold(String(a || ''));\n        b = asciifold(String(b || ''));\n        if (a > b) return 1;\n        if (b > a) return -1;\n        return 0;\n    };\n\n    var extend = function(a, b) {\n        var i, n, k, object;\n        for (i = 1, n = arguments.length; i < n; i++) {\n            object = arguments[i];\n            if (!object) continue;\n            for (k in object) {\n                if (object.hasOwnProperty(k)) {\n                    a[k] = object[k];\n                }\n            }\n        }\n        return a;\n    };\n\n    var trim = function(str) {\n        return (str + '').replace(/^\\s+|\\s+$|/g, '');\n    };\n\n    var escape_regex = function(str) {\n        return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    };\n\n    var is_array = Array.isArray || ($ && $.isArray) || function(object) {\n        return Object.prototype.toString.call(object) === '[object Array]';\n    };\n\n    var DIACRITICS = {\n        'a': '[aÀÁÂÃÄÅàáâãäåĀāąĄ]',\n        'c': '[cÇçćĆčČ]',\n        'd': '[dđĐďĎ]',\n        'e': '[eÈÉÊËèéêëěĚĒēęĘ]',\n        'i': '[iÌÍÎÏìíîïĪī]',\n        'l': '[lłŁ]',\n        'n': '[nÑñňŇńŃ]',\n        'o': '[oÒÓÔÕÕÖØòóôõöøŌō]',\n        'r': '[rřŘ]',\n        's': '[sŠšśŚ]',\n        't': '[tťŤ]',\n        'u': '[uÙÚÛÜùúûüůŮŪū]',\n        'y': '[yŸÿýÝ]',\n        'z': '[zŽžżŻźŹ]'\n    };\n\n    var asciifold = (function() {\n        var i, n, k, chunk;\n        var foreignletters = '';\n        var lookup = {};\n        for (k in DIACRITICS) {\n            if (DIACRITICS.hasOwnProperty(k)) {\n                chunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n                foreignletters += chunk;\n                for (i = 0, n = chunk.length; i < n; i++) {\n                    lookup[chunk.charAt(i)] = k;\n                }\n            }\n        }\n        var regexp = new RegExp('[' +  foreignletters + ']', 'g');\n        return function(str) {\n            return str.replace(regexp, function(foreignletter) {\n                return lookup[foreignletter];\n            }).toLowerCase();\n        };\n    })();\n\n\n    // export\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n    return Sifter;\n}));\n\n\n\n/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('microplugin', factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.MicroPlugin = factory();\n    }\n}(this, function() {\n    var MicroPlugin = {};\n\n    MicroPlugin.mixin = function(Interface) {\n        Interface.plugins = {};\n\n        /**\n         * Initializes the listed plugins (with options).\n         * Acceptable formats:\n         *\n         * List (without options):\n         *   ['a', 'b', 'c']\n         *\n         * List (with options):\n         *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n         *\n         * Hash (with options):\n         *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n         *\n         * @param {mixed} plugins\n         */\n        Interface.prototype.initializePlugins = function(plugins) {\n            var i, n, key;\n            var self  = this;\n            var queue = [];\n\n            self.plugins = {\n                names     : [],\n                settings  : {},\n                requested : {},\n                loaded    : {}\n            };\n\n            if (utils.isArray(plugins)) {\n                for (i = 0, n = plugins.length; i < n; i++) {\n                    if (typeof plugins[i] === 'string') {\n                        queue.push(plugins[i]);\n                    } else {\n                        self.plugins.settings[plugins[i].name] = plugins[i].options;\n                        queue.push(plugins[i].name);\n                    }\n                }\n            } else if (plugins) {\n                for (key in plugins) {\n                    if (plugins.hasOwnProperty(key)) {\n                        self.plugins.settings[key] = plugins[key];\n                        queue.push(key);\n                    }\n                }\n            }\n\n            while (queue.length) {\n                self.require(queue.shift());\n            }\n        };\n\n        Interface.prototype.loadPlugin = function(name) {\n            var self    = this;\n            var plugins = self.plugins;\n            var plugin  = Interface.plugins[name];\n\n            if (!Interface.plugins.hasOwnProperty(name)) {\n                throw new Error('Unable to find \"' +  name + '\" plugin');\n            }\n\n            plugins.requested[name] = true;\n            plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n            plugins.names.push(name);\n        };\n\n        /**\n         * Initializes a plugin.\n         *\n         * @param {string} name\n         */\n        Interface.prototype.require = function(name) {\n            var self = this;\n            var plugins = self.plugins;\n\n            if (!self.plugins.loaded.hasOwnProperty(name)) {\n                if (plugins.requested[name]) {\n                    throw new Error('Plugin has circular dependency (\"' + name + '\")');\n                }\n                self.loadPlugin(name);\n            }\n\n            return plugins.loaded[name];\n        };\n\n        /**\n         * Registers a plugin.\n         *\n         * @param {string} name\n         * @param {function} fn\n         */\n        Interface.define = function(name, fn) {\n            Interface.plugins[name] = {\n                'name' : name,\n                'fn'   : fn\n            };\n        };\n    };\n\n    var utils = {\n        isArray: Array.isArray || function(vArg) {\n            return Object.prototype.toString.call(vArg) === '[object Array]';\n        }\n    };\n\n    return MicroPlugin;\n}));\n\n/**\n * selectize.js (v0.12.0)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('selectize', ['jquery','sifter','microplugin'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n    } else {\n        root.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n    }\n}(this, function($, Sifter, MicroPlugin) {\n    'use strict';\n\n    var highlight = function($element, pattern) {\n        if (typeof pattern === 'string' && !pattern.length) return;\n        var regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n    \n        var highlight = function(node) {\n            var skip = 0;\n            if (node.nodeType === 3) {\n                var pos = node.data.search(regex);\n                if (pos >= 0 && node.data.length > 0) {\n                    var match = node.data.match(regex);\n                    var spannode = document.createElement('span');\n                    spannode.className = 'highlight';\n                    var middlebit = node.splitText(pos);\n                    var endbit = middlebit.splitText(match[0].length);\n                    var middleclone = middlebit.cloneNode(true);\n                    spannode.appendChild(middleclone);\n                    middlebit.parentNode.replaceChild(spannode, middlebit);\n                    skip = 1;\n                }\n            } else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n                for (var i = 0; i < node.childNodes.length; ++i) {\n                    i += highlight(node.childNodes[i]);\n                }\n            }\n            return skip;\n        };\n    \n        return $element.each(function() {\n            highlight(this);\n        });\n    };\n    \n    var MicroEvent = function() {};\n    MicroEvent.prototype = {\n        on: function(event, fct){\n            this._events = this._events || {};\n            this._events[event] = this._events[event] || [];\n            this._events[event].push(fct);\n        },\n        off: function(event, fct){\n            var n = arguments.length;\n            if (n === 0) return delete this._events;\n            if (n === 1) return delete this._events[event];\n    \n            this._events = this._events || {};\n            if (event in this._events === false) return;\n            this._events[event].splice(this._events[event].indexOf(fct), 1);\n        },\n        trigger: function(event /* , args... */){\n            this._events = this._events || {};\n            if (event in this._events === false) return;\n            for (var i = 0; i < this._events[event].length; i++){\n                this._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n    };\n    \n    /**\n     * Mixin will delegate all MicroEvent.js function in the destination object.\n     *\n     * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n     *\n     * @param {object} the object which will support MicroEvent\n     */\n    MicroEvent.mixin = function(destObject){\n        var props = ['on', 'off', 'trigger'];\n        for (var i = 0; i < props.length; i++){\n            destObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n        }\n    };\n    \n    var IS_MAC        = /Mac/.test(navigator.userAgent);\n    \n    var KEY_A         = 65;\n    var KEY_COMMA     = 188;\n    var KEY_RETURN    = 13;\n    var KEY_ESC       = 27;\n    var KEY_LEFT      = 37;\n    var KEY_UP        = 38;\n    var KEY_P         = 80;\n    var KEY_RIGHT     = 39;\n    var KEY_DOWN      = 40;\n    var KEY_N         = 78;\n    var KEY_BACKSPACE = 8;\n    var KEY_DELETE    = 46;\n    var KEY_SHIFT     = 16;\n    var KEY_CMD       = IS_MAC ? 91 : 17;\n    var KEY_CTRL      = IS_MAC ? 18 : 17;\n    var KEY_TAB       = 9;\n    \n    var TAG_SELECT    = 1;\n    var TAG_INPUT     = 2;\n    \n    // for now, android support in general is too spotty to support validity\n    var SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('form').validity;\n    \n    var isset = function(object) {\n        return typeof object !== 'undefined';\n    };\n    \n    /**\n     * Converts a scalar to its best string representation\n     * for hash keys and HTML attribute values.\n     *\n     * Transformations:\n     *   'str'     -> 'str'\n     *   null      -> ''\n     *   undefined -> ''\n     *   true      -> '1'\n     *   false     -> '0'\n     *   0         -> '0'\n     *   1         -> '1'\n     *\n     * @param {string} value\n     * @returns {string|null}\n     */\n    var hash_key = function(value) {\n        if (typeof value === 'undefined' || value === null) return null;\n        if (typeof value === 'boolean') return value ? '1' : '0';\n        return value + '';\n    };\n    \n    /**\n     * Escapes a string for use within HTML.\n     *\n     * @param {string} str\n     * @returns {string}\n     */\n    var escape_html = function(str) {\n        return (str + '')\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;');\n    };\n    \n    /**\n     * Escapes \"$\" characters in replacement strings.\n     *\n     * @param {string} str\n     * @returns {string}\n     */\n    var escape_replace = function(str) {\n        return (str + '').replace(/\\$/g, '$$$$');\n    };\n    \n    var hook = {};\n    \n    /**\n     * Wraps `method` on `self` so that `fn`\n     * is invoked before the original method.\n     *\n     * @param {object} self\n     * @param {string} method\n     * @param {function} fn\n     */\n    hook.before = function(self, method, fn) {\n        var original = self[method];\n        self[method] = function() {\n            fn.apply(self, arguments);\n            return original.apply(self, arguments);\n        };\n    };\n    \n    /**\n     * Wraps `method` on `self` so that `fn`\n     * is invoked after the original method.\n     *\n     * @param {object} self\n     * @param {string} method\n     * @param {function} fn\n     */\n    hook.after = function(self, method, fn) {\n        var original = self[method];\n        self[method] = function() {\n            var result = original.apply(self, arguments);\n            fn.apply(self, arguments);\n            return result;\n        };\n    };\n    \n    /**\n     * Wraps `fn` so that it can only be invoked once.\n     *\n     * @param {function} fn\n     * @returns {function}\n     */\n    var once = function(fn) {\n        var called = false;\n        return function() {\n            if (called) return;\n            called = true;\n            fn.apply(this, arguments);\n        };\n    };\n    \n    /**\n     * Wraps `fn` so that it can only be called once\n     * every `delay` milliseconds (invoked on the falling edge).\n     *\n     * @param {function} fn\n     * @param {int} delay\n     * @returns {function}\n     */\n    var debounce = function(fn, delay) {\n        var timeout;\n        return function() {\n            var self = this;\n            var args = arguments;\n            window.clearTimeout(timeout);\n            timeout = window.setTimeout(function() {\n                fn.apply(self, args);\n            }, delay);\n        };\n    };\n    \n    /**\n     * Debounce all fired events types listed in `types`\n     * while executing the provided `fn`.\n     *\n     * @param {object} self\n     * @param {array} types\n     * @param {function} fn\n     */\n    var debounce_events = function(self, types, fn) {\n        var type;\n        var trigger = self.trigger;\n        var event_args = {};\n    \n        // override trigger method\n        self.trigger = function() {\n            var type = arguments[0];\n            if (types.indexOf(type) !== -1) {\n                event_args[type] = arguments;\n            } else {\n                return trigger.apply(self, arguments);\n            }\n        };\n    \n        // invoke provided function\n        fn.apply(self, []);\n        self.trigger = trigger;\n    \n        // trigger queued events\n        for (type in event_args) {\n            if (event_args.hasOwnProperty(type)) {\n                trigger.apply(self, event_args[type]);\n            }\n        }\n    };\n    \n    /**\n     * A workaround for http://bugs.jquery.com/ticket/6696\n     *\n     * @param {object} $parent - Parent element to listen on.\n     * @param {string} event - Event name.\n     * @param {string} selector - Descendant selector to filter by.\n     * @param {function} fn - Event handler.\n     */\n    var watchChildEvent = function($parent, event, selector, fn) {\n        $parent.on(event, selector, function(e) {\n            var child = e.target;\n            while (child && child.parentNode !== $parent[0]) {\n                child = child.parentNode;\n            }\n            e.currentTarget = child;\n            return fn.apply(this, [e]);\n        });\n    };\n    \n    /**\n     * Determines the current selection within a text input control.\n     * Returns an object containing:\n     *   - start\n     *   - length\n     *\n     * @param {object} input\n     * @returns {object}\n     */\n    var getSelection = function(input) {\n        var result = {};\n        if ('selectionStart' in input) {\n            result.start = input.selectionStart;\n            result.length = input.selectionEnd - result.start;\n        } else if (document.selection) {\n            input.focus();\n            var sel = document.selection.createRange();\n            var selLen = document.selection.createRange().text.length;\n            sel.moveStart('character', -input.value.length);\n            result.start = sel.text.length - selLen;\n            result.length = selLen;\n        }\n        return result;\n    };\n    \n    /**\n     * Copies CSS properties from one element to another.\n     *\n     * @param {object} $from\n     * @param {object} $to\n     * @param {array} properties\n     */\n    var transferStyles = function($from, $to, properties) {\n        var i, n, styles = {};\n        if (properties) {\n            for (i = 0, n = properties.length; i < n; i++) {\n                styles[properties[i]] = $from.css(properties[i]);\n            }\n        } else {\n            styles = $from.css();\n        }\n        $to.css(styles);\n    };\n    \n    /**\n     * Measures the width of a string within a\n     * parent element (in pixels).\n     *\n     * @param {string} str\n     * @param {object} $parent\n     * @returns {int}\n     */\n    var measureString = function(str, $parent) {\n        if (!str) {\n            return 0;\n        }\n    \n        var $test = $('<test>').css({\n            position: 'absolute',\n            top: -99999,\n            left: -99999,\n            width: 'auto',\n            padding: 0,\n            whiteSpace: 'pre'\n        }).text(str).appendTo('body');\n    \n        transferStyles($parent, $test, [\n            'letterSpacing',\n            'fontSize',\n            'fontFamily',\n            'fontWeight',\n            'textTransform'\n        ]);\n    \n        var width = $test.width();\n        $test.remove();\n    \n        return width;\n    };\n    \n    /**\n     * Sets up an input to grow horizontally as the user\n     * types. If the value is changed manually, you can\n     * trigger the \"update\" handler to resize:\n     *\n     * $input.trigger('update');\n     *\n     * @param {object} $input\n     */\n    var autoGrow = function($input) {\n        var currentWidth = null;\n    \n        var update = function(e, options) {\n            var value, keyCode, printable, placeholder, width;\n            var shift, character, selection;\n            e = e || window.event || {};\n            options = options || {};\n    \n            if (e.metaKey || e.altKey) return;\n            if (!options.force && $input.data('grow') === false) return;\n    \n            value = $input.val();\n            if (e.type && e.type.toLowerCase() === 'keydown') {\n                keyCode = e.keyCode;\n                printable = (\n                    (keyCode >= 97 && keyCode <= 122) || // a-z\n                    (keyCode >= 65 && keyCode <= 90)  || // A-Z\n                    (keyCode >= 48 && keyCode <= 57)  || // 0-9\n                    keyCode === 32 // space\n                );\n    \n                if (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n                    selection = getSelection($input[0]);\n                    if (selection.length) {\n                        value = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n                    } else if (keyCode === KEY_BACKSPACE && selection.start) {\n                        value = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n                    } else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n                        value = value.substring(0, selection.start) + value.substring(selection.start + 1);\n                    }\n                } else if (printable) {\n                    shift = e.shiftKey;\n                    character = String.fromCharCode(e.keyCode);\n                    if (shift) character = character.toUpperCase();\n                    else character = character.toLowerCase();\n                    value += character;\n                }\n            }\n    \n            placeholder = $input.attr('placeholder');\n            if (!value && placeholder) {\n                value = placeholder;\n            }\n    \n            width = measureString(value, $input) + 4;\n            if (width !== currentWidth) {\n                currentWidth = width;\n                $input.width(width);\n                $input.triggerHandler('resize');\n            }\n        };\n    \n        $input.on('keydown keyup update blur', update);\n        update();\n    };\n    \n    var Selectize = function($input, settings) {\n        var key, i, n, dir, input, self = this;\n        input = $input[0];\n        input.selectize = self;\n    \n        // detect rtl environment\n        var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n        dir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n        dir = dir || $input.parents('[dir]:first').attr('dir') || '';\n    \n        // setup default state\n        $.extend(self, {\n            order            : 0,\n            settings         : settings,\n            $input           : $input,\n            tabIndex         : $input.attr('tabindex') || '',\n            tagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n            rtl              : /rtl/i.test(dir),\n    \n            eventNS          : '.selectize' + (++Selectize.count),\n            highlightedValue : null,\n            isOpen           : false,\n            isDisabled       : false,\n            isRequired       : $input.is('[required]'),\n            isInvalid        : false,\n            isLocked         : false,\n            isFocused        : false,\n            isInputHidden    : false,\n            isSetup          : false,\n            isShiftDown      : false,\n            isCmdDown        : false,\n            isCtrlDown       : false,\n            ignoreFocus      : false,\n            ignoreBlur       : false,\n            ignoreHover      : false,\n            hasOptions       : false,\n            currentResults   : null,\n            lastValue        : '',\n            caretPos         : 0,\n            loading          : 0,\n            loadedSearches   : {},\n    \n            $activeOption    : null,\n            $activeItems     : [],\n    \n            optgroups        : {},\n            options          : {},\n            userOptions      : {},\n            items            : [],\n            renderCache      : {},\n            onSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n        });\n    \n        // search system\n        self.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n    \n        // build options table\n        if (self.settings.options) {\n            for (i = 0, n = self.settings.options.length; i < n; i++) {\n                self.registerOption(self.settings.options[i]);\n            }\n            delete self.settings.options;\n        }\n    \n        // build optgroup table\n        if (self.settings.optgroups) {\n            for (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n                self.registerOptionGroup(self.settings.optgroups[i]);\n            }\n            delete self.settings.optgroups;\n        }\n    \n        // option-dependent defaults\n        self.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n        if (typeof self.settings.hideSelected !== 'boolean') {\n            self.settings.hideSelected = self.settings.mode === 'multi';\n        }\n    \n        self.initializePlugins(self.settings.plugins);\n        self.setupCallbacks();\n        self.setupTemplates();\n        self.setup();\n    };\n    \n    // mixins\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    \n    MicroEvent.mixin(Selectize);\n    MicroPlugin.mixin(Selectize);\n    \n    // methods\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n    \n    $.extend(Selectize.prototype, {\n    \n        /**\n         * Creates all elements and sets up event bindings.\n         */\n        setup: function() {\n            var self      = this;\n            var settings  = self.settings;\n            var eventNS   = self.eventNS;\n            var $window   = $(window);\n            var $document = $(document);\n            var $input    = self.$input;\n    \n            var $wrapper;\n            var $control;\n            var $control_input;\n            var $dropdown;\n            var $dropdown_content;\n            var $dropdown_parent;\n            var inputMode;\n            var timeout_blur;\n            var timeout_focus;\n            var classes;\n            var classes_plugins;\n    \n            inputMode         = self.settings.mode;\n            classes           = $input.attr('class') || '';\n    \n            $wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n            $control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n            $control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n            $dropdown_parent  = $(settings.dropdownParent || $wrapper);\n            $dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n            $dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n    \n            if(self.settings.copyClassesToDropdown) {\n                $dropdown.addClass(classes);\n            }\n    \n            $wrapper.css({\n                width: $input[0].style.width\n            });\n    \n            if (self.plugins.names.length) {\n                classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n                $wrapper.addClass(classes_plugins);\n                $dropdown.addClass(classes_plugins);\n            }\n    \n            if ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n                $input.attr('multiple', 'multiple');\n            }\n    \n            if (self.settings.placeholder) {\n                $control_input.attr('placeholder', settings.placeholder);\n            }\n    \n            // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n            if (!self.settings.splitOn && self.settings.delimiter) {\n                var delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                self.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n            }\n    \n            if ($input.attr('autocorrect')) {\n                $control_input.attr('autocorrect', $input.attr('autocorrect'));\n            }\n    \n            if ($input.attr('autocapitalize')) {\n                $control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n            }\n    \n            self.$wrapper          = $wrapper;\n            self.$control          = $control;\n            self.$control_input    = $control_input;\n            self.$dropdown         = $dropdown;\n            self.$dropdown_content = $dropdown_content;\n    \n            $dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n            $dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n            watchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n            autoGrow($control_input);\n    \n            $control.on({\n                mousedown : function() { return self.onMouseDown.apply(self, arguments); },\n                click     : function() { return self.onClick.apply(self, arguments); }\n            });\n    \n            $control_input.on({\n                mousedown : function(e) { e.stopPropagation(); },\n                keydown   : function() { return self.onKeyDown.apply(self, arguments); },\n                keyup     : function() { return self.onKeyUp.apply(self, arguments); },\n                keypress  : function() { return self.onKeyPress.apply(self, arguments); },\n                resize    : function() { self.positionDropdown.apply(self, []); },\n                blur      : function() { return self.onBlur.apply(self, arguments); },\n                focus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n                paste     : function() { return self.onPaste.apply(self, arguments); }\n            });\n    \n            $document.on('keydown' + eventNS, function(e) {\n                self.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n                self.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n                self.isShiftDown = e.shiftKey;\n            });\n    \n            $document.on('keyup' + eventNS, function(e) {\n                if (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n                if (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n                if (e.keyCode === KEY_CMD) self.isCmdDown = false;\n            });\n    \n            $document.on('mousedown' + eventNS, function(e) {\n                if (self.isFocused) {\n                    // prevent events on the dropdown scrollbar from causing the control to blur\n                    if (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n                        return false;\n                    }\n                    // blur on click outside\n                    if (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n                        self.blur(e.target);\n                    }\n                }\n            });\n    \n            $window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n                if (self.isOpen) {\n                    self.positionDropdown.apply(self, arguments);\n                }\n            });\n            $window.on('mousemove' + eventNS, function() {\n                self.ignoreHover = false;\n            });\n    \n            // store original children and tab index so that they can be\n            // restored when the destroy() method is called.\n            this.revertSettings = {\n                $children : $input.children().detach(),\n                tabindex  : $input.attr('tabindex')\n            };\n    \n            $input.attr('tabindex', -1).hide().after(self.$wrapper);\n    \n            if ($.isArray(settings.items)) {\n                self.setValue(settings.items);\n                delete settings.items;\n            }\n    \n            // feature detect for the validation API\n            if (SUPPORTS_VALIDITY_API) {\n                $input.on('invalid' + eventNS, function(e) {\n                    e.preventDefault();\n                    self.isInvalid = true;\n                    self.refreshState();\n                });\n            }\n    \n            self.updateOriginalInput();\n            self.refreshItems();\n            self.refreshState();\n            self.updatePlaceholder();\n            self.isSetup = true;\n    \n            if ($input.is(':disabled')) {\n                self.disable();\n            }\n    \n            self.on('change', this.onChange);\n    \n            $input.data('selectize', self);\n            $input.addClass('selectized');\n            self.trigger('initialize');\n    \n            // preload options\n            if (settings.preload === true) {\n                self.onSearchChange('');\n            }\n    \n        },\n    \n        /**\n         * Sets up default rendering functions.\n         */\n        setupTemplates: function() {\n            var self = this;\n            var field_label = self.settings.labelField;\n            var field_optgroup = self.settings.optgroupLabelField;\n    \n            var templates = {\n                'optgroup': function(data) {\n                    return '<div class=\"optgroup\">' + data.html + '</div>';\n                },\n                'optgroup_header': function(data, escape) {\n                    return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n                },\n                'option': function(data, escape) {\n                    return '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n                },\n                'item': function(data, escape) {\n                    return '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n                },\n                'option_create': function(data, escape) {\n                    return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n                }\n            };\n    \n            self.settings.render = $.extend({}, templates, self.settings.render);\n        },\n    \n        /**\n         * Maps fired events to callbacks provided\n         * in the settings used when creating the control.\n         */\n        setupCallbacks: function() {\n            var key, fn, callbacks = {\n                'initialize'      : 'onInitialize',\n                'change'          : 'onChange',\n                'item_add'        : 'onItemAdd',\n                'item_remove'     : 'onItemRemove',\n                'clear'           : 'onClear',\n                'option_add'      : 'onOptionAdd',\n                'option_remove'   : 'onOptionRemove',\n                'option_clear'    : 'onOptionClear',\n                'optgroup_add'    : 'onOptionGroupAdd',\n                'optgroup_remove' : 'onOptionGroupRemove',\n                'optgroup_clear'  : 'onOptionGroupClear',\n                'dropdown_open'   : 'onDropdownOpen',\n                'dropdown_close'  : 'onDropdownClose',\n                'type'            : 'onType',\n                'load'            : 'onLoad',\n                'focus'           : 'onFocus',\n                'blur'            : 'onBlur'\n            };\n    \n            for (key in callbacks) {\n                if (callbacks.hasOwnProperty(key)) {\n                    fn = this.settings[callbacks[key]];\n                    if (fn) this.on(key, fn);\n                }\n            }\n        },\n    \n        /**\n         * Triggered when the main control element\n         * has a click event.\n         *\n         * @param {object} e\n         * @return {boolean}\n         */\n        onClick: function(e) {\n            var self = this;\n    \n            // necessary for mobile webkit devices (manual focus triggering\n            // is ignored unless invoked within a click event)\n            if (!self.isFocused) {\n                self.focus();\n                e.preventDefault();\n            }\n        },\n    \n        /**\n         * Triggered when the main control element\n         * has a mouse down event.\n         *\n         * @param {object} e\n         * @return {boolean}\n         */\n        onMouseDown: function(e) {\n            var self = this;\n            var defaultPrevented = e.isDefaultPrevented();\n            var $target = $(e.target);\n    \n            if (self.isFocused) {\n                // retain focus by preventing native handling. if the\n                // event target is the input it should not be modified.\n                // otherwise, text selection within the input won't work.\n                if (e.target !== self.$control_input[0]) {\n                    if (self.settings.mode === 'single') {\n                        // toggle dropdown\n                        self.isOpen ? self.close() : self.open();\n                    } else if (!defaultPrevented) {\n                        self.setActiveItem(null);\n                    }\n                    return false;\n                }\n            } else {\n                // give control focus\n                if (!defaultPrevented) {\n                    window.setTimeout(function() {\n                        self.focus();\n                    }, 0);\n                }\n            }\n        },\n    \n        /**\n         * Triggered when the value of the control has been changed.\n         * This should propagate the event to the original DOM\n         * input / select element.\n         */\n        onChange: function() {\n            this.$input.trigger('change');\n        },\n    \n        /**\n         * Triggered on <input> paste.\n         *\n         * @param {object} e\n         * @returns {boolean}\n         */\n        onPaste: function(e) {\n            var self = this;\n            if (self.isFull() || self.isInputHidden || self.isLocked) {\n                e.preventDefault();\n            } else {\n                // If a regex or string is included, this will split the pasted\n                // input and create Items for each separate value\n                if (self.settings.splitOn) {\n                    setTimeout(function() {\n                        var splitInput = $.trim(self.$control_input.val() || '').split(self.settings.splitOn);\n                        for (var i = 0, n = splitInput.length; i < n; i++) {\n                            self.createItem(splitInput[i]);\n                        }\n                    }, 0);\n                }\n            }\n        },\n    \n        /**\n         * Triggered on <input> keypress.\n         *\n         * @param {object} e\n         * @returns {boolean}\n         */\n        onKeyPress: function(e) {\n            if (this.isLocked) return e && e.preventDefault();\n            var character = String.fromCharCode(e.keyCode || e.which);\n            if (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n                this.createItem();\n                e.preventDefault();\n                return false;\n            }\n        },\n    \n        /**\n         * Triggered on <input> keydown.\n         *\n         * @param {object} e\n         * @returns {boolean}\n         */\n        onKeyDown: function(e) {\n            var isInput = e.target === this.$control_input[0];\n            var self = this;\n    \n            if (self.isLocked) {\n                if (e.keyCode !== KEY_TAB) {\n                    e.preventDefault();\n                }\n                return;\n            }\n    \n            switch (e.keyCode) {\n                case KEY_A:\n                    if (self.isCmdDown) {\n                        self.selectAll();\n                        return;\n                    }\n                    break;\n                case KEY_ESC:\n                    if (self.isOpen) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        self.close();\n                    }\n                    return;\n                case KEY_N:\n                    if (!e.ctrlKey || e.altKey) break;\n                case KEY_DOWN:\n                    if (!self.isOpen && self.hasOptions) {\n                        self.open();\n                    } else if (self.$activeOption) {\n                        self.ignoreHover = true;\n                        var $next = self.getAdjacentOption(self.$activeOption, 1);\n                        if ($next.length) self.setActiveOption($next, true, true);\n                    }\n                    e.preventDefault();\n                    return;\n                case KEY_P:\n                    if (!e.ctrlKey || e.altKey) break;\n                case KEY_UP:\n                    if (self.$activeOption) {\n                        self.ignoreHover = true;\n                        var $prev = self.getAdjacentOption(self.$activeOption, -1);\n                        if ($prev.length) self.setActiveOption($prev, true, true);\n                    }\n                    e.preventDefault();\n                    return;\n                case KEY_RETURN:\n                    if (self.isOpen && self.$activeOption) {\n                        self.onOptionSelect({currentTarget: self.$activeOption});\n                        e.preventDefault();\n                    }\n                    return;\n                case KEY_LEFT:\n                    self.advanceSelection(-1, e);\n                    return;\n                case KEY_RIGHT:\n                    self.advanceSelection(1, e);\n                    return;\n                case KEY_TAB:\n                    if (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n                        self.onOptionSelect({currentTarget: self.$activeOption});\n    \n                        // Default behaviour is to jump to the next field, we only want this\n                        // if the current field doesn't accept any more entries\n                        if (!self.isFull()) {\n                            e.preventDefault();\n                        }\n                    }\n                    if (self.settings.create && self.createItem()) {\n                        e.preventDefault();\n                    }\n                    return;\n                case KEY_BACKSPACE:\n                case KEY_DELETE:\n                    self.deleteSelection(e);\n                    return;\n            }\n    \n            if ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n                e.preventDefault();\n                return;\n            }\n        },\n    \n        /**\n         * Triggered on <input> keyup.\n         *\n         * @param {object} e\n         * @returns {boolean}\n         */\n        onKeyUp: function(e) {\n            var self = this;\n    \n            if (self.isLocked) return e && e.preventDefault();\n            var value = self.$control_input.val() || '';\n            if (self.lastValue !== value) {\n                self.lastValue = value;\n                self.onSearchChange(value);\n                self.refreshOptions();\n                self.trigger('type', value);\n            }\n        },\n    \n        /**\n         * Invokes the user-provide option provider / loader.\n         *\n         * Note: this function is debounced in the Selectize\n         * constructor (by `settings.loadDelay` milliseconds)\n         *\n         * @param {string} value\n         */\n        onSearchChange: function(value) {\n            var self = this;\n            var fn = self.settings.load;\n            if (!fn) return;\n            if (self.loadedSearches.hasOwnProperty(value)) return;\n            self.loadedSearches[value] = true;\n            self.load(function(callback) {\n                fn.apply(self, [value, callback]);\n            });\n        },\n    \n        /**\n         * Triggered on <input> focus.\n         *\n         * @param {object} e (optional)\n         * @returns {boolean}\n         */\n        onFocus: function(e) {\n            var self = this;\n            var wasFocused = self.isFocused;\n    \n            if (self.isDisabled) {\n                self.blur();\n                e && e.preventDefault();\n                return false;\n            }\n    \n            if (self.ignoreFocus) return;\n            self.isFocused = true;\n            if (self.settings.preload === 'focus') self.onSearchChange('');\n    \n            if (!wasFocused) self.trigger('focus');\n    \n            if (!self.$activeItems.length) {\n                self.showInput();\n                self.setActiveItem(null);\n                self.refreshOptions(!!self.settings.openOnFocus);\n            }\n    \n            self.refreshState();\n        },\n    \n        /**\n         * Triggered on <input> blur.\n         *\n         * @param {object} e\n         * @param {Element} dest\n         */\n        onBlur: function(e, dest) {\n            var self = this;\n            if (!self.isFocused) return;\n            self.isFocused = false;\n    \n            if (self.ignoreFocus) {\n                return;\n            } else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n                // necessary to prevent IE closing the dropdown when the scrollbar is clicked\n                self.ignoreBlur = true;\n                self.onFocus(e);\n                return;\n            }\n    \n            var deactivate = function() {\n                self.close();\n                self.setTextboxValue('');\n                self.setActiveItem(null);\n                self.setActiveOption(null);\n                self.setCaret(self.items.length);\n                self.refreshState();\n    \n                // IE11 bug: element still marked as active\n                (dest || document.body).focus();\n    \n                self.ignoreFocus = false;\n                self.trigger('blur');\n            };\n    \n            self.ignoreFocus = true;\n            if (self.settings.create && self.settings.createOnBlur) {\n                self.createItem(null, false, deactivate);\n            } else {\n                deactivate();\n            }\n        },\n    \n        /**\n         * Triggered when the user rolls over\n         * an option in the autocomplete dropdown menu.\n         *\n         * @param {object} e\n         * @returns {boolean}\n         */\n        onOptionHover: function(e) {\n            if (this.ignoreHover) return;\n            this.setActiveOption(e.currentTarget, false);\n        },\n    \n        /**\n         * Triggered when the user clicks on an option\n         * in the autocomplete dropdown menu.\n         *\n         * @param {object} e\n         * @returns {boolean}\n         */\n        onOptionSelect: function(e) {\n            var value, $target, $option, self = this;\n    \n            if (e.preventDefault) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n    \n            $target = $(e.currentTarget);\n            if ($target.hasClass('create')) {\n                self.createItem(null, function() {\n                    if (self.settings.closeAfterSelect) {\n                        self.close();\n                    }\n                });\n            } else {\n                value = $target.attr('data-value');\n                if (typeof value !== 'undefined') {\n                    self.lastQuery = null;\n                    self.setTextboxValue('');\n                    self.addItem(value);\n                    if (self.settings.closeAfterSelect) {\n                        self.close();\n                    } else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n                        self.setActiveOption(self.getOption(value));\n                    }\n                }\n            }\n        },\n    \n        /**\n         * Triggered when the user clicks on an item\n         * that has been selected.\n         *\n         * @param {object} e\n         * @returns {boolean}\n         */\n        onItemSelect: function(e) {\n            var self = this;\n    \n            if (self.isLocked) return;\n            if (self.settings.mode === 'multi') {\n                e.preventDefault();\n                self.setActiveItem(e.currentTarget, e);\n            }\n        },\n    \n        /**\n         * Invokes the provided method that provides\n         * results to a callback---which are then added\n         * as options to the control.\n         *\n         * @param {function} fn\n         */\n        load: function(fn) {\n            var self = this;\n            var $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n    \n            self.loading++;\n            fn.apply(self, [function(results) {\n                self.loading = Math.max(self.loading - 1, 0);\n                if (results && results.length) {\n                    self.addOption(results);\n                    self.refreshOptions(self.isFocused && !self.isInputHidden);\n                }\n                if (!self.loading) {\n                    $wrapper.removeClass(self.settings.loadingClass);\n                }\n                self.trigger('load', results);\n            }]);\n        },\n    \n        /**\n         * Sets the input field of the control to the specified value.\n         *\n         * @param {string} value\n         */\n        setTextboxValue: function(value) {\n            var $input = this.$control_input;\n            var changed = $input.val() !== value;\n            if (changed) {\n                $input.val(value).triggerHandler('update');\n                this.lastValue = value;\n            }\n        },\n    \n        /**\n         * Returns the value of the control. If multiple items\n         * can be selected (e.g. <select multiple>), this returns\n         * an array. If only one item can be selected, this\n         * returns a string.\n         *\n         * @returns {mixed}\n         */\n        getValue: function() {\n            if (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n                return this.items;\n            } else {\n                return this.items.join(this.settings.delimiter);\n            }\n        },\n    \n        /**\n         * Resets the selected items to the given value.\n         *\n         * @param {mixed} value\n         */\n        setValue: function(value, silent) {\n            var events = silent ? [] : ['change'];\n    \n            debounce_events(this, events, function() {\n                this.clear();\n                this.addItems(value, silent);\n            });\n        },\n    \n        /**\n         * Sets the selected item.\n         *\n         * @param {object} $item\n         * @param {object} e (optional)\n         */\n        setActiveItem: function($item, e) {\n            var self = this;\n            var eventName;\n            var i, idx, begin, end, item, swap;\n            var $last;\n    \n            if (self.settings.mode === 'single') return;\n            $item = $($item);\n    \n            // clear the active selection\n            if (!$item.length) {\n                $(self.$activeItems).removeClass('active');\n                self.$activeItems = [];\n                if (self.isFocused) {\n                    self.showInput();\n                }\n                return;\n            }\n    \n            // modify selection\n            eventName = e && e.type.toLowerCase();\n    \n            if (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n                $last = self.$control.children('.active:last');\n                begin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n                end   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n                if (begin > end) {\n                    swap  = begin;\n                    begin = end;\n                    end   = swap;\n                }\n                for (i = begin; i <= end; i++) {\n                    item = self.$control[0].childNodes[i];\n                    if (self.$activeItems.indexOf(item) === -1) {\n                        $(item).addClass('active');\n                        self.$activeItems.push(item);\n                    }\n                }\n                e.preventDefault();\n            } else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n                if ($item.hasClass('active')) {\n                    idx = self.$activeItems.indexOf($item[0]);\n                    self.$activeItems.splice(idx, 1);\n                    $item.removeClass('active');\n                } else {\n                    self.$activeItems.push($item.addClass('active')[0]);\n                }\n            } else {\n                $(self.$activeItems).removeClass('active');\n                self.$activeItems = [$item.addClass('active')[0]];\n            }\n    \n            // ensure control has focus\n            self.hideInput();\n            if (!this.isFocused) {\n                self.focus();\n            }\n        },\n    \n        /**\n         * Sets the selected item in the dropdown menu\n         * of available options.\n         *\n         * @param {object} $object\n         * @param {boolean} scroll\n         * @param {boolean} animate\n         */\n        setActiveOption: function($option, scroll, animate) {\n            var height_menu, height_item, y;\n            var scroll_top, scroll_bottom;\n            var self = this;\n    \n            if (self.$activeOption) self.$activeOption.removeClass('active');\n            self.$activeOption = null;\n    \n            $option = $($option);\n            if (!$option.length) return;\n    \n            self.$activeOption = $option.addClass('active');\n    \n            if (scroll || !isset(scroll)) {\n    \n                height_menu   = self.$dropdown_content.height();\n                height_item   = self.$activeOption.outerHeight(true);\n                scroll        = self.$dropdown_content.scrollTop() || 0;\n                y             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n                scroll_top    = y;\n                scroll_bottom = y - height_menu + height_item;\n    \n                if (y + height_item > height_menu + scroll) {\n                    self.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n                } else if (y < scroll) {\n                    self.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n                }\n    \n            }\n        },\n    \n        /**\n         * Selects all items (CTRL + A).\n         */\n        selectAll: function() {\n            var self = this;\n            if (self.settings.mode === 'single') return;\n    \n            self.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n            if (self.$activeItems.length) {\n                self.hideInput();\n                self.close();\n            }\n            self.focus();\n        },\n    \n        /**\n         * Hides the input element out of view, while\n         * retaining its focus.\n         */\n        hideInput: function() {\n            var self = this;\n    \n            self.setTextboxValue('');\n            self.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n            self.isInputHidden = true;\n        },\n    \n        /**\n         * Restores input visibility.\n         */\n        showInput: function() {\n            this.$control_input.css({opacity: 1, position: 'relative', left: 0});\n            this.isInputHidden = false;\n        },\n    \n        /**\n         * Gives the control focus.\n         */\n        focus: function() {\n            var self = this;\n            if (self.isDisabled) return;\n    \n            self.ignoreFocus = true;\n            self.$control_input[0].focus();\n            window.setTimeout(function() {\n                self.ignoreFocus = false;\n                self.onFocus();\n            }, 0);\n        },\n    \n        /**\n         * Forces the control out of focus.\n         *\n         * @param {Element} dest\n         */\n        blur: function(dest) {\n            this.$control_input[0].blur();\n            this.onBlur(null, dest);\n        },\n    \n        /**\n         * Returns a function that scores an object\n         * to show how good of a match it is to the\n         * provided query.\n         *\n         * @param {string} query\n         * @param {object} options\n         * @return {function}\n         */\n        getScoreFunction: function(query) {\n            return this.sifter.getScoreFunction(query, this.getSearchOptions());\n        },\n    \n        /**\n         * Returns search options for sifter (the system\n         * for scoring and sorting results).\n         *\n         * @see https://github.com/brianreavis/sifter.js\n         * @return {object}\n         */\n        getSearchOptions: function() {\n            var settings = this.settings;\n            var sort = settings.sortField;\n            if (typeof sort === 'string') {\n                sort = [{field: sort}];\n            }\n    \n            return {\n                fields      : settings.searchField,\n                conjunction : settings.searchConjunction,\n                sort        : sort\n            };\n        },\n    \n        /**\n         * Searches through available options and returns\n         * a sorted array of matches.\n         *\n         * Returns an object containing:\n         *\n         *   - query {string}\n         *   - tokens {array}\n         *   - total {int}\n         *   - items {array}\n         *\n         * @param {string} query\n         * @returns {object}\n         */\n        search: function(query) {\n            var i, value, score, result, calculateScore;\n            var self     = this;\n            var settings = self.settings;\n            var options  = this.getSearchOptions();\n    \n            // validate user-provided result scoring function\n            if (settings.score) {\n                calculateScore = self.settings.score.apply(this, [query]);\n                if (typeof calculateScore !== 'function') {\n                    throw new Error('Selectize \"score\" setting must be a function that returns a function');\n                }\n            }\n    \n            // perform search\n            if (query !== self.lastQuery) {\n                self.lastQuery = query;\n                result = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n                self.currentResults = result;\n            } else {\n                result = $.extend(true, {}, self.currentResults);\n            }\n    \n            // filter out selected items\n            if (settings.hideSelected) {\n                for (i = result.items.length - 1; i >= 0; i--) {\n                    if (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n                        result.items.splice(i, 1);\n                    }\n                }\n            }\n    \n            return result;\n        },\n    \n        /**\n         * Refreshes the list of available options shown\n         * in the autocomplete dropdown menu.\n         *\n         * @param {boolean} triggerDropdown\n         */\n        refreshOptions: function(triggerDropdown) {\n            var i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n            var $active, $active_before, $create;\n    \n            if (typeof triggerDropdown === 'undefined') {\n                triggerDropdown = true;\n            }\n    \n            var self              = this;\n            var query             = $.trim(self.$control_input.val());\n            var results           = self.search(query);\n            var $dropdown_content = self.$dropdown_content;\n            var active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n    \n            // build markup\n            n = results.items.length;\n            if (typeof self.settings.maxOptions === 'number') {\n                n = Math.min(n, self.settings.maxOptions);\n            }\n    \n            // render and group available options individually\n            groups = {};\n            groups_order = [];\n    \n            for (i = 0; i < n; i++) {\n                option      = self.options[results.items[i].id];\n                option_html = self.render('option', option);\n                optgroup    = option[self.settings.optgroupField] || '';\n                optgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n    \n                for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n                    optgroup = optgroups[j];\n                    if (!self.optgroups.hasOwnProperty(optgroup)) {\n                        optgroup = '';\n                    }\n                    if (!groups.hasOwnProperty(optgroup)) {\n                        groups[optgroup] = [];\n                        groups_order.push(optgroup);\n                    }\n                    groups[optgroup].push(option_html);\n                }\n            }\n    \n            // sort optgroups\n            if (this.settings.lockOptgroupOrder) {\n                groups_order.sort(function(a, b) {\n                    var a_order = self.optgroups[a].$order || 0;\n                    var b_order = self.optgroups[b].$order || 0;\n                    return a_order - b_order;\n                });\n            }\n    \n            // render optgroup headers & join groups\n            html = [];\n            for (i = 0, n = groups_order.length; i < n; i++) {\n                optgroup = groups_order[i];\n                if (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].length) {\n                    // render the optgroup header and options within it,\n                    // then pass it to the wrapper template\n                    html_children = self.render('optgroup_header', self.optgroups[optgroup]) || '';\n                    html_children += groups[optgroup].join('');\n                    html.push(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n                        html: html_children\n                    })));\n                } else {\n                    html.push(groups[optgroup].join(''));\n                }\n            }\n    \n            $dropdown_content.html(html.join(''));\n    \n            // highlight matching terms inline\n            if (self.settings.highlight && results.query.length && results.tokens.length) {\n                for (i = 0, n = results.tokens.length; i < n; i++) {\n                    highlight($dropdown_content, results.tokens[i].regex);\n                }\n            }\n    \n            // add \"selected\" class to selected options\n            if (!self.settings.hideSelected) {\n                for (i = 0, n = self.items.length; i < n; i++) {\n                    self.getOption(self.items[i]).addClass('selected');\n                }\n            }\n    \n            // add create option\n            has_create_option = self.canCreate(query);\n            if (has_create_option) {\n                $dropdown_content.prepend(self.render('option_create', {input: query}));\n                $create = $($dropdown_content[0].childNodes[0]);\n            }\n    \n            // activate\n            self.hasOptions = results.items.length > 0 || has_create_option;\n            if (self.hasOptions) {\n                if (results.items.length > 0) {\n                    $active_before = active_before && self.getOption(active_before);\n                    if ($active_before && $active_before.length) {\n                        $active = $active_before;\n                    } else if (self.settings.mode === 'single' && self.items.length) {\n                        $active = self.getOption(self.items[0]);\n                    }\n                    if (!$active || !$active.length) {\n                        if ($create && !self.settings.addPrecedence) {\n                            $active = self.getAdjacentOption($create, 1);\n                        } else {\n                            $active = $dropdown_content.find('[data-selectable]:first');\n                        }\n                    }\n                } else {\n                    $active = $create;\n                }\n                self.setActiveOption($active);\n                if (triggerDropdown && !self.isOpen) { self.open(); }\n            } else {\n                self.setActiveOption(null);\n                if (triggerDropdown && self.isOpen) { self.close(); }\n            }\n        },\n    \n        /**\n         * Adds an available option. If it already exists,\n         * nothing will happen. Note: this does not refresh\n         * the options list dropdown (use `refreshOptions`\n         * for that).\n         *\n         * Usage:\n         *\n         *   this.addOption(data)\n         *\n         * @param {object|array} data\n         */\n        addOption: function(data) {\n            var i, n, value, self = this;\n    \n            if ($.isArray(data)) {\n                for (i = 0, n = data.length; i < n; i++) {\n                    self.addOption(data[i]);\n                }\n                return;\n            }\n    \n            if (value = self.registerOption(data)) {\n                self.userOptions[value] = true;\n                self.lastQuery = null;\n                self.trigger('option_add', value, data);\n            }\n        },\n    \n        /**\n         * Registers an option to the pool of options.\n         *\n         * @param {object} data\n         * @return {boolean|string}\n         */\n        registerOption: function(data) {\n            var key = hash_key(data[this.settings.valueField]);\n            if (!key || this.options.hasOwnProperty(key)) return false;\n            data.$order = data.$order || ++this.order;\n            this.options[key] = data;\n            return key;\n        },\n    \n        /**\n         * Registers an option group to the pool of option groups.\n         *\n         * @param {object} data\n         * @return {boolean|string}\n         */\n        registerOptionGroup: function(data) {\n            var key = hash_key(data[this.settings.optgroupValueField]);\n            if (!key) return false;\n    \n            data.$order = data.$order || ++this.order;\n            this.optgroups[key] = data;\n            return key;\n        },\n    \n        /**\n         * Registers a new optgroup for options\n         * to be bucketed into.\n         *\n         * @param {string} id\n         * @param {object} data\n         */\n        addOptionGroup: function(id, data) {\n            data[this.settings.optgroupValueField] = id;\n            if (id = this.registerOptionGroup(data)) {\n                this.trigger('optgroup_add', id, data);\n            }\n        },\n    \n        /**\n         * Removes an existing option group.\n         *\n         * @param {string} id\n         */\n        removeOptionGroup: function(id) {\n            if (this.optgroups.hasOwnProperty(id)) {\n                delete this.optgroups[id];\n                this.renderCache = {};\n                this.trigger('optgroup_remove', id);\n            }\n        },\n    \n        /**\n         * Clears all existing option groups.\n         */\n        clearOptionGroups: function() {\n            this.optgroups = {};\n            this.renderCache = {};\n            this.trigger('optgroup_clear');\n        },\n    \n        /**\n         * Updates an option available for selection. If\n         * it is visible in the selected items or options\n         * dropdown, it will be re-rendered automatically.\n         *\n         * @param {string} value\n         * @param {object} data\n         */\n        updateOption: function(value, data) {\n            var self = this;\n            var $item, $item_new;\n            var value_new, index_item, cache_items, cache_options, order_old;\n    \n            value     = hash_key(value);\n            value_new = hash_key(data[self.settings.valueField]);\n    \n            // sanity checks\n            if (value === null) return;\n            if (!self.options.hasOwnProperty(value)) return;\n            if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n    \n            order_old = self.options[value].$order;\n    \n            // update references\n            if (value_new !== value) {\n                delete self.options[value];\n                index_item = self.items.indexOf(value);\n                if (index_item !== -1) {\n                    self.items.splice(index_item, 1, value_new);\n                }\n            }\n            data.$order = data.$order || order_old;\n            self.options[value_new] = data;\n    \n            // invalidate render cache\n            cache_items = self.renderCache['item'];\n            cache_options = self.renderCache['option'];\n    \n            if (cache_items) {\n                delete cache_items[value];\n                delete cache_items[value_new];\n            }\n            if (cache_options) {\n                delete cache_options[value];\n                delete cache_options[value_new];\n            }\n    \n            // update the item if it's selected\n            if (self.items.indexOf(value_new) !== -1) {\n                $item = self.getItem(value);\n                $item_new = $(self.render('item', data));\n                if ($item.hasClass('active')) $item_new.addClass('active');\n                $item.replaceWith($item_new);\n            }\n    \n            // invalidate last query because we might have updated the sortField\n            self.lastQuery = null;\n    \n            // update dropdown contents\n            if (self.isOpen) {\n                self.refreshOptions(false);\n            }\n        },\n    \n        /**\n         * Removes a single option.\n         *\n         * @param {string} value\n         * @param {boolean} silent\n         */\n        removeOption: function(value, silent) {\n            var self = this;\n            value = hash_key(value);\n    \n            var cache_items = self.renderCache['item'];\n            var cache_options = self.renderCache['option'];\n            if (cache_items) delete cache_items[value];\n            if (cache_options) delete cache_options[value];\n    \n            delete self.userOptions[value];\n            delete self.options[value];\n            self.lastQuery = null;\n            self.trigger('option_remove', value);\n            self.removeItem(value, silent);\n        },\n    \n        /**\n         * Clears all options.\n         */\n        clearOptions: function() {\n            var self = this;\n    \n            self.loadedSearches = {};\n            self.userOptions = {};\n            self.renderCache = {};\n            self.options = self.sifter.items = {};\n            self.lastQuery = null;\n            self.trigger('option_clear');\n            self.clear();\n        },\n    \n        /**\n         * Returns the jQuery element of the option\n         * matching the given value.\n         *\n         * @param {string} value\n         * @returns {object}\n         */\n        getOption: function(value) {\n            return this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n        },\n    \n        /**\n         * Returns the jQuery element of the next or\n         * previous selectable option.\n         *\n         * @param {object} $option\n         * @param {int} direction  can be 1 for next or -1 for previous\n         * @return {object}\n         */\n        getAdjacentOption: function($option, direction) {\n            var $options = this.$dropdown.find('[data-selectable]');\n            var index    = $options.index($option) + direction;\n    \n            return index >= 0 && index < $options.length ? $options.eq(index) : $();\n        },\n    \n        /**\n         * Finds the first element with a \"data-value\" attribute\n         * that matches the given value.\n         *\n         * @param {mixed} value\n         * @param {object} $els\n         * @return {object}\n         */\n        getElementWithValue: function(value, $els) {\n            value = hash_key(value);\n    \n            if (typeof value !== 'undefined' && value !== null) {\n                for (var i = 0, n = $els.length; i < n; i++) {\n                    if ($els[i].getAttribute('data-value') === value) {\n                        return $($els[i]);\n                    }\n                }\n            }\n    \n            return $();\n        },\n    \n        /**\n         * Returns the jQuery element of the item\n         * matching the given value.\n         *\n         * @param {string} value\n         * @returns {object}\n         */\n        getItem: function(value) {\n            return this.getElementWithValue(value, this.$control.children());\n        },\n    \n        /**\n         * \"Selects\" multiple items at once. Adds them to the list\n         * at the current caret position.\n         *\n         * @param {string} value\n         * @param {boolean} silent\n         */\n        addItems: function(values, silent) {\n            var items = $.isArray(values) ? values : [values];\n            for (var i = 0, n = items.length; i < n; i++) {\n                this.isPending = (i < n - 1);\n                this.addItem(items[i], silent);\n            }\n        },\n    \n        /**\n         * \"Selects\" an item. Adds it to the list\n         * at the current caret position.\n         *\n         * @param {string} value\n         * @param {boolean} silent\n         */\n        addItem: function(value, silent) {\n            var events = silent ? [] : ['change'];\n    \n            debounce_events(this, events, function() {\n                var $item, $option, $options;\n                var self = this;\n                var inputMode = self.settings.mode;\n                var i, active, value_next, wasFull;\n                value = hash_key(value);\n    \n                if (self.items.indexOf(value) !== -1) {\n                    if (inputMode === 'single') self.close();\n                    return;\n                }\n    \n                if (!self.options.hasOwnProperty(value)) return;\n                if (inputMode === 'single') self.clear();\n                if (inputMode === 'multi' && self.isFull()) return;\n    \n                $item = $(self.render('item', self.options[value]));\n                wasFull = self.isFull();\n                self.items.splice(self.caretPos, 0, value);\n                self.insertAtCaret($item);\n                if (!self.isPending || (!wasFull && self.isFull())) {\n                    self.refreshState();\n                }\n    \n                if (self.isSetup) {\n                    $options = self.$dropdown_content.find('[data-selectable]');\n    \n                    // update menu / remove the option (if this is not one item being added as part of series)\n                    if (!self.isPending) {\n                        $option = self.getOption(value);\n                        value_next = self.getAdjacentOption($option, 1).attr('data-value');\n                        self.refreshOptions(self.isFocused && inputMode !== 'single');\n                        if (value_next) {\n                            self.setActiveOption(self.getOption(value_next));\n                        }\n                    }\n    \n                    // hide the menu if the maximum number of items have been selected or no options are left\n                    if (!$options.length || self.isFull()) {\n                        self.close();\n                    } else {\n                        self.positionDropdown();\n                    }\n    \n                    self.updatePlaceholder();\n                    self.trigger('item_add', value, $item);\n                    self.updateOriginalInput({silent: silent});\n                }\n            });\n        },\n    \n        /**\n         * Removes the selected item matching\n         * the provided value.\n         *\n         * @param {string} value\n         */\n        removeItem: function(value, silent) {\n            var self = this;\n            var $item, i, idx;\n    \n            $item = (typeof value === 'object') ? value : self.getItem(value);\n            value = hash_key($item.attr('data-value'));\n            i = self.items.indexOf(value);\n    \n            if (i !== -1) {\n                $item.remove();\n                if ($item.hasClass('active')) {\n                    idx = self.$activeItems.indexOf($item[0]);\n                    self.$activeItems.splice(idx, 1);\n                }\n    \n                self.items.splice(i, 1);\n                self.lastQuery = null;\n                if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n                    self.removeOption(value, silent);\n                }\n    \n                if (i < self.caretPos) {\n                    self.setCaret(self.caretPos - 1);\n                }\n    \n                self.refreshState();\n                self.updatePlaceholder();\n                self.updateOriginalInput({silent: silent});\n                self.positionDropdown();\n                self.trigger('item_remove', value, $item);\n            }\n        },\n    \n        /**\n         * Invokes the `create` method provided in the\n         * selectize options that should provide the data\n         * for the new item, given the user input.\n         *\n         * Once this completes, it will be added\n         * to the item list.\n         *\n         * @param {string} value\n         * @param {boolean} [triggerDropdown]\n         * @param {function} [callback]\n         * @return {boolean}\n         */\n        createItem: function(input, triggerDropdown) {\n            var self  = this;\n            var caret = self.caretPos;\n            input = input || $.trim(self.$control_input.val() || '');\n    \n            var callback = arguments[arguments.length - 1];\n            if (typeof callback !== 'function') callback = function() {};\n    \n            if (typeof triggerDropdown !== 'boolean') {\n                triggerDropdown = true;\n            }\n    \n            if (!self.canCreate(input)) {\n                callback();\n                return false;\n            }\n    \n            self.lock();\n    \n            var setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n                var data = {};\n                data[self.settings.labelField] = input;\n                data[self.settings.valueField] = input;\n                return data;\n            };\n    \n            var create = once(function(data) {\n                self.unlock();\n    \n                if (!data || typeof data !== 'object') return callback();\n                var value = hash_key(data[self.settings.valueField]);\n                if (typeof value !== 'string') return callback();\n    \n                self.setTextboxValue('');\n                self.addOption(data);\n                self.setCaret(caret);\n                self.addItem(value);\n                self.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n                callback(data);\n            });\n    \n            var output = setup.apply(this, [input, create]);\n            if (typeof output !== 'undefined') {\n                create(output);\n            }\n    \n            return true;\n        },\n    \n        /**\n         * Re-renders the selected item lists.\n         */\n        refreshItems: function() {\n            this.lastQuery = null;\n    \n            if (this.isSetup) {\n                this.addItem(this.items);\n            }\n    \n            this.refreshState();\n            this.updateOriginalInput();\n        },\n    \n        /**\n         * Updates all state-dependent attributes\n         * and CSS classes.\n         */\n        refreshState: function() {\n            var invalid, self = this;\n            if (self.isRequired) {\n                if (self.items.length) self.isInvalid = false;\n                self.$control_input.prop('required', invalid);\n            }\n            self.refreshClasses();\n        },\n    \n        /**\n         * Updates all state-dependent CSS classes.\n         */\n        refreshClasses: function() {\n            var self     = this;\n            var isFull   = self.isFull();\n            var isLocked = self.isLocked;\n    \n            self.$wrapper\n                .toggleClass('rtl', self.rtl);\n    \n            self.$control\n                .toggleClass('focus', self.isFocused)\n                .toggleClass('disabled', self.isDisabled)\n                .toggleClass('required', self.isRequired)\n                .toggleClass('invalid', self.isInvalid)\n                .toggleClass('locked', isLocked)\n                .toggleClass('full', isFull).toggleClass('not-full', !isFull)\n                .toggleClass('input-active', self.isFocused && !self.isInputHidden)\n                .toggleClass('dropdown-active', self.isOpen)\n                .toggleClass('has-options', !$.isEmptyObject(self.options))\n                .toggleClass('has-items', self.items.length > 0);\n    \n            self.$control_input.data('grow', !isFull && !isLocked);\n        },\n    \n        /**\n         * Determines whether or not more items can be added\n         * to the control without exceeding the user-defined maximum.\n         *\n         * @returns {boolean}\n         */\n        isFull: function() {\n            return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n        },\n    \n        /**\n         * Refreshes the original <select> or <input>\n         * element to reflect the current state.\n         */\n        updateOriginalInput: function(opts) {\n            var i, n, options, label, self = this;\n            opts = opts || {};\n    \n            if (self.tagType === TAG_SELECT) {\n                options = [];\n                for (i = 0, n = self.items.length; i < n; i++) {\n                    label = self.options[self.items[i]][self.settings.labelField] || '';\n                    options.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n                }\n                if (!options.length && !this.$input.attr('multiple')) {\n                    options.push('<option value=\"\" selected=\"selected\"></option>');\n                }\n                self.$input.html(options.join(''));\n            } else {\n                self.$input.val(self.getValue());\n                self.$input.attr('value',self.$input.val());\n            }\n    \n            if (self.isSetup) {\n                if (!opts.silent) {\n                    self.trigger('change', self.$input.val());\n                }\n            }\n        },\n    \n        /**\n         * Shows/hide the input placeholder depending\n         * on if there items in the list already.\n         */\n        updatePlaceholder: function() {\n            if (!this.settings.placeholder) return;\n            var $input = this.$control_input;\n    \n            if (this.items.length) {\n                $input.removeAttr('placeholder');\n            } else {\n                $input.attr('placeholder', this.settings.placeholder);\n            }\n            $input.triggerHandler('update', {force: true});\n        },\n    \n        /**\n         * Shows the autocomplete dropdown containing\n         * the available options.\n         */\n        open: function() {\n            var self = this;\n    \n            if (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n            self.focus();\n            self.isOpen = true;\n            self.refreshState();\n            self.$dropdown.css({visibility: 'hidden', display: 'block'});\n            self.positionDropdown();\n            self.$dropdown.css({visibility: 'visible'});\n            self.trigger('dropdown_open', self.$dropdown);\n        },\n    \n        /**\n         * Closes the autocomplete dropdown menu.\n         */\n        close: function() {\n            var self = this;\n            var trigger = self.isOpen;\n    \n            if (self.settings.mode === 'single' && self.items.length) {\n                self.hideInput();\n            }\n    \n            self.isOpen = false;\n            self.$dropdown.hide();\n            self.setActiveOption(null);\n            self.refreshState();\n    \n            if (trigger) self.trigger('dropdown_close', self.$dropdown);\n        },\n    \n        /**\n         * Calculates and applies the appropriate\n         * position of the dropdown.\n         */\n        positionDropdown: function() {\n            var $control = this.$control;\n            var offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n            offset.top += $control.outerHeight(true);\n    \n            this.$dropdown.css({\n                width : $control.outerWidth(),\n                top   : offset.top,\n                left  : offset.left\n            });\n        },\n    \n        /**\n         * Resets / clears all selected items\n         * from the control.\n         *\n         * @param {boolean} silent\n         */\n        clear: function(silent) {\n            var self = this;\n    \n            if (!self.items.length) return;\n            self.$control.children(':not(input)').remove();\n            self.items = [];\n            self.lastQuery = null;\n            self.setCaret(0);\n            self.setActiveItem(null);\n            self.updatePlaceholder();\n            self.updateOriginalInput({silent: silent});\n            self.refreshState();\n            self.showInput();\n            self.trigger('clear');\n        },\n    \n        /**\n         * A helper method for inserting an element\n         * at the current caret position.\n         *\n         * @param {object} $el\n         */\n        insertAtCaret: function($el) {\n            var caret = Math.min(this.caretPos, this.items.length);\n            if (caret === 0) {\n                this.$control.prepend($el);\n            } else {\n                $(this.$control[0].childNodes[caret]).before($el);\n            }\n            this.setCaret(caret + 1);\n        },\n    \n        /**\n         * Removes the current selected item(s).\n         *\n         * @param {object} e (optional)\n         * @returns {boolean}\n         */\n        deleteSelection: function(e) {\n            var i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n            var self = this;\n    \n            direction = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n            selection = getSelection(self.$control_input[0]);\n    \n            if (self.$activeOption && !self.settings.hideSelected) {\n                option_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n            }\n    \n            // determine items that will be removed\n            values = [];\n    \n            if (self.$activeItems.length) {\n                $tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n                caret = self.$control.children(':not(input)').index($tail);\n                if (direction > 0) { caret++; }\n    \n                for (i = 0, n = self.$activeItems.length; i < n; i++) {\n                    values.push($(self.$activeItems[i]).attr('data-value'));\n                }\n                if (e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n                if (direction < 0 && selection.start === 0 && selection.length === 0) {\n                    values.push(self.items[self.caretPos - 1]);\n                } else if (direction > 0 && selection.start === self.$control_input.val().length) {\n                    values.push(self.items[self.caretPos]);\n                }\n            }\n    \n            // allow the callback to abort\n            if (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n                return false;\n            }\n    \n            // perform removal\n            if (typeof caret !== 'undefined') {\n                self.setCaret(caret);\n            }\n            while (values.length) {\n                self.removeItem(values.pop());\n            }\n    \n            self.showInput();\n            self.positionDropdown();\n            self.refreshOptions(true);\n    \n            // select previous option\n            if (option_select) {\n                $option_select = self.getOption(option_select);\n                if ($option_select.length) {\n                    self.setActiveOption($option_select);\n                }\n            }\n    \n            return true;\n        },\n    \n        /**\n         * Selects the previous / next item (depending\n         * on the `direction` argument).\n         *\n         * > 0 - right\n         * < 0 - left\n         *\n         * @param {int} direction\n         * @param {object} e (optional)\n         */\n        advanceSelection: function(direction, e) {\n            var tail, selection, idx, valueLength, cursorAtEdge, $tail;\n            var self = this;\n    \n            if (direction === 0) return;\n            if (self.rtl) direction *= -1;\n    \n            tail = direction > 0 ? 'last' : 'first';\n            selection = getSelection(self.$control_input[0]);\n    \n            if (self.isFocused && !self.isInputHidden) {\n                valueLength = self.$control_input.val().length;\n                cursorAtEdge = direction < 0\n                    ? selection.start === 0 && selection.length === 0\n                    : selection.start === valueLength;\n    \n                if (cursorAtEdge && !valueLength) {\n                    self.advanceCaret(direction, e);\n                }\n            } else {\n                $tail = self.$control.children('.active:' + tail);\n                if ($tail.length) {\n                    idx = self.$control.children(':not(input)').index($tail);\n                    self.setActiveItem(null);\n                    self.setCaret(direction > 0 ? idx + 1 : idx);\n                }\n            }\n        },\n    \n        /**\n         * Moves the caret left / right.\n         *\n         * @param {int} direction\n         * @param {object} e (optional)\n         */\n        advanceCaret: function(direction, e) {\n            var self = this, fn, $adj;\n    \n            if (direction === 0) return;\n    \n            fn = direction > 0 ? 'next' : 'prev';\n            if (self.isShiftDown) {\n                $adj = self.$control_input[fn]();\n                if ($adj.length) {\n                    self.hideInput();\n                    self.setActiveItem($adj);\n                    e && e.preventDefault();\n                }\n            } else {\n                self.setCaret(self.caretPos + direction);\n            }\n        },\n    \n        /**\n         * Moves the caret to the specified index.\n         *\n         * @param {int} i\n         */\n        setCaret: function(i) {\n            var self = this;\n    \n            if (self.settings.mode === 'single') {\n                i = self.items.length;\n            } else {\n                i = Math.max(0, Math.min(self.items.length, i));\n            }\n    \n            if(!self.isPending) {\n                // the input must be moved by leaving it in place and moving the\n                // siblings, due to the fact that focus cannot be restored once lost\n                // on mobile webkit devices\n                var j, n, fn, $children, $child;\n                $children = self.$control.children(':not(input)');\n                for (j = 0, n = $children.length; j < n; j++) {\n                    $child = $($children[j]).detach();\n                    if (j <  i) {\n                        self.$control_input.before($child);\n                    } else {\n                        self.$control.append($child);\n                    }\n                }\n            }\n    \n            self.caretPos = i;\n        },\n    \n        /**\n         * Disables user input on the control. Used while\n         * items are being asynchronously created.\n         */\n        lock: function() {\n            this.close();\n            this.isLocked = true;\n            this.refreshState();\n        },\n    \n        /**\n         * Re-enables user input on the control.\n         */\n        unlock: function() {\n            this.isLocked = false;\n            this.refreshState();\n        },\n    \n        /**\n         * Disables user input on the control completely.\n         * While disabled, it cannot receive focus.\n         */\n        disable: function() {\n            var self = this;\n            self.$input.prop('disabled', true);\n            self.$control_input.prop('disabled', true).prop('tabindex', -1);\n            self.isDisabled = true;\n            self.lock();\n        },\n    \n        /**\n         * Enables the control so that it can respond\n         * to focus and user input.\n         */\n        enable: function() {\n            var self = this;\n            self.$input.prop('disabled', false);\n            self.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n            self.isDisabled = false;\n            self.unlock();\n        },\n    \n        /**\n         * Completely destroys the control and\n         * unbinds all event listeners so that it can\n         * be garbage collected.\n         */\n        destroy: function() {\n            var self = this;\n            var eventNS = self.eventNS;\n            var revertSettings = self.revertSettings;\n    \n            self.trigger('destroy');\n            self.off();\n            self.$wrapper.remove();\n            self.$dropdown.remove();\n    \n            self.$input\n                .html('')\n                .append(revertSettings.$children)\n                .removeAttr('tabindex')\n                .removeClass('selectized')\n                .attr({tabindex: revertSettings.tabindex})\n                .show();\n    \n            self.$control_input.removeData('grow');\n            self.$input.removeData('selectize');\n    \n            $(window).off(eventNS);\n            $(document).off(eventNS);\n            $(document.body).off(eventNS);\n    \n            delete self.$input[0].selectize;\n        },\n    \n        /**\n         * A helper method for rendering \"item\" and\n         * \"option\" templates, given the data.\n         *\n         * @param {string} templateName\n         * @param {object} data\n         * @returns {string}\n         */\n        render: function(templateName, data) {\n            var value, id, label;\n            var html = '';\n            var cache = false;\n            var self = this;\n            var regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n    \n            if (templateName === 'option' || templateName === 'item') {\n                value = hash_key(data[self.settings.valueField]);\n                cache = !!value;\n            }\n    \n            // pull markup from cache if it exists\n            if (cache) {\n                if (!isset(self.renderCache[templateName])) {\n                    self.renderCache[templateName] = {};\n                }\n                if (self.renderCache[templateName].hasOwnProperty(value)) {\n                    return self.renderCache[templateName][value];\n                }\n            }\n    \n            // render markup\n            html = self.settings.render[templateName].apply(this, [data, escape_html]);\n    \n            // add mandatory attributes\n            if (templateName === 'option' || templateName === 'option_create') {\n                html = html.replace(regex_tag, '<$1 data-selectable');\n            }\n            if (templateName === 'optgroup') {\n                id = data[self.settings.optgroupValueField] || '';\n                html = html.replace(regex_tag, '<$1 data-group=\"' + escape_replace(escape_html(id)) + '\"');\n            }\n            if (templateName === 'option' || templateName === 'item') {\n                html = html.replace(regex_tag, '<$1 data-value=\"' + escape_replace(escape_html(value || '')) + '\"');\n            }\n    \n            // update cache\n            if (cache) {\n                self.renderCache[templateName][value] = html;\n            }\n    \n            return html;\n        },\n    \n        /**\n         * Clears the render cache for a template. If\n         * no template is given, clears all render\n         * caches.\n         *\n         * @param {string} templateName\n         */\n        clearCache: function(templateName) {\n            var self = this;\n            if (typeof templateName === 'undefined') {\n                self.renderCache = {};\n            } else {\n                delete self.renderCache[templateName];\n            }\n        },\n    \n        /**\n         * Determines whether or not to display the\n         * create item prompt, given a user input.\n         *\n         * @param {string} input\n         * @return {boolean}\n         */\n        canCreate: function(input) {\n            var self = this;\n            if (!self.settings.create) return false;\n            var filter = self.settings.createFilter;\n            return input.length\n                && (typeof filter !== 'function' || filter.apply(self, [input]))\n                && (typeof filter !== 'string' || new RegExp(filter).test(input))\n                && (!(filter instanceof RegExp) || filter.test(input));\n        }\n    \n    });\n    \n    \n    Selectize.count = 0;\n    Selectize.defaults = {\n        options: [],\n        optgroups: [],\n    \n        plugins: [],\n        delimiter: ',',\n        splitOn: null, // regexp or string for splitting up values from a paste command\n        persist: true,\n        diacritics: true,\n        create: false,\n        createOnBlur: false,\n        createFilter: null,\n        highlight: true,\n        openOnFocus: true,\n        maxOptions: 1000,\n        maxItems: null,\n        hideSelected: null,\n        addPrecedence: false,\n        selectOnTab: false,\n        preload: false,\n        allowEmptyOption: false,\n        closeAfterSelect: false,\n    \n        scrollDuration: 60,\n        loadThrottle: 300,\n        loadingClass: 'loading',\n    \n        dataAttr: 'data-data',\n        optgroupField: 'optgroup',\n        valueField: 'value',\n        labelField: 'text',\n        optgroupLabelField: 'label',\n        optgroupValueField: 'value',\n        lockOptgroupOrder: false,\n    \n        sortField: '$order',\n        searchField: ['text'],\n        searchConjunction: 'and',\n    \n        mode: null,\n        wrapperClass: 'selectize-control',\n        inputClass: 'selectize-input',\n        dropdownClass: 'selectize-dropdown',\n        dropdownContentClass: 'selectize-dropdown-content',\n    \n        dropdownParent: null,\n    \n        copyClassesToDropdown: true,\n    \n        /*\n        load                 : null, // function(query, callback) { ... }\n        score                : null, // function(search) { ... }\n        onInitialize         : null, // function() { ... }\n        onChange             : null, // function(value) { ... }\n        onItemAdd            : null, // function(value, $item) { ... }\n        onItemRemove         : null, // function(value) { ... }\n        onClear              : null, // function() { ... }\n        onOptionAdd          : null, // function(value, data) { ... }\n        onOptionRemove       : null, // function(value) { ... }\n        onOptionClear        : null, // function() { ... }\n        onOptionGroupAdd     : null, // function(id, data) { ... }\n        onOptionGroupRemove  : null, // function(id) { ... }\n        onOptionGroupClear   : null, // function() { ... }\n        onDropdownOpen       : null, // function($dropdown) { ... }\n        onDropdownClose      : null, // function($dropdown) { ... }\n        onType               : null, // function(str) { ... }\n        onDelete             : null, // function(values) { ... }\n        */\n    \n        render: {\n            /*\n            item: null,\n            optgroup: null,\n            optgroup_header: null,\n            option: null,\n            option_create: null\n            */\n        }\n    };\n    \n    \n    $.fn.selectize = function(settings_user) {\n        var defaults             = $.fn.selectize.defaults;\n        var settings             = $.extend({}, defaults, settings_user);\n        var attr_data            = settings.dataAttr;\n        var field_label          = settings.labelField;\n        var field_value          = settings.valueField;\n        var field_optgroup       = settings.optgroupField;\n        var field_optgroup_label = settings.optgroupLabelField;\n        var field_optgroup_value = settings.optgroupValueField;\n    \n        var optionsMap = {};\n    \n        /**\n         * Initializes selectize from a <input type=\"text\"> element.\n         *\n         * @param {object} $input\n         * @param {object} settings_element\n         */\n        var init_textbox = function($input, settings_element) {\n            var i, n, values, option;\n    \n            var data_raw = $input.attr(attr_data);\n    \n            if (!data_raw) {\n                var value = $.trim($input.val() || '');\n                if (!settings.allowEmptyOption && !value.length) return;\n                values = value.split(settings.delimiter);\n                for (i = 0, n = values.length; i < n; i++) {\n                    option = {};\n                    option[field_label] = values[i];\n                    option[field_value] = values[i];\n                    settings_element.options.push(option);\n                }\n                settings_element.items = values;\n            } else {\n                settings_element.options = JSON.parse(data_raw);\n                for (i = 0, n = settings_element.options.length; i < n; i++) {\n                    settings_element.items.push(settings_element.options[i][field_value]);\n                }\n            }\n        };\n    \n        /**\n         * Initializes selectize from a <select> element.\n         *\n         * @param {object} $input\n         * @param {object} settings_element\n         */\n        var init_select = function($input, settings_element) {\n            var i, n, tagName, $children, order = 0;\n            var options = settings_element.options;\n    \n            var readData = function($el) {\n                var data = attr_data && $el.attr(attr_data);\n                if (typeof data === 'string' && data.length) {\n                    return JSON.parse(data);\n                }\n                return null;\n            };\n    \n            var addOption = function($option, group) {\n                $option = $($option);\n    \n                var value = hash_key($option.attr('value'));\n                if (!value && !settings.allowEmptyOption) return;\n    \n                // if the option already exists, it's probably been\n                // duplicated in another optgroup. in this case, push\n                // the current group to the \"optgroup\" property on the\n                // existing option so that it's rendered in both places.\n                if (optionsMap.hasOwnProperty(value)) {\n                    if (group) {\n                        var arr = optionsMap[value][field_optgroup];\n                        if (!arr) {\n                            optionsMap[value][field_optgroup] = group;\n                        } else if (!$.isArray(arr)) {\n                            optionsMap[value][field_optgroup] = [arr, group];\n                        } else {\n                            arr.push(group);\n                        }\n                    }\n                    return;\n                }\n    \n                var option             = readData($option) || {};\n                option[field_label]    = option[field_label] || $option.text();\n                option[field_value]    = option[field_value] || value;\n                option[field_optgroup] = option[field_optgroup] || group;\n    \n                optionsMap[value] = option;\n                options.push(option);\n    \n                if ($option.is(':selected')) {\n                    settings_element.items.push(value);\n                }\n            };\n    \n            var addGroup = function($optgroup) {\n                var i, n, id, optgroup, $options;\n    \n                $optgroup = $($optgroup);\n                id = $optgroup.attr('label');\n    \n                if (id) {\n                    optgroup = readData($optgroup) || {};\n                    optgroup[field_optgroup_label] = id;\n                    optgroup[field_optgroup_value] = id;\n                    settings_element.optgroups.push(optgroup);\n                }\n    \n                $options = $('option', $optgroup);\n                for (i = 0, n = $options.length; i < n; i++) {\n                    addOption($options[i], id);\n                }\n            };\n    \n            settings_element.maxItems = $input.attr('multiple') ? null : 1;\n    \n            $children = $input.children();\n            for (i = 0, n = $children.length; i < n; i++) {\n                tagName = $children[i].tagName.toLowerCase();\n                if (tagName === 'optgroup') {\n                    addGroup($children[i]);\n                } else if (tagName === 'option') {\n                    addOption($children[i]);\n                }\n            }\n        };\n    \n        return this.each(function() {\n            if (this.selectize) return;\n    \n            var instance;\n            var $input = $(this);\n            var tag_name = this.tagName.toLowerCase();\n            var placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n            if (!placeholder && !settings.allowEmptyOption) {\n                placeholder = $input.children('option[value=\"\"]').text();\n            }\n    \n            var settings_element = {\n                'placeholder' : placeholder,\n                'options'     : [],\n                'optgroups'   : [],\n                'items'       : []\n            };\n    \n            if (tag_name === 'select') {\n                init_select($input, settings_element);\n            } else {\n                init_textbox($input, settings_element);\n            }\n    \n            instance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n        });\n    };\n    \n    $.fn.selectize.defaults = Selectize.defaults;\n    $.fn.selectize.support = {\n        validity: SUPPORTS_VALIDITY_API\n    };\n    \n    \n    Selectize.define('drag_drop', function(options) {\n        if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n        if (this.settings.mode !== 'multi') return;\n        var self = this;\n    \n        self.lock = (function() {\n            var original = self.lock;\n            return function() {\n                var sortable = self.$control.data('sortable');\n                if (sortable) sortable.disable();\n                return original.apply(self, arguments);\n            };\n        })();\n    \n        self.unlock = (function() {\n            var original = self.unlock;\n            return function() {\n                var sortable = self.$control.data('sortable');\n                if (sortable) sortable.enable();\n                return original.apply(self, arguments);\n            };\n        })();\n    \n        self.setup = (function() {\n            var original = self.setup;\n            return function() {\n                original.apply(this, arguments);\n    \n                var $control = self.$control.sortable({\n                    items: '[data-value]',\n                    forcePlaceholderSize: true,\n                    disabled: self.isLocked,\n                    start: function(e, ui) {\n                        ui.placeholder.css('width', ui.helper.css('width'));\n                        $control.css({overflow: 'visible'});\n                    },\n                    stop: function() {\n                        $control.css({overflow: 'hidden'});\n                        var active = self.$activeItems ? self.$activeItems.slice() : null;\n                        var values = [];\n                        $control.children('[data-value]').each(function() {\n                            values.push($(this).attr('data-value'));\n                        });\n                        self.setValue(values);\n                        self.setActiveItem(active);\n                    }\n                });\n            };\n        })();\n    \n    });\n    \n    Selectize.define('dropdown_header', function(options) {\n        var self = this;\n    \n        options = $.extend({\n            title         : 'Untitled',\n            headerClass   : 'selectize-dropdown-header',\n            titleRowClass : 'selectize-dropdown-header-title',\n            labelClass    : 'selectize-dropdown-header-label',\n            closeClass    : 'selectize-dropdown-header-close',\n    \n            html: function(data) {\n                return (\n                    '<div class=\"' + data.headerClass + '\">' +\n                        '<div class=\"' + data.titleRowClass + '\">' +\n                            '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n                            '<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n                        '</div>' +\n                    '</div>'\n                );\n            }\n        }, options);\n    \n        self.setup = (function() {\n            var original = self.setup;\n            return function() {\n                original.apply(self, arguments);\n                self.$dropdown_header = $(options.html(options));\n                self.$dropdown.prepend(self.$dropdown_header);\n            };\n        })();\n    \n    });\n    \n    Selectize.define('optgroup_columns', function(options) {\n        var self = this;\n    \n        options = $.extend({\n            equalizeWidth  : true,\n            equalizeHeight : true\n        }, options);\n    \n        this.getAdjacentOption = function($option, direction) {\n            var $options = $option.closest('[data-group]').find('[data-selectable]');\n            var index    = $options.index($option) + direction;\n    \n            return index >= 0 && index < $options.length ? $options.eq(index) : $();\n        };\n    \n        this.onKeyDown = (function() {\n            var original = self.onKeyDown;\n            return function(e) {\n                var index, $option, $options, $optgroup;\n    \n                if (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n                    self.ignoreHover = true;\n                    $optgroup = this.$activeOption.closest('[data-group]');\n                    index = $optgroup.find('[data-selectable]').index(this.$activeOption);\n    \n                    if(e.keyCode === KEY_LEFT) {\n                        $optgroup = $optgroup.prev('[data-group]');\n                    } else {\n                        $optgroup = $optgroup.next('[data-group]');\n                    }\n    \n                    $options = $optgroup.find('[data-selectable]');\n                    $option  = $options.eq(Math.min($options.length - 1, index));\n                    if ($option.length) {\n                        this.setActiveOption($option);\n                    }\n                    return;\n                }\n    \n                return original.apply(this, arguments);\n            };\n        })();\n    \n        var getScrollbarWidth = function() {\n            var div;\n            var width = getScrollbarWidth.width;\n            var doc = document;\n    \n            if (typeof width === 'undefined') {\n                div = doc.createElement('div');\n                div.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n                div = div.firstChild;\n                doc.body.appendChild(div);\n                width = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n                doc.body.removeChild(div);\n            }\n            return width;\n        };\n    \n        var equalizeSizes = function() {\n            var i, n, height_max, width, width_last, width_parent, $optgroups;\n    \n            $optgroups = $('[data-group]', self.$dropdown_content);\n            n = $optgroups.length;\n            if (!n || !self.$dropdown_content.width()) return;\n    \n            if (options.equalizeHeight) {\n                height_max = 0;\n                for (i = 0; i < n; i++) {\n                    height_max = Math.max(height_max, $optgroups.eq(i).height());\n                }\n                $optgroups.css({height: height_max});\n            }\n    \n            if (options.equalizeWidth) {\n                width_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n                width = Math.round(width_parent / n);\n                $optgroups.css({width: width});\n                if (n > 1) {\n                    width_last = width_parent - width * (n - 1);\n                    $optgroups.eq(n - 1).css({width: width_last});\n                }\n            }\n        };\n    \n        if (options.equalizeHeight || options.equalizeWidth) {\n            hook.after(this, 'positionDropdown', equalizeSizes);\n            hook.after(this, 'refreshOptions', equalizeSizes);\n        }\n    \n    \n    });\n    \n    Selectize.define('remove_button', function(options) {\n        if (this.settings.mode === 'single') return;\n    \n        options = $.extend({\n            label     : '&times;',\n            title     : 'Remove',\n            className : 'remove',\n            append    : true\n        }, options);\n    \n        var self = this;\n        var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n    \n        /**\n         * Appends an element as a child (with raw HTML).\n         *\n         * @param {string} html_container\n         * @param {string} html_element\n         * @return {string}\n         */\n        var append = function(html_container, html_element) {\n            var pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n            return html_container.substring(0, pos) + html_element + html_container.substring(pos);\n        };\n    \n        this.setup = (function() {\n            var original = self.setup;\n            return function() {\n                // override the item rendering method to add the button to each\n                if (options.append) {\n                    var render_item = self.settings.render.item;\n                    self.settings.render.item = function(data) {\n                        return append(render_item.apply(this, arguments), html);\n                    };\n                }\n    \n                original.apply(this, arguments);\n    \n                // add event listener\n                this.$control.on('click', '.' + options.className, function(e) {\n                    e.preventDefault();\n                    if (self.isLocked) return;\n    \n                    var $item = $(e.currentTarget).parent();\n                    self.setActiveItem($item);\n                    if (self.deleteSelection()) {\n                        self.setCaret(self.items.length);\n                    }\n                });\n    \n            };\n        })();\n    \n    });\n    \n    Selectize.define('restore_on_backspace', function(options) {\n        var self = this;\n    \n        options.text = options.text || function(option) {\n            return option[this.settings.labelField];\n        };\n    \n        this.onKeyDown = (function() {\n            var original = self.onKeyDown;\n            return function(e) {\n                var index, option;\n                if (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n                    index = this.caretPos - 1;\n                    if (index >= 0 && index < this.items.length) {\n                        option = this.options[this.items[index]];\n                        if (this.deleteSelection(e)) {\n                            this.setTextboxValue(options.text.apply(this, [option]));\n                            this.refreshOptions(true);\n                        }\n                        e.preventDefault();\n                        return;\n                    }\n                }\n                return original.apply(this, arguments);\n            };\n        })();\n    });\n    \n\n    return Selectize;\n}));","(function($) {\n  if ($('input[name=name]').length && $('input[name=slug]').length) {\n    $('input[name=name]').on('keyup', function() {\n      var slug = $('input[name=name]').val()\n        .toLowerCase()\n        .replace(/[^\\w ]+/g,'')\n        .replace(/ +/g,'-');\n\n      $('input[name=slug]').val(slug);\n    });\n  }\n\n  $('input[name=tags]').selectize({\n    plugins: ['remove_button'],\n    persist: false,\n    create: function(input) {\n      return {\n        value: input,\n        text: input\n      };\n    }\n  });\n\n  $('select[name=series_id]').selectize();\n})(jQuery);\n"],"sourceRoot":"/source/"}