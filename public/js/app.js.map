{"version":3,"sources":["bootstrap.js","rails.js","selectize.js","app.js"],"names":["jQuery","Error","$","version","fn","jquery","split","transitionEnd","el","document","createElement","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","name","undefined","style","end","emulateTransitionEnd","duration","called","$el","this","one","callback","trigger","support","setTimeout","event","special","bsTransitionEnd","bindType","delegateType","handle","e","target","is","handleObj","handler","apply","arguments","Plugin","option","each","$this","data","Alert","call","dismiss","on","close","VERSION","TRANSITION_DURATION","prototype","removeElement","$parent","detach","remove","selector","attr","replace","preventDefault","length","closest","Event","isDefaultPrevented","removeClass","hasClass","old","alert","Constructor","noConflict","options","Button","toggle","setState","element","$element","extend","DEFAULTS","isLoading","loadingText","state","d","val","resetText","proxy","addClass","removeAttr","changed","$input","find","prop","toggleClass","button","$btn","test","type","Carousel","action","slide","to","interval","pause","cycle","$indicators","paused","sliding","$active","$items","keyboard","keydown","documentElement","wrap","tagName","which","prev","next","clearInterval","setInterval","getItemIndex","item","parent","children","index","getItemForDirection","direction","active","activeIndex","willWrap","delta","itemIndex","eq","pos","that","$next","isCycling","relatedTarget","slideEvent","$nextIndicator","slidEvent","offsetWidth","join","carousel","clickHandler","href","$target","slideIndex","window","$carousel","getTargetFromTrigger","$trigger","Collapse","id","transitioning","getParent","addAriaAndCollapsedClass","dimension","hasWidth","show","activesData","actives","startEvent","complete","scrollSize","camelCase","hide","offsetHeight","i","isOpen","collapse","clearMenus","backdrop","contains","Dropdown","isActive","insertAfter","stopPropagation","desc","dropdown","_relatedTarget","Modal","$body","body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","load","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","resize","appendTo","scrollTop","adjustDialog","enforceFocus","off","hideModal","has","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","animate","doAnimate","currentTarget","focus","callbackRemove","modalIsOverflowing","scrollHeight","clientHeight","css","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","clientWidth","measureScrollbar","bodyPad","parseInt","scrollDiv","className","append","removeChild","modal","showEvent","Tooltip","enabled","timeout","hoverState","inState","init","animation","placement","template","title","delay","html","container","viewport","padding","getOptions","$viewport","isFunction","click","hover","constructor","triggers","eventIn","eventOut","enter","leave","_options","fixTitle","getDefaults","getDelegateOptions","defaults","key","value","obj","self","tip","clearTimeout","isInStateTrue","hasContent","inDom","ownerDocument","$tip","tipId","getUID","setContent","autoToken","autoPlace","top","display","getPosition","actualWidth","actualHeight","orgPlacement","viewportDim","bottom","width","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","offset","height","marginTop","marginLeft","isNaN","setOffset","using","props","round","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","$e","isBody","elRect","elOffset","scroll","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","o","prefix","random","getElementById","$arrow","enable","disable","toggleEnabled","destroy","removeData","tooltip","Popover","content","getContent","popover","ScrollSpy","$scrollElement","offsets","targets","activeTarget","process","refresh","getScrollHeight","max","offsetMethod","offsetBase","isWindow","map","$href","sort","a","b","push","maxScroll","activate","clear","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","position","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","rails","error","$document","linkClickSelector","buttonClickSelector","inputChangeSelector","formSubmitSelector","formInputClickSelector","disableSelector","enableSelector","requiredInputSelector","fileInputSelector","linkDisableSelector","buttonDisableSelector","csrfToken","csrfParam","CSRFProtection","xhr","token","setRequestHeader","refreshCSRFTokens","fire","result","confirm","message","ajax","isRemote","handleRemote","method","url","withCredentials","dataType","ajaxSettings","serializeArray","serialize","beforeSend","settings","accepts","script","success","status","crossDomain","isCrossDomain","xhrFields","originAnchor","location","urlAnchor","protocol","host","handleMethod","link","form","metadataInput","submit","formElements","elements","filter","disableFormElements","disableFormElement","replacement","enableFormElements","enableFormElement","allowAction","answer","console","log","stack","blankInputs","specifiedSelector","nonBlank","input","valueToCheck","inputs","allInputs","add","nonBlankInputs","stopEverything","stopImmediatePropagation","disableElement","bind","enableElement","unbind","ajaxPrefilter","originalOptions","delegate","metaClick","metaKey","ctrlKey","fail","blankRequiredInputs","nonBlankFileInputs","aborted","root","factory","define","amd","exports","module","Sifter","items","diacritics","tokenize","query","trim","String","toLowerCase","n","regex","letter","tokens","words","escape_regex","DIACRITICS","hasOwnProperty","RegExp","string","iterator","object","is_array","Array","forEach","getScoreFunction","search","fields","token_count","prepareSearch","scoreValue","score","scoreObject","field_count","sum","conjunction","getSortFunction","field","fields_count","multiplier","multipliers","get_field","implicit_score","sort_empty","unshift","splice","cmp","option_fields","option_sort","option_sort_empty","total","fn_sort","fn_score","limit","slice","asciifold","k","str","isArray","Object","toString","c","l","r","s","t","u","y","z","chunk","foreignletters","lookup","substring","charAt","regexp","foreignletter","MicroPlugin","mixin","Interface","plugins","initializePlugins","queue","names","requested","loaded","utils","require","shift","loadPlugin","plugin","vArg","Selectize","highlight","pattern","node","skip","nodeType","match","spannode","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","MicroEvent","fct","_events","indexOf","destObject","IS_MAC","navigator","userAgent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_P","KEY_RIGHT","KEY_DOWN","KEY_N","KEY_BACKSPACE","KEY_DELETE","KEY_SHIFT","KEY_CMD","KEY_CTRL","KEY_TAB","TAG_SELECT","TAG_INPUT","SUPPORTS_VALIDITY_API","validity","isset","hash_key","escape_html","escape_replace","hook","before","original","after","once","debounce","args","debounce_events","types","event_args","watchChildEvent","child","getSelection","start","selectionStart","selectionEnd","selection","sel","createRange","selLen","text","moveStart","transferStyles","$from","$to","properties","styles","measureString","$test","whiteSpace","autoGrow","currentWidth","update","keyCode","printable","placeholder","character","altKey","force","shiftKey","fromCharCode","toUpperCase","triggerHandler","dir","selectize","computedStyle","getComputedStyle","getPropertyValue","currentStyle","order","tabIndex","tagType","rtl","eventNS","count","highlightedValue","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","isShiftDown","isCmdDown","isCtrlDown","ignoreFocus","ignoreBlur","ignoreHover","hasOptions","currentResults","lastValue","caretPos","loading","loadedSearches","$activeOption","$activeItems","optgroups","userOptions","renderCache","onSearchChange","loadThrottle","sifter","registerOption","registerOptionGroup","mode","maxItems","hideSelected","setupCallbacks","setupTemplates","setup","$wrapper","$control","$control_input","$dropdown","$dropdown_content","$dropdown_parent","inputMode","classes","classes_plugins","$window","wrapperClass","inputClass","dropdownParent","dropdownClass","dropdownContentClass","copyClassesToDropdown","splitOn","delimiter","delimiterEscaped","onOptionHover","onOptionSelect","onItemSelect","mousedown","onMouseDown","onClick","onKeyDown","keyup","onKeyUp","keypress","onKeyPress","positionDropdown","blur","onBlur","onFocus","paste","onPaste","revertSettings","$children","tabindex","setValue","refreshState","updateOriginalInput","refreshItems","updatePlaceholder","onChange","preload","field_label","labelField","field_optgroup","optgroupLabelField","templates","optgroup","optgroup_header","option_create","render","callbacks","initialize","change","item_add","item_remove","option_add","option_remove","option_clear","optgroup_add","optgroup_remove","optgroup_clear","dropdown_open","dropdown_close","defaultPrevented","open","setActiveItem","isFull","splitInput","createItem","create","selectAll","getAdjacentOption","setActiveOption","$prev","advanceSelection","selectOnTab","deleteSelection","refreshOptions","wasFocused","showInput","openOnFocus","dest","activeElement","deactivate","setTextboxValue","setCaret","createOnBlur","closeAfterSelect","lastQuery","addItem","getOption","loadingClass","results","addOption","getValue","silent","events","addItems","$item","eventName","idx","begin","swap","$last","hideInput","$option","height_menu","height_item","scroll_top","scroll_bottom","outerHeight","stop","scrollDuration","opacity","getSearchOptions","sortField","searchField","searchConjunction","calculateScore","triggerDropdown","j","groups","groups_order","option_html","html_children","has_create_option","$active_before","$create","active_before","maxOptions","min","optgroupField","lockOptgroupOrder","a_order","$order","b_order","canCreate","prepend","addPrecedence","valueField","optgroupValueField","addOptionGroup","removeOptionGroup","clearOptionGroups","updateOption","$item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","replaceWith","removeOption","removeItem","clearOptions","getElementWithValue","$options","$els","getAttribute","values","isPending","value_next","wasFull","insertAtCaret","persist","caret","lock","unlock","output","invalid","refreshClasses","isEmptyObject","opts","label","visibility","outerWidth","option_select","$option_select","$tail","onDelete","pop","tail","valueLength","cursorAtEdge","advanceCaret","$adj","$child","templateName","cache","regex_tag","clearCache","createFilter","allowEmptyOption","dataAttr","settings_user","attr_data","field_value","field_optgroup_label","field_optgroup_value","init_textbox","settings_element","data_raw","JSON","parse","init_select","optionsMap","readData","group","arr","addGroup","$optgroup","instance","tag_name","sortable","forcePlaceholderSize","disabled","ui","helper","overflow","headerClass","titleRowClass","labelClass","closeClass","$dropdown_header","equalizeWidth","equalizeHeight","getScrollbarWidth","div","doc","innerHTML","firstChild","equalizeSizes","height_max","width_last","width_parent","$optgroups","html_container","html_element","render_item","slug"],"mappings":"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","file":"app.js","sourcesContent":["/*!\n * Bootstrap v3.3.5 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n\n+function ($) {\n  'use strict';\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.5\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.3.5\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.5'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.5\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.5'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.5\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.5'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.5\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.5'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.5\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.5'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.3.5\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.5'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.5\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.5'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.3.5\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.5'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.5\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.5'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.5\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.5'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.5\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.5'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","(function($, undefined) {\n\n/**\n * Unobtrusive scripting adapter for jQuery\n * https://github.com/rails/jquery-ujs\n *\n * Requires jQuery 1.8.0 or later.\n *\n * Released under the MIT license\n *\n */\n\n  // Cut down on the number of issues from people inadvertently including jquery_ujs twice\n  // by detecting and raising an error when it happens.\n  'use strict';\n\n  if ( $.rails !== undefined ) {\n    $.error('jquery-ujs has already been loaded!');\n  }\n\n  // Shorthand to make it a little easier to call public rails functions from within rails.js\n  var rails;\n  var $document = $(document);\n\n  $.rails = rails = {\n    // Link elements bound by jquery-ujs\n    linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote], a[data-disable-with], a[data-disable]',\n\n    // Button elements bound by jquery-ujs\n    buttonClickSelector: 'button[data-remote]:not(form button), button[data-confirm]:not(form button)',\n\n    // Select elements bound by jquery-ujs\n    inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',\n\n    // Form elements bound by jquery-ujs\n    formSubmitSelector: 'form',\n\n    // Form input elements bound by jquery-ujs\n    formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',\n\n    // Form input elements disabled during form submission\n    disableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',\n\n    // Form input elements re-enabled after form submission\n    enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',\n\n    // Form required input elements\n    requiredInputSelector: 'input[name][required]:not([disabled]),textarea[name][required]:not([disabled])',\n\n    // Form file input elements\n    fileInputSelector: 'input[type=file]',\n\n    // Link onClick disable selector with possible reenable after remote submission\n    linkDisableSelector: 'a[data-disable-with], a[data-disable]',\n\n    // Button onClick disable selector with possible reenable after remote submission\n    buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]',\n\n    // Up-to-date Cross-Site Request Forgery token\n    csrfToken: function() {\n     return $('meta[name=csrf-token]').attr('content');\n    },\n\n    // URL param that must contain the CSRF token\n    csrfParam: function() {\n     return $('meta[name=csrf-param]').attr('content');\n    },\n\n    // Make sure that every Ajax request sends the CSRF token\n    CSRFProtection: function(xhr) {\n      var token = rails.csrfToken();\n      if (token) xhr.setRequestHeader('X-CSRF-Token', token);\n    },\n\n    // making sure that all forms have actual up-to-date token(cached forms contain old one)\n    refreshCSRFTokens: function(){\n      $('form input[name=\"' + rails.csrfParam() + '\"]').val(rails.csrfToken());\n    },\n\n    // Triggers an event on an element and returns false if the event result is false\n    fire: function(obj, name, data) {\n      var event = $.Event(name);\n      obj.trigger(event, data);\n      return event.result !== false;\n    },\n\n    // Default confirm dialog, may be overridden with custom confirm dialog in $.rails.confirm\n    confirm: function(message) {\n      return confirm(message);\n    },\n\n    // Default ajax function, may be overridden with custom function in $.rails.ajax\n    ajax: function(options) {\n      return $.ajax(options);\n    },\n\n    // Default way to get an element's href. May be overridden at $.rails.href.\n    href: function(element) {\n      return element[0].href;\n    },\n\n    // Checks \"data-remote\" if true to handle the request through a XHR request.\n    isRemote: function(element) {\n      return element.data('remote') !== undefined && element.data('remote') !== false;\n    },\n\n    // Submits \"remote\" forms and links with ajax\n    handleRemote: function(element) {\n      var method, url, data, withCredentials, dataType, options;\n\n      if (rails.fire(element, 'ajax:before')) {\n        withCredentials = element.data('with-credentials') || null;\n        dataType = element.data('type') || ($.ajaxSettings && $.ajaxSettings.dataType);\n\n        if (element.is('form')) {\n          method = element.attr('method');\n          url = element.attr('action');\n          data = element.serializeArray();\n          // memoized value from clicked submit button\n          var button = element.data('ujs:submit-button');\n          if (button) {\n            data.push(button);\n            element.data('ujs:submit-button', null);\n          }\n        } else if (element.is(rails.inputChangeSelector)) {\n          method = element.data('method');\n          url = element.data('url');\n          data = element.serialize();\n          if (element.data('params')) data = data + '&' + element.data('params');\n        } else if (element.is(rails.buttonClickSelector)) {\n          method = element.data('method') || 'get';\n          url = element.data('url');\n          data = element.serialize();\n          if (element.data('params')) data = data + '&' + element.data('params');\n        } else {\n          method = element.data('method');\n          url = rails.href(element);\n          data = element.data('params') || null;\n        }\n\n        options = {\n          type: method || 'GET', data: data, dataType: dataType,\n          // stopping the \"ajax:beforeSend\" event will cancel the ajax request\n          beforeSend: function(xhr, settings) {\n            if (settings.dataType === undefined) {\n              xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);\n            }\n            if (rails.fire(element, 'ajax:beforeSend', [xhr, settings])) {\n              element.trigger('ajax:send', xhr);\n            } else {\n              return false;\n            }\n          },\n          success: function(data, status, xhr) {\n            element.trigger('ajax:success', [data, status, xhr]);\n          },\n          complete: function(xhr, status) {\n            element.trigger('ajax:complete', [xhr, status]);\n          },\n          error: function(xhr, status, error) {\n            element.trigger('ajax:error', [xhr, status, error]);\n          },\n          crossDomain: rails.isCrossDomain(url)\n        };\n\n        // There is no withCredentials for IE6-8 when\n        // \"Enable native XMLHTTP support\" is disabled\n        if (withCredentials) {\n          options.xhrFields = {\n            withCredentials: withCredentials\n          };\n        }\n\n        // Only pass url to `ajax` options if not blank\n        if (url) { options.url = url; }\n\n        return rails.ajax(options);\n      } else {\n        return false;\n      }\n    },\n\n    // Determines if the request is a cross domain request.\n    isCrossDomain: function(url) {\n      var originAnchor = document.createElement('a');\n      originAnchor.href = location.href;\n      var urlAnchor = document.createElement('a');\n\n      try {\n        urlAnchor.href = url;\n        // This is a workaround to a IE bug.\n        urlAnchor.href = urlAnchor.href;\n\n        // Make sure that the browser parses the URL and that the protocols and hosts match.\n        return !urlAnchor.protocol || !urlAnchor.host ||\n          (originAnchor.protocol + '//' + originAnchor.host !==\n            urlAnchor.protocol + '//' + urlAnchor.host);\n      } catch (e) {\n        // If there is an error parsing the URL, assume it is crossDomain.\n        return true;\n      }\n    },\n\n    // Handles \"data-method\" on links such as:\n    // <a href=\"/users/5\" data-method=\"delete\" rel=\"nofollow\" data-confirm=\"Are you sure?\">Delete</a>\n    handleMethod: function(link) {\n      var href = rails.href(link),\n        method = link.data('method'),\n        target = link.attr('target'),\n        csrfToken = rails.csrfToken(),\n        csrfParam = rails.csrfParam(),\n        form = $('<form method=\"post\" action=\"' + href + '\"></form>'),\n        metadataInput = '<input name=\"_method\" value=\"' + method + '\" type=\"hidden\" />';\n\n      if (csrfParam !== undefined && csrfToken !== undefined && !rails.isCrossDomain(href)) {\n        metadataInput += '<input name=\"' + csrfParam + '\" value=\"' + csrfToken + '\" type=\"hidden\" />';\n      }\n\n      if (target) { form.attr('target', target); }\n\n      form.hide().append(metadataInput).appendTo('body');\n      form.submit();\n    },\n\n    // Helper function that returns form elements that match the specified CSS selector\n    // If form is actually a \"form\" element this will return associated elements outside the from that have\n    // the html form attribute set\n    formElements: function(form, selector) {\n      return form.is('form') ? $(form[0].elements).filter(selector) : form.find(selector);\n    },\n\n    /* Disables form elements:\n      - Caches element value in 'ujs:enable-with' data store\n      - Replaces element text with value of 'data-disable-with' attribute\n      - Sets disabled property to true\n    */\n    disableFormElements: function(form) {\n      rails.formElements(form, rails.disableSelector).each(function() {\n        rails.disableFormElement($(this));\n      });\n    },\n\n    disableFormElement: function(element) {\n      var method, replacement;\n\n      method = element.is('button') ? 'html' : 'val';\n      replacement = element.data('disable-with');\n\n      element.data('ujs:enable-with', element[method]());\n      if (replacement !== undefined) {\n        element[method](replacement);\n      }\n\n      element.prop('disabled', true);\n    },\n\n    /* Re-enables disabled form elements:\n      - Replaces element text with cached value from 'ujs:enable-with' data store (created in `disableFormElements`)\n      - Sets disabled property to false\n    */\n    enableFormElements: function(form) {\n      rails.formElements(form, rails.enableSelector).each(function() {\n        rails.enableFormElement($(this));\n      });\n    },\n\n    enableFormElement: function(element) {\n      var method = element.is('button') ? 'html' : 'val';\n      if (element.data('ujs:enable-with')) element[method](element.data('ujs:enable-with'));\n      element.prop('disabled', false);\n    },\n\n   /* For 'data-confirm' attribute:\n      - Fires `confirm` event\n      - Shows the confirmation dialog\n      - Fires the `confirm:complete` event\n\n      Returns `true` if no function stops the chain and user chose yes; `false` otherwise.\n      Attaching a handler to the element's `confirm` event that returns a `falsy` value cancels the confirmation dialog.\n      Attaching a handler to the element's `confirm:complete` event that returns a `falsy` value makes this function\n      return false. The `confirm:complete` event is fired whether or not the user answered true or false to the dialog.\n   */\n    allowAction: function(element) {\n      var message = element.data('confirm'),\n          answer = false, callback;\n      if (!message) { return true; }\n\n      if (rails.fire(element, 'confirm')) {\n        try {\n          answer = rails.confirm(message);\n        } catch (e) {\n          (console.error || console.log).call(console, e.stack || e);\n        }\n        callback = rails.fire(element, 'confirm:complete', [answer]);\n      }\n      return answer && callback;\n    },\n\n    // Helper function which checks for blank inputs in a form that match the specified CSS selector\n    blankInputs: function(form, specifiedSelector, nonBlank) {\n      var inputs = $(), input, valueToCheck,\n          selector = specifiedSelector || 'input,textarea',\n          allInputs = form.find(selector);\n\n      allInputs.each(function() {\n        input = $(this);\n        valueToCheck = input.is('input[type=checkbox],input[type=radio]') ? input.is(':checked') : !!input.val();\n        if (valueToCheck === nonBlank) {\n\n          // Don't count unchecked required radio if other radio with same name is checked\n          if (input.is('input[type=radio]') && allInputs.filter('input[type=radio]:checked[name=\"' + input.attr('name') + '\"]').length) {\n            return true; // Skip to next input\n          }\n\n          inputs = inputs.add(input);\n        }\n      });\n      return inputs.length ? inputs : false;\n    },\n\n    // Helper function which checks for non-blank inputs in a form that match the specified CSS selector\n    nonBlankInputs: function(form, specifiedSelector) {\n      return rails.blankInputs(form, specifiedSelector, true); // true specifies nonBlank\n    },\n\n    // Helper function, needed to provide consistent behavior in IE\n    stopEverything: function(e) {\n      $(e.target).trigger('ujs:everythingStopped');\n      e.stopImmediatePropagation();\n      return false;\n    },\n\n    //  replace element's html with the 'data-disable-with' after storing original html\n    //  and prevent clicking on it\n    disableElement: function(element) {\n      var replacement = element.data('disable-with');\n\n      element.data('ujs:enable-with', element.html()); // store enabled state\n      if (replacement !== undefined) {\n        element.html(replacement);\n      }\n\n      element.bind('click.railsDisable', function(e) { // prevent further clicking\n        return rails.stopEverything(e);\n      });\n    },\n\n    // restore element to its original state which was disabled by 'disableElement' above\n    enableElement: function(element) {\n      if (element.data('ujs:enable-with') !== undefined) {\n        element.html(element.data('ujs:enable-with')); // set to old enabled state\n        element.removeData('ujs:enable-with'); // clean up cache\n      }\n      element.unbind('click.railsDisable'); // enable element\n    }\n  };\n\n  if (rails.fire($document, 'rails:attachBindings')) {\n\n    $.ajaxPrefilter(function(options, originalOptions, xhr){ if ( !options.crossDomain ) { rails.CSRFProtection(xhr); }});\n\n    // This event works the same as the load event, except that it fires every\n    // time the page is loaded.\n    //\n    // See https://github.com/rails/jquery-ujs/issues/357\n    // See https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching\n    $(window).on('pageshow.rails', function () {\n      $($.rails.enableSelector).each(function () {\n        var element = $(this);\n\n        if (element.data('ujs:enable-with')) {\n          $.rails.enableFormElement(element);\n        }\n      });\n\n      $($.rails.linkDisableSelector).each(function () {\n        var element = $(this);\n\n        if (element.data('ujs:enable-with')) {\n          $.rails.enableElement(element);\n        }\n      });\n    });\n\n    $document.delegate(rails.linkDisableSelector, 'ajax:complete', function() {\n        rails.enableElement($(this));\n    });\n\n    $document.delegate(rails.buttonDisableSelector, 'ajax:complete', function() {\n        rails.enableFormElement($(this));\n    });\n\n    $document.delegate(rails.linkClickSelector, 'click.rails', function(e) {\n      var link = $(this), method = link.data('method'), data = link.data('params'), metaClick = e.metaKey || e.ctrlKey;\n      if (!rails.allowAction(link)) return rails.stopEverything(e);\n\n      if (!metaClick && link.is(rails.linkDisableSelector)) rails.disableElement(link);\n\n      if (rails.isRemote(link)) {\n        if (metaClick && (!method || method === 'GET') && !data) { return true; }\n\n        var handleRemote = rails.handleRemote(link);\n        // response from rails.handleRemote() will either be false or a deferred object promise.\n        if (handleRemote === false) {\n          rails.enableElement(link);\n        } else {\n          handleRemote.fail( function() { rails.enableElement(link); } );\n        }\n        return false;\n\n      } else if (method) {\n        rails.handleMethod(link);\n        return false;\n      }\n    });\n\n    $document.delegate(rails.buttonClickSelector, 'click.rails', function(e) {\n      var button = $(this);\n\n      if (!rails.allowAction(button) || !rails.isRemote(button)) return rails.stopEverything(e);\n\n      if (button.is(rails.buttonDisableSelector)) rails.disableFormElement(button);\n\n      var handleRemote = rails.handleRemote(button);\n      // response from rails.handleRemote() will either be false or a deferred object promise.\n      if (handleRemote === false) {\n        rails.enableFormElement(button);\n      } else {\n        handleRemote.fail( function() { rails.enableFormElement(button); } );\n      }\n      return false;\n    });\n\n    $document.delegate(rails.inputChangeSelector, 'change.rails', function(e) {\n      var link = $(this);\n      if (!rails.allowAction(link) || !rails.isRemote(link)) return rails.stopEverything(e);\n\n      rails.handleRemote(link);\n      return false;\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'submit.rails', function(e) {\n      var form = $(this),\n        remote = rails.isRemote(form),\n        blankRequiredInputs,\n        nonBlankFileInputs;\n\n      if (!rails.allowAction(form)) return rails.stopEverything(e);\n\n      // skip other logic when required values are missing or file upload is present\n      if (form.attr('novalidate') === undefined) {\n        blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector, false);\n        if (blankRequiredInputs && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {\n          return rails.stopEverything(e);\n        }\n      }\n\n      if (remote) {\n        nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);\n        if (nonBlankFileInputs) {\n          // slight timeout so that the submit button gets properly serialized\n          // (make it easy for event handler to serialize form without disabled values)\n          setTimeout(function(){ rails.disableFormElements(form); }, 13);\n          var aborted = rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);\n\n          // re-enable form elements if event bindings return false (canceling normal form submission)\n          if (!aborted) { setTimeout(function(){ rails.enableFormElements(form); }, 13); }\n\n          return aborted;\n        }\n\n        rails.handleRemote(form);\n        return false;\n\n      } else {\n        // slight timeout so that the submit button gets properly serialized\n        setTimeout(function(){ rails.disableFormElements(form); }, 13);\n      }\n    });\n\n    $document.delegate(rails.formInputClickSelector, 'click.rails', function(event) {\n      var button = $(this);\n\n      if (!rails.allowAction(button)) return rails.stopEverything(event);\n\n      // register the pressed submit button\n      var name = button.attr('name'),\n        data = name ? {name:name, value:button.val()} : null;\n\n      button.closest('form').data('ujs:submit-button', data);\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'ajax:send.rails', function(event) {\n      if (this === event.target) rails.disableFormElements($(this));\n    });\n\n    $document.delegate(rails.formSubmitSelector, 'ajax:complete.rails', function(event) {\n      if (this === event.target) rails.enableFormElements($(this));\n    });\n\n    $(function(){\n      rails.refreshCSRFTokens();\n    });\n  }\n\n})( jQuery );\n","/**\n * sifter.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('sifter', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Sifter = factory();\n  }\n}(this, function() {\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   * @constructor\n   * @param {array|object} items\n   * @param {object} items\n   */\n  var Sifter = function(items, settings) {\n    this.items = items;\n    this.settings = settings || {diacritics: true};\n  };\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   * @param {string} query\n   * @returns {array}\n   */\n  Sifter.prototype.tokenize = function(query) {\n    query = trim(String(query || '').toLowerCase());\n    if (!query || !query.length) return [];\n\n    var i, n, regex, letter;\n    var tokens = [];\n    var words = query.split(/ +/);\n\n    for (i = 0, n = words.length; i < n; i++) {\n      regex = escape_regex(words[i]);\n      if (this.settings.diacritics) {\n        for (letter in DIACRITICS) {\n          if (DIACRITICS.hasOwnProperty(letter)) {\n            regex = regex.replace(new RegExp(letter, 'g'), DIACRITICS[letter]);\n          }\n        }\n      }\n      tokens.push({\n        string : words[i],\n        regex  : new RegExp(regex, 'i')\n      });\n    }\n\n    return tokens;\n  };\n\n  /**\n   * Iterates over arrays and hashes.\n   *\n   * ```\n   * this.iterator(this.items, function(item, id) {\n   *    // invoked for each item\n   * });\n   * ```\n   *\n   * @param {array|object} object\n   */\n  Sifter.prototype.iterator = function(object, callback) {\n    var iterator;\n    if (is_array(object)) {\n      iterator = Array.prototype.forEach || function(callback) {\n        for (var i = 0, n = this.length; i < n; i++) {\n          callback(this[i], i, this);\n        }\n      };\n    } else {\n      iterator = function(callback) {\n        for (var key in this) {\n          if (this.hasOwnProperty(key)) {\n            callback(this[key], key, this);\n          }\n        }\n      };\n    }\n\n    iterator.apply(object, [callback]);\n  };\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @param {object|string} search\n   * @param {object} options (optional)\n   * @returns {function}\n   */\n  Sifter.prototype.getScoreFunction = function(search, options) {\n    var self, fields, tokens, token_count;\n\n    self        = this;\n    search      = self.prepareSearch(search, options);\n    tokens      = search.tokens;\n    fields      = search.options.fields;\n    token_count = tokens.length;\n\n    /**\n     * Calculates how close of a match the\n     * given value is against a search token.\n     *\n     * @param {mixed} value\n     * @param {object} token\n     * @return {number}\n     */\n    var scoreValue = function(value, token) {\n      var score, pos;\n\n      if (!value) return 0;\n      value = String(value || '');\n      pos = value.search(token.regex);\n      if (pos === -1) return 0;\n      score = token.string.length / value.length;\n      if (pos === 0) score += 0.5;\n      return score;\n    };\n\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     * @param {object} token\n     * @param {object} data\n     * @return {number}\n     */\n    var scoreObject = (function() {\n      var field_count = fields.length;\n      if (!field_count) {\n        return function() { return 0; };\n      }\n      if (field_count === 1) {\n        return function(token, data) {\n          return scoreValue(data[fields[0]], token);\n        };\n      }\n      return function(token, data) {\n        for (var i = 0, sum = 0; i < field_count; i++) {\n          sum += scoreValue(data[fields[i]], token);\n        }\n        return sum / field_count;\n      };\n    })();\n\n    if (!token_count) {\n      return function() { return 0; };\n    }\n    if (token_count === 1) {\n      return function(data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function(data) {\n        var score;\n        for (var i = 0, sum = 0; i < token_count; i++) {\n          score = scoreObject(tokens[i], data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n        return sum / token_count;\n      };\n    } else {\n      return function(data) {\n        for (var i = 0, sum = 0; i < token_count; i++) {\n          sum += scoreObject(tokens[i], data);\n        }\n        return sum / token_count;\n      };\n    }\n  };\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @param {string|object} search\n   * @param {object} options\n   * @return function(a,b)\n   */\n  Sifter.prototype.getSortFunction = function(search, options) {\n    var i, n, self, field, fields, fields_count, multiplier, multipliers, get_field, implicit_score, sort;\n\n    self   = this;\n    search = self.prepareSearch(search, options);\n    sort   = (!search.query && options.sort_empty) || options.sort;\n\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     * @param  {string} name\n     * @param  {object} result\n     * @return {mixed}\n     */\n    get_field = function(name, result) {\n      if (name === '$score') return result.score;\n      return self.items[result.id][name];\n    };\n\n    // parse options\n    fields = [];\n    if (sort) {\n      for (i = 0, n = sort.length; i < n; i++) {\n        if (search.query || sort[i].field !== '$score') {\n          fields.push(sort[i]);\n        }\n      }\n    }\n\n    // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n    if (search.query) {\n      implicit_score = true;\n      for (i = 0, n = fields.length; i < n; i++) {\n        if (fields[i].field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n      if (implicit_score) {\n        fields.unshift({field: '$score', direction: 'desc'});\n      }\n    } else {\n      for (i = 0, n = fields.length; i < n; i++) {\n        if (fields[i].field === '$score') {\n          fields.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    multipliers = [];\n    for (i = 0, n = fields.length; i < n; i++) {\n      multipliers.push(fields[i].direction === 'desc' ? -1 : 1);\n    }\n\n    // build function\n    fields_count = fields.length;\n    if (!fields_count) {\n      return null;\n    } else if (fields_count === 1) {\n      field = fields[0].field;\n      multiplier = multipliers[0];\n      return function(a, b) {\n        return multiplier * cmp(\n          get_field(field, a),\n          get_field(field, b)\n        );\n      };\n    } else {\n      return function(a, b) {\n        var i, result, a_value, b_value, field;\n        for (i = 0; i < fields_count; i++) {\n          field = fields[i].field;\n          result = multipliers[i] * cmp(\n            get_field(field, a),\n            get_field(field, b)\n          );\n          if (result) return result;\n        }\n        return 0;\n      };\n    }\n  };\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   * @param {string} query\n   * @param {object} options\n   * @returns {object}\n   */\n  Sifter.prototype.prepareSearch = function(query, options) {\n    if (typeof query === 'object') return query;\n\n    options = extend({}, options);\n\n    var option_fields     = options.fields;\n    var option_sort       = options.sort;\n    var option_sort_empty = options.sort_empty;\n\n    if (option_fields && !is_array(option_fields)) options.fields = [option_fields];\n    if (option_sort && !is_array(option_sort)) options.sort = [option_sort];\n    if (option_sort_empty && !is_array(option_sort_empty)) options.sort_empty = [option_sort_empty];\n\n    return {\n      options : options,\n      query   : String(query || '').toLowerCase(),\n      tokens  : this.tokenize(query),\n      total   : 0,\n      items   : []\n    };\n  };\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   * The `options` parameter can contain:\n   *\n   *   - fields {string|array}\n   *   - sort {array}\n   *   - score {function}\n   *   - filter {bool}\n   *   - limit {integer}\n   *\n   * Returns an object containing:\n   *\n   *   - options {object}\n   *   - query {string}\n   *   - tokens {array}\n   *   - total {int}\n   *   - items {array}\n   *\n   * @param {string} query\n   * @param {object} options\n   * @returns {object}\n   */\n  Sifter.prototype.search = function(query, options) {\n    var self = this, value, score, search, calculateScore;\n    var fn_sort;\n    var fn_score;\n\n    search  = this.prepareSearch(query, options);\n    options = search.options;\n    query   = search.query;\n\n    // generate result scoring function\n    fn_score = options.score || self.getScoreFunction(search);\n\n    // perform search and sort\n    if (query.length) {\n      self.iterator(self.items, function(item, id) {\n        score = fn_score(item);\n        if (options.filter === false || score > 0) {\n          search.items.push({'score': score, 'id': id});\n        }\n      });\n    } else {\n      self.iterator(self.items, function(item, id) {\n        search.items.push({'score': 1, 'id': id});\n      });\n    }\n\n    fn_sort = self.getSortFunction(search, options);\n    if (fn_sort) search.items.sort(fn_sort);\n\n    // apply limits\n    search.total = search.items.length;\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  };\n\n  // utilities\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  var cmp = function(a, b) {\n    if (typeof a === 'number' && typeof b === 'number') {\n      return a > b ? 1 : (a < b ? -1 : 0);\n    }\n    a = asciifold(String(a || ''));\n    b = asciifold(String(b || ''));\n    if (a > b) return 1;\n    if (b > a) return -1;\n    return 0;\n  };\n\n  var extend = function(a, b) {\n    var i, n, k, object;\n    for (i = 1, n = arguments.length; i < n; i++) {\n      object = arguments[i];\n      if (!object) continue;\n      for (k in object) {\n        if (object.hasOwnProperty(k)) {\n          a[k] = object[k];\n        }\n      }\n    }\n    return a;\n  };\n\n  var trim = function(str) {\n    return (str + '').replace(/^\\s+|\\s+$|/g, '');\n  };\n\n  var escape_regex = function(str) {\n    return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  };\n\n  var is_array = Array.isArray || ($ && $.isArray) || function(object) {\n    return Object.prototype.toString.call(object) === '[object Array]';\n  };\n\n  var DIACRITICS = {\n    'a': '[aÀÁÂÃÄÅàáâãäåĀāąĄ]',\n    'c': '[cÇçćĆčČ]',\n    'd': '[dđĐďĎ]',\n    'e': '[eÈÉÊËèéêëěĚĒēęĘ]',\n    'i': '[iÌÍÎÏìíîïĪī]',\n    'l': '[lłŁ]',\n    'n': '[nÑñňŇńŃ]',\n    'o': '[oÒÓÔÕÕÖØòóôõöøŌō]',\n    'r': '[rřŘ]',\n    's': '[sŠšśŚ]',\n    't': '[tťŤ]',\n    'u': '[uÙÚÛÜùúûüůŮŪū]',\n    'y': '[yŸÿýÝ]',\n    'z': '[zŽžżŻźŹ]'\n  };\n\n  var asciifold = (function() {\n    var i, n, k, chunk;\n    var foreignletters = '';\n    var lookup = {};\n    for (k in DIACRITICS) {\n      if (DIACRITICS.hasOwnProperty(k)) {\n        chunk = DIACRITICS[k].substring(2, DIACRITICS[k].length - 1);\n        foreignletters += chunk;\n        for (i = 0, n = chunk.length; i < n; i++) {\n          lookup[chunk.charAt(i)] = k;\n        }\n      }\n    }\n    var regexp = new RegExp('[' +  foreignletters + ']', 'g');\n    return function(str) {\n      return str.replace(regexp, function(foreignletter) {\n        return lookup[foreignletter];\n      }).toLowerCase();\n    };\n  })();\n\n\n  // export\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  return Sifter;\n}));\n\n\n\n/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('microplugin', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.MicroPlugin = factory();\n  }\n}(this, function() {\n  var MicroPlugin = {};\n\n  MicroPlugin.mixin = function(Interface) {\n    Interface.plugins = {};\n\n    /**\n     * Initializes the listed plugins (with options).\n     * Acceptable formats:\n     *\n     * List (without options):\n     *   ['a', 'b', 'c']\n     *\n     * List (with options):\n     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n     *\n     * Hash (with options):\n     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n     *\n     * @param {mixed} plugins\n     */\n    Interface.prototype.initializePlugins = function(plugins) {\n      var i, n, key;\n      var self  = this;\n      var queue = [];\n\n      self.plugins = {\n        names     : [],\n        settings  : {},\n        requested : {},\n        loaded    : {}\n      };\n\n      if (utils.isArray(plugins)) {\n        for (i = 0, n = plugins.length; i < n; i++) {\n          if (typeof plugins[i] === 'string') {\n            queue.push(plugins[i]);\n          } else {\n            self.plugins.settings[plugins[i].name] = plugins[i].options;\n            queue.push(plugins[i].name);\n          }\n        }\n      } else if (plugins) {\n        for (key in plugins) {\n          if (plugins.hasOwnProperty(key)) {\n            self.plugins.settings[key] = plugins[key];\n            queue.push(key);\n          }\n        }\n      }\n\n      while (queue.length) {\n        self.require(queue.shift());\n      }\n    };\n\n    Interface.prototype.loadPlugin = function(name) {\n      var self    = this;\n      var plugins = self.plugins;\n      var plugin  = Interface.plugins[name];\n\n      if (!Interface.plugins.hasOwnProperty(name)) {\n        throw new Error('Unable to find \"' +  name + '\" plugin');\n      }\n\n      plugins.requested[name] = true;\n      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n      plugins.names.push(name);\n    };\n\n    /**\n     * Initializes a plugin.\n     *\n     * @param {string} name\n     */\n    Interface.prototype.require = function(name) {\n      var self = this;\n      var plugins = self.plugins;\n\n      if (!self.plugins.loaded.hasOwnProperty(name)) {\n        if (plugins.requested[name]) {\n          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n        }\n        self.loadPlugin(name);\n      }\n\n      return plugins.loaded[name];\n    };\n\n    /**\n     * Registers a plugin.\n     *\n     * @param {string} name\n     * @param {function} fn\n     */\n    Interface.define = function(name, fn) {\n      Interface.plugins[name] = {\n        'name' : name,\n        'fn'   : fn\n      };\n    };\n  };\n\n  var utils = {\n    isArray: Array.isArray || function(vArg) {\n      return Object.prototype.toString.call(vArg) === '[object Array]';\n    }\n  };\n\n  return MicroPlugin;\n}));\n\n/**\n * selectize.js (v0.12.1)\n * Copyright (c) 2013–2015 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\n/*jshint curly:false */\n/*jshint browser:true */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('selectize', ['jquery','sifter','microplugin'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('jquery'), require('sifter'), require('microplugin'));\n  } else {\n    root.Selectize = factory(root.jQuery, root.Sifter, root.MicroPlugin);\n  }\n}(this, function($, Sifter, MicroPlugin) {\n  'use strict';\n\n  var highlight = function($element, pattern) {\n    if (typeof pattern === 'string' && !pattern.length) return;\n    var regex = (typeof pattern === 'string') ? new RegExp(pattern, 'i') : pattern;\n\n    var highlight = function(node) {\n      var skip = 0;\n      if (node.nodeType === 3) {\n        var pos = node.data.search(regex);\n        if (pos >= 0 && node.data.length > 0) {\n          var match = node.data.match(regex);\n          var spannode = document.createElement('span');\n          spannode.className = 'highlight';\n          var middlebit = node.splitText(pos);\n          var endbit = middlebit.splitText(match[0].length);\n          var middleclone = middlebit.cloneNode(true);\n          spannode.appendChild(middleclone);\n          middlebit.parentNode.replaceChild(spannode, middlebit);\n          skip = 1;\n        }\n      } else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) {\n        for (var i = 0; i < node.childNodes.length; ++i) {\n          i += highlight(node.childNodes[i]);\n        }\n      }\n      return skip;\n    };\n\n    return $element.each(function() {\n      highlight(this);\n    });\n  };\n\n  var MicroEvent = function() {};\n  MicroEvent.prototype = {\n    on: function(event, fct){\n      this._events = this._events || {};\n      this._events[event] = this._events[event] || [];\n      this._events[event].push(fct);\n    },\n    off: function(event, fct){\n      var n = arguments.length;\n      if (n === 0) return delete this._events;\n      if (n === 1) return delete this._events[event];\n\n      this._events = this._events || {};\n      if (event in this._events === false) return;\n      this._events[event].splice(this._events[event].indexOf(fct), 1);\n    },\n    trigger: function(event /* , args... */){\n      this._events = this._events || {};\n      if (event in this._events === false) return;\n      for (var i = 0; i < this._events[event].length; i++){\n        this._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n      }\n    }\n  };\n\n  /**\n   * Mixin will delegate all MicroEvent.js function in the destination object.\n   *\n   * - MicroEvent.mixin(Foobar) will make Foobar able to use MicroEvent\n   *\n   * @param {object} the object which will support MicroEvent\n   */\n  MicroEvent.mixin = function(destObject){\n    var props = ['on', 'off', 'trigger'];\n    for (var i = 0; i < props.length; i++){\n      destObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n    }\n  };\n\n  var IS_MAC        = /Mac/.test(navigator.userAgent);\n\n  var KEY_A         = 65;\n  var KEY_COMMA     = 188;\n  var KEY_RETURN    = 13;\n  var KEY_ESC       = 27;\n  var KEY_LEFT      = 37;\n  var KEY_UP        = 38;\n  var KEY_P         = 80;\n  var KEY_RIGHT     = 39;\n  var KEY_DOWN      = 40;\n  var KEY_N         = 78;\n  var KEY_BACKSPACE = 8;\n  var KEY_DELETE    = 46;\n  var KEY_SHIFT     = 16;\n  var KEY_CMD       = IS_MAC ? 91 : 17;\n  var KEY_CTRL      = IS_MAC ? 18 : 17;\n  var KEY_TAB       = 9;\n\n  var TAG_SELECT    = 1;\n  var TAG_INPUT     = 2;\n\n  // for now, android support in general is too spotty to support validity\n  var SUPPORTS_VALIDITY_API = !/android/i.test(window.navigator.userAgent) && !!document.createElement('form').validity;\n\n  var isset = function(object) {\n    return typeof object !== 'undefined';\n  };\n\n  /**\n   * Converts a scalar to its best string representation\n   * for hash keys and HTML attribute values.\n   *\n   * Transformations:\n   *   'str'     -> 'str'\n   *   null      -> ''\n   *   undefined -> ''\n   *   true      -> '1'\n   *   false     -> '0'\n   *   0         -> '0'\n   *   1         -> '1'\n   *\n   * @param {string} value\n   * @returns {string|null}\n   */\n  var hash_key = function(value) {\n    if (typeof value === 'undefined' || value === null) return null;\n    if (typeof value === 'boolean') return value ? '1' : '0';\n    return value + '';\n  };\n\n  /**\n   * Escapes a string for use within HTML.\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  var escape_html = function(str) {\n    return (str + '')\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;');\n  };\n\n  /**\n   * Escapes \"$\" characters in replacement strings.\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  var escape_replace = function(str) {\n    return (str + '').replace(/\\$/g, '$$$$');\n  };\n\n  var hook = {};\n\n  /**\n   * Wraps `method` on `self` so that `fn`\n   * is invoked before the original method.\n   *\n   * @param {object} self\n   * @param {string} method\n   * @param {function} fn\n   */\n  hook.before = function(self, method, fn) {\n    var original = self[method];\n    self[method] = function() {\n      fn.apply(self, arguments);\n      return original.apply(self, arguments);\n    };\n  };\n\n  /**\n   * Wraps `method` on `self` so that `fn`\n   * is invoked after the original method.\n   *\n   * @param {object} self\n   * @param {string} method\n   * @param {function} fn\n   */\n  hook.after = function(self, method, fn) {\n    var original = self[method];\n    self[method] = function() {\n      var result = original.apply(self, arguments);\n      fn.apply(self, arguments);\n      return result;\n    };\n  };\n\n  /**\n   * Wraps `fn` so that it can only be invoked once.\n   *\n   * @param {function} fn\n   * @returns {function}\n   */\n  var once = function(fn) {\n    var called = false;\n    return function() {\n      if (called) return;\n      called = true;\n      fn.apply(this, arguments);\n    };\n  };\n\n  /**\n   * Wraps `fn` so that it can only be called once\n   * every `delay` milliseconds (invoked on the falling edge).\n   *\n   * @param {function} fn\n   * @param {int} delay\n   * @returns {function}\n   */\n  var debounce = function(fn, delay) {\n    var timeout;\n    return function() {\n      var self = this;\n      var args = arguments;\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(function() {\n        fn.apply(self, args);\n      }, delay);\n    };\n  };\n\n  /**\n   * Debounce all fired events types listed in `types`\n   * while executing the provided `fn`.\n   *\n   * @param {object} self\n   * @param {array} types\n   * @param {function} fn\n   */\n  var debounce_events = function(self, types, fn) {\n    var type;\n    var trigger = self.trigger;\n    var event_args = {};\n\n    // override trigger method\n    self.trigger = function() {\n      var type = arguments[0];\n      if (types.indexOf(type) !== -1) {\n        event_args[type] = arguments;\n      } else {\n        return trigger.apply(self, arguments);\n      }\n    };\n\n    // invoke provided function\n    fn.apply(self, []);\n    self.trigger = trigger;\n\n    // trigger queued events\n    for (type in event_args) {\n      if (event_args.hasOwnProperty(type)) {\n        trigger.apply(self, event_args[type]);\n      }\n    }\n  };\n\n  /**\n   * A workaround for http://bugs.jquery.com/ticket/6696\n   *\n   * @param {object} $parent - Parent element to listen on.\n   * @param {string} event - Event name.\n   * @param {string} selector - Descendant selector to filter by.\n   * @param {function} fn - Event handler.\n   */\n  var watchChildEvent = function($parent, event, selector, fn) {\n    $parent.on(event, selector, function(e) {\n      var child = e.target;\n      while (child && child.parentNode !== $parent[0]) {\n        child = child.parentNode;\n      }\n      e.currentTarget = child;\n      return fn.apply(this, [e]);\n    });\n  };\n\n  /**\n   * Determines the current selection within a text input control.\n   * Returns an object containing:\n   *   - start\n   *   - length\n   *\n   * @param {object} input\n   * @returns {object}\n   */\n  var getSelection = function(input) {\n    var result = {};\n    if ('selectionStart' in input) {\n      result.start = input.selectionStart;\n      result.length = input.selectionEnd - result.start;\n    } else if (document.selection) {\n      input.focus();\n      var sel = document.selection.createRange();\n      var selLen = document.selection.createRange().text.length;\n      sel.moveStart('character', -input.value.length);\n      result.start = sel.text.length - selLen;\n      result.length = selLen;\n    }\n    return result;\n  };\n\n  /**\n   * Copies CSS properties from one element to another.\n   *\n   * @param {object} $from\n   * @param {object} $to\n   * @param {array} properties\n   */\n  var transferStyles = function($from, $to, properties) {\n    var i, n, styles = {};\n    if (properties) {\n      for (i = 0, n = properties.length; i < n; i++) {\n        styles[properties[i]] = $from.css(properties[i]);\n      }\n    } else {\n      styles = $from.css();\n    }\n    $to.css(styles);\n  };\n\n  /**\n   * Measures the width of a string within a\n   * parent element (in pixels).\n   *\n   * @param {string} str\n   * @param {object} $parent\n   * @returns {int}\n   */\n  var measureString = function(str, $parent) {\n    if (!str) {\n      return 0;\n    }\n\n    var $test = $('<test>').css({\n      position: 'absolute',\n      top: -99999,\n      left: -99999,\n      width: 'auto',\n      padding: 0,\n      whiteSpace: 'pre'\n    }).text(str).appendTo('body');\n\n    transferStyles($parent, $test, [\n      'letterSpacing',\n      'fontSize',\n      'fontFamily',\n      'fontWeight',\n      'textTransform'\n    ]);\n\n    var width = $test.width();\n    $test.remove();\n\n    return width;\n  };\n\n  /**\n   * Sets up an input to grow horizontally as the user\n   * types. If the value is changed manually, you can\n   * trigger the \"update\" handler to resize:\n   *\n   * $input.trigger('update');\n   *\n   * @param {object} $input\n   */\n  var autoGrow = function($input) {\n    var currentWidth = null;\n\n    var update = function(e, options) {\n      var value, keyCode, printable, placeholder, width;\n      var shift, character, selection;\n      e = e || window.event || {};\n      options = options || {};\n\n      if (e.metaKey || e.altKey) return;\n      if (!options.force && $input.data('grow') === false) return;\n\n      value = $input.val();\n      if (e.type && e.type.toLowerCase() === 'keydown') {\n        keyCode = e.keyCode;\n        printable = (\n          (keyCode >= 97 && keyCode <= 122) || // a-z\n          (keyCode >= 65 && keyCode <= 90)  || // A-Z\n          (keyCode >= 48 && keyCode <= 57)  || // 0-9\n          keyCode === 32 // space\n        );\n\n        if (keyCode === KEY_DELETE || keyCode === KEY_BACKSPACE) {\n          selection = getSelection($input[0]);\n          if (selection.length) {\n            value = value.substring(0, selection.start) + value.substring(selection.start + selection.length);\n          } else if (keyCode === KEY_BACKSPACE && selection.start) {\n            value = value.substring(0, selection.start - 1) + value.substring(selection.start + 1);\n          } else if (keyCode === KEY_DELETE && typeof selection.start !== 'undefined') {\n            value = value.substring(0, selection.start) + value.substring(selection.start + 1);\n          }\n        } else if (printable) {\n          shift = e.shiftKey;\n          character = String.fromCharCode(e.keyCode);\n          if (shift) character = character.toUpperCase();\n          else character = character.toLowerCase();\n          value += character;\n        }\n      }\n\n      placeholder = $input.attr('placeholder');\n      if (!value && placeholder) {\n        value = placeholder;\n      }\n\n      width = measureString(value, $input) + 4;\n      if (width !== currentWidth) {\n        currentWidth = width;\n        $input.width(width);\n        $input.triggerHandler('resize');\n      }\n    };\n\n    $input.on('keydown keyup update blur', update);\n    update();\n  };\n\n  var Selectize = function($input, settings) {\n    var key, i, n, dir, input, self = this;\n    input = $input[0];\n    input.selectize = self;\n\n    // detect rtl environment\n    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n    dir = computedStyle ? computedStyle.getPropertyValue('direction') : input.currentStyle && input.currentStyle.direction;\n    dir = dir || $input.parents('[dir]:first').attr('dir') || '';\n\n    // setup default state\n    $.extend(self, {\n      order            : 0,\n      settings         : settings,\n      $input           : $input,\n      tabIndex         : $input.attr('tabindex') || '',\n      tagType          : input.tagName.toLowerCase() === 'select' ? TAG_SELECT : TAG_INPUT,\n      rtl              : /rtl/i.test(dir),\n\n      eventNS          : '.selectize' + (++Selectize.count),\n      highlightedValue : null,\n      isOpen           : false,\n      isDisabled       : false,\n      isRequired       : $input.is('[required]'),\n      isInvalid        : false,\n      isLocked         : false,\n      isFocused        : false,\n      isInputHidden    : false,\n      isSetup          : false,\n      isShiftDown      : false,\n      isCmdDown        : false,\n      isCtrlDown       : false,\n      ignoreFocus      : false,\n      ignoreBlur       : false,\n      ignoreHover      : false,\n      hasOptions       : false,\n      currentResults   : null,\n      lastValue        : '',\n      caretPos         : 0,\n      loading          : 0,\n      loadedSearches   : {},\n\n      $activeOption    : null,\n      $activeItems     : [],\n\n      optgroups        : {},\n      options          : {},\n      userOptions      : {},\n      items            : [],\n      renderCache      : {},\n      onSearchChange   : settings.loadThrottle === null ? self.onSearchChange : debounce(self.onSearchChange, settings.loadThrottle)\n    });\n\n    // search system\n    self.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n    // build options table\n    if (self.settings.options) {\n      for (i = 0, n = self.settings.options.length; i < n; i++) {\n        self.registerOption(self.settings.options[i]);\n      }\n      delete self.settings.options;\n    }\n\n    // build optgroup table\n    if (self.settings.optgroups) {\n      for (i = 0, n = self.settings.optgroups.length; i < n; i++) {\n        self.registerOptionGroup(self.settings.optgroups[i]);\n      }\n      delete self.settings.optgroups;\n    }\n\n    // option-dependent defaults\n    self.settings.mode = self.settings.mode || (self.settings.maxItems === 1 ? 'single' : 'multi');\n    if (typeof self.settings.hideSelected !== 'boolean') {\n      self.settings.hideSelected = self.settings.mode === 'multi';\n    }\n\n    self.initializePlugins(self.settings.plugins);\n    self.setupCallbacks();\n    self.setupTemplates();\n    self.setup();\n  };\n\n  // mixins\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  MicroEvent.mixin(Selectize);\n  MicroPlugin.mixin(Selectize);\n\n  // methods\n  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  $.extend(Selectize.prototype, {\n\n    /**\n     * Creates all elements and sets up event bindings.\n     */\n    setup: function() {\n      var self      = this;\n      var settings  = self.settings;\n      var eventNS   = self.eventNS;\n      var $window   = $(window);\n      var $document = $(document);\n      var $input    = self.$input;\n\n      var $wrapper;\n      var $control;\n      var $control_input;\n      var $dropdown;\n      var $dropdown_content;\n      var $dropdown_parent;\n      var inputMode;\n      var timeout_blur;\n      var timeout_focus;\n      var classes;\n      var classes_plugins;\n\n      inputMode         = self.settings.mode;\n      classes           = $input.attr('class') || '';\n\n      $wrapper          = $('<div>').addClass(settings.wrapperClass).addClass(classes).addClass(inputMode);\n      $control          = $('<div>').addClass(settings.inputClass).addClass('items').appendTo($wrapper);\n      $control_input    = $('<input type=\"text\" autocomplete=\"off\" />').appendTo($control).attr('tabindex', $input.is(':disabled') ? '-1' : self.tabIndex);\n      $dropdown_parent  = $(settings.dropdownParent || $wrapper);\n      $dropdown         = $('<div>').addClass(settings.dropdownClass).addClass(inputMode).hide().appendTo($dropdown_parent);\n      $dropdown_content = $('<div>').addClass(settings.dropdownContentClass).appendTo($dropdown);\n\n      if(self.settings.copyClassesToDropdown) {\n        $dropdown.addClass(classes);\n      }\n\n      $wrapper.css({\n        width: $input[0].style.width\n      });\n\n      if (self.plugins.names.length) {\n        classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n        $wrapper.addClass(classes_plugins);\n        $dropdown.addClass(classes_plugins);\n      }\n\n      if ((settings.maxItems === null || settings.maxItems > 1) && self.tagType === TAG_SELECT) {\n        $input.attr('multiple', 'multiple');\n      }\n\n      if (self.settings.placeholder) {\n        $control_input.attr('placeholder', settings.placeholder);\n      }\n\n      // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n      if (!self.settings.splitOn && self.settings.delimiter) {\n        var delimiterEscaped = self.settings.delimiter.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n        self.settings.splitOn = new RegExp('\\\\s*' + delimiterEscaped + '+\\\\s*');\n      }\n\n      if ($input.attr('autocorrect')) {\n        $control_input.attr('autocorrect', $input.attr('autocorrect'));\n      }\n\n      if ($input.attr('autocapitalize')) {\n        $control_input.attr('autocapitalize', $input.attr('autocapitalize'));\n      }\n\n      self.$wrapper          = $wrapper;\n      self.$control          = $control;\n      self.$control_input    = $control_input;\n      self.$dropdown         = $dropdown;\n      self.$dropdown_content = $dropdown_content;\n\n      $dropdown.on('mouseenter', '[data-selectable]', function() { return self.onOptionHover.apply(self, arguments); });\n      $dropdown.on('mousedown click', '[data-selectable]', function() { return self.onOptionSelect.apply(self, arguments); });\n      watchChildEvent($control, 'mousedown', '*:not(input)', function() { return self.onItemSelect.apply(self, arguments); });\n      autoGrow($control_input);\n\n      $control.on({\n        mousedown : function() { return self.onMouseDown.apply(self, arguments); },\n        click     : function() { return self.onClick.apply(self, arguments); }\n      });\n\n      $control_input.on({\n        mousedown : function(e) { e.stopPropagation(); },\n        keydown   : function() { return self.onKeyDown.apply(self, arguments); },\n        keyup     : function() { return self.onKeyUp.apply(self, arguments); },\n        keypress  : function() { return self.onKeyPress.apply(self, arguments); },\n        resize    : function() { self.positionDropdown.apply(self, []); },\n        blur      : function() { return self.onBlur.apply(self, arguments); },\n        focus     : function() { self.ignoreBlur = false; return self.onFocus.apply(self, arguments); },\n        paste     : function() { return self.onPaste.apply(self, arguments); }\n      });\n\n      $document.on('keydown' + eventNS, function(e) {\n        self.isCmdDown = e[IS_MAC ? 'metaKey' : 'ctrlKey'];\n        self.isCtrlDown = e[IS_MAC ? 'altKey' : 'ctrlKey'];\n        self.isShiftDown = e.shiftKey;\n      });\n\n      $document.on('keyup' + eventNS, function(e) {\n        if (e.keyCode === KEY_CTRL) self.isCtrlDown = false;\n        if (e.keyCode === KEY_SHIFT) self.isShiftDown = false;\n        if (e.keyCode === KEY_CMD) self.isCmdDown = false;\n      });\n\n      $document.on('mousedown' + eventNS, function(e) {\n        if (self.isFocused) {\n          // prevent events on the dropdown scrollbar from causing the control to blur\n          if (e.target === self.$dropdown[0] || e.target.parentNode === self.$dropdown[0]) {\n            return false;\n          }\n          // blur on click outside\n          if (!self.$control.has(e.target).length && e.target !== self.$control[0]) {\n            self.blur(e.target);\n          }\n        }\n      });\n\n      $window.on(['scroll' + eventNS, 'resize' + eventNS].join(' '), function() {\n        if (self.isOpen) {\n          self.positionDropdown.apply(self, arguments);\n        }\n      });\n      $window.on('mousemove' + eventNS, function() {\n        self.ignoreHover = false;\n      });\n\n      // store original children and tab index so that they can be\n      // restored when the destroy() method is called.\n      this.revertSettings = {\n        $children : $input.children().detach(),\n        tabindex  : $input.attr('tabindex')\n      };\n\n      $input.attr('tabindex', -1).hide().after(self.$wrapper);\n\n      if ($.isArray(settings.items)) {\n        self.setValue(settings.items);\n        delete settings.items;\n      }\n\n      // feature detect for the validation API\n      if (SUPPORTS_VALIDITY_API) {\n        $input.on('invalid' + eventNS, function(e) {\n          e.preventDefault();\n          self.isInvalid = true;\n          self.refreshState();\n        });\n      }\n\n      self.updateOriginalInput();\n      self.refreshItems();\n      self.refreshState();\n      self.updatePlaceholder();\n      self.isSetup = true;\n\n      if ($input.is(':disabled')) {\n        self.disable();\n      }\n\n      self.on('change', this.onChange);\n\n      $input.data('selectize', self);\n      $input.addClass('selectized');\n      self.trigger('initialize');\n\n      // preload options\n      if (settings.preload === true) {\n        self.onSearchChange('');\n      }\n\n    },\n\n    /**\n     * Sets up default rendering functions.\n     */\n    setupTemplates: function() {\n      var self = this;\n      var field_label = self.settings.labelField;\n      var field_optgroup = self.settings.optgroupLabelField;\n\n      var templates = {\n        'optgroup': function(data) {\n          return '<div class=\"optgroup\">' + data.html + '</div>';\n        },\n        'optgroup_header': function(data, escape) {\n          return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n        },\n        'option': function(data, escape) {\n          return '<div class=\"option\">' + escape(data[field_label]) + '</div>';\n        },\n        'item': function(data, escape) {\n          return '<div class=\"item\">' + escape(data[field_label]) + '</div>';\n        },\n        'option_create': function(data, escape) {\n          return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n        }\n      };\n\n      self.settings.render = $.extend({}, templates, self.settings.render);\n    },\n\n    /**\n     * Maps fired events to callbacks provided\n     * in the settings used when creating the control.\n     */\n    setupCallbacks: function() {\n      var key, fn, callbacks = {\n        'initialize'      : 'onInitialize',\n        'change'          : 'onChange',\n        'item_add'        : 'onItemAdd',\n        'item_remove'     : 'onItemRemove',\n        'clear'           : 'onClear',\n        'option_add'      : 'onOptionAdd',\n        'option_remove'   : 'onOptionRemove',\n        'option_clear'    : 'onOptionClear',\n        'optgroup_add'    : 'onOptionGroupAdd',\n        'optgroup_remove' : 'onOptionGroupRemove',\n        'optgroup_clear'  : 'onOptionGroupClear',\n        'dropdown_open'   : 'onDropdownOpen',\n        'dropdown_close'  : 'onDropdownClose',\n        'type'            : 'onType',\n        'load'            : 'onLoad',\n        'focus'           : 'onFocus',\n        'blur'            : 'onBlur'\n      };\n\n      for (key in callbacks) {\n        if (callbacks.hasOwnProperty(key)) {\n          fn = this.settings[callbacks[key]];\n          if (fn) this.on(key, fn);\n        }\n      }\n    },\n\n    /**\n     * Triggered when the main control element\n     * has a click event.\n     *\n     * @param {object} e\n     * @return {boolean}\n     */\n    onClick: function(e) {\n      var self = this;\n\n      // necessary for mobile webkit devices (manual focus triggering\n      // is ignored unless invoked within a click event)\n      if (!self.isFocused) {\n        self.focus();\n        e.preventDefault();\n      }\n    },\n\n    /**\n     * Triggered when the main control element\n     * has a mouse down event.\n     *\n     * @param {object} e\n     * @return {boolean}\n     */\n    onMouseDown: function(e) {\n      var self = this;\n      var defaultPrevented = e.isDefaultPrevented();\n      var $target = $(e.target);\n\n      if (self.isFocused) {\n        // retain focus by preventing native handling. if the\n        // event target is the input it should not be modified.\n        // otherwise, text selection within the input won't work.\n        if (e.target !== self.$control_input[0]) {\n          if (self.settings.mode === 'single') {\n            // toggle dropdown\n            self.isOpen ? self.close() : self.open();\n          } else if (!defaultPrevented) {\n            self.setActiveItem(null);\n          }\n          return false;\n        }\n      } else {\n        // give control focus\n        if (!defaultPrevented) {\n          window.setTimeout(function() {\n            self.focus();\n          }, 0);\n        }\n      }\n    },\n\n    /**\n     * Triggered when the value of the control has been changed.\n     * This should propagate the event to the original DOM\n     * input / select element.\n     */\n    onChange: function() {\n      this.$input.trigger('change');\n    },\n\n    /**\n     * Triggered on <input> paste.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onPaste: function(e) {\n      var self = this;\n      if (self.isFull() || self.isInputHidden || self.isLocked) {\n        e.preventDefault();\n      } else {\n        // If a regex or string is included, this will split the pasted\n        // input and create Items for each separate value\n        if (self.settings.splitOn) {\n          setTimeout(function() {\n            var splitInput = $.trim(self.$control_input.val() || '').split(self.settings.splitOn);\n            for (var i = 0, n = splitInput.length; i < n; i++) {\n              self.createItem(splitInput[i]);\n            }\n          }, 0);\n        }\n      }\n    },\n\n    /**\n     * Triggered on <input> keypress.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onKeyPress: function(e) {\n      if (this.isLocked) return e && e.preventDefault();\n      var character = String.fromCharCode(e.keyCode || e.which);\n      if (this.settings.create && this.settings.mode === 'multi' && character === this.settings.delimiter) {\n        this.createItem();\n        e.preventDefault();\n        return false;\n      }\n    },\n\n    /**\n     * Triggered on <input> keydown.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onKeyDown: function(e) {\n      var isInput = e.target === this.$control_input[0];\n      var self = this;\n\n      if (self.isLocked) {\n        if (e.keyCode !== KEY_TAB) {\n          e.preventDefault();\n        }\n        return;\n      }\n\n      switch (e.keyCode) {\n        case KEY_A:\n          if (self.isCmdDown) {\n            self.selectAll();\n            return;\n          }\n          break;\n        case KEY_ESC:\n          if (self.isOpen) {\n            e.preventDefault();\n            e.stopPropagation();\n            self.close();\n          }\n          return;\n        case KEY_N:\n          if (!e.ctrlKey || e.altKey) break;\n        case KEY_DOWN:\n          if (!self.isOpen && self.hasOptions) {\n            self.open();\n          } else if (self.$activeOption) {\n            self.ignoreHover = true;\n            var $next = self.getAdjacentOption(self.$activeOption, 1);\n            if ($next.length) self.setActiveOption($next, true, true);\n          }\n          e.preventDefault();\n          return;\n        case KEY_P:\n          if (!e.ctrlKey || e.altKey) break;\n        case KEY_UP:\n          if (self.$activeOption) {\n            self.ignoreHover = true;\n            var $prev = self.getAdjacentOption(self.$activeOption, -1);\n            if ($prev.length) self.setActiveOption($prev, true, true);\n          }\n          e.preventDefault();\n          return;\n        case KEY_RETURN:\n          if (self.isOpen && self.$activeOption) {\n            self.onOptionSelect({currentTarget: self.$activeOption});\n            e.preventDefault();\n          }\n          return;\n        case KEY_LEFT:\n          self.advanceSelection(-1, e);\n          return;\n        case KEY_RIGHT:\n          self.advanceSelection(1, e);\n          return;\n        case KEY_TAB:\n          if (self.settings.selectOnTab && self.isOpen && self.$activeOption) {\n            self.onOptionSelect({currentTarget: self.$activeOption});\n\n            // Default behaviour is to jump to the next field, we only want this\n            // if the current field doesn't accept any more entries\n            if (!self.isFull()) {\n              e.preventDefault();\n            }\n          }\n          if (self.settings.create && self.createItem()) {\n            e.preventDefault();\n          }\n          return;\n        case KEY_BACKSPACE:\n        case KEY_DELETE:\n          self.deleteSelection(e);\n          return;\n      }\n\n      if ((self.isFull() || self.isInputHidden) && !(IS_MAC ? e.metaKey : e.ctrlKey)) {\n        e.preventDefault();\n        return;\n      }\n    },\n\n    /**\n     * Triggered on <input> keyup.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onKeyUp: function(e) {\n      var self = this;\n\n      if (self.isLocked) return e && e.preventDefault();\n      var value = self.$control_input.val() || '';\n      if (self.lastValue !== value) {\n        self.lastValue = value;\n        self.onSearchChange(value);\n        self.refreshOptions();\n        self.trigger('type', value);\n      }\n    },\n\n    /**\n     * Invokes the user-provide option provider / loader.\n     *\n     * Note: this function is debounced in the Selectize\n     * constructor (by `settings.loadDelay` milliseconds)\n     *\n     * @param {string} value\n     */\n    onSearchChange: function(value) {\n      var self = this;\n      var fn = self.settings.load;\n      if (!fn) return;\n      if (self.loadedSearches.hasOwnProperty(value)) return;\n      self.loadedSearches[value] = true;\n      self.load(function(callback) {\n        fn.apply(self, [value, callback]);\n      });\n    },\n\n    /**\n     * Triggered on <input> focus.\n     *\n     * @param {object} e (optional)\n     * @returns {boolean}\n     */\n    onFocus: function(e) {\n      var self = this;\n      var wasFocused = self.isFocused;\n\n      if (self.isDisabled) {\n        self.blur();\n        e && e.preventDefault();\n        return false;\n      }\n\n      if (self.ignoreFocus) return;\n      self.isFocused = true;\n      if (self.settings.preload === 'focus') self.onSearchChange('');\n\n      if (!wasFocused) self.trigger('focus');\n\n      if (!self.$activeItems.length) {\n        self.showInput();\n        self.setActiveItem(null);\n        self.refreshOptions(!!self.settings.openOnFocus);\n      }\n\n      self.refreshState();\n    },\n\n    /**\n     * Triggered on <input> blur.\n     *\n     * @param {object} e\n     * @param {Element} dest\n     */\n    onBlur: function(e, dest) {\n      var self = this;\n      if (!self.isFocused) return;\n      self.isFocused = false;\n\n      if (self.ignoreFocus) {\n        return;\n      } else if (!self.ignoreBlur && document.activeElement === self.$dropdown_content[0]) {\n        // necessary to prevent IE closing the dropdown when the scrollbar is clicked\n        self.ignoreBlur = true;\n        self.onFocus(e);\n        return;\n      }\n\n      var deactivate = function() {\n        self.close();\n        self.setTextboxValue('');\n        self.setActiveItem(null);\n        self.setActiveOption(null);\n        self.setCaret(self.items.length);\n        self.refreshState();\n\n        // IE11 bug: element still marked as active\n        (dest || document.body).focus();\n\n        self.ignoreFocus = false;\n        self.trigger('blur');\n      };\n\n      self.ignoreFocus = true;\n      if (self.settings.create && self.settings.createOnBlur) {\n        self.createItem(null, false, deactivate);\n      } else {\n        deactivate();\n      }\n    },\n\n    /**\n     * Triggered when the user rolls over\n     * an option in the autocomplete dropdown menu.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onOptionHover: function(e) {\n      if (this.ignoreHover) return;\n      this.setActiveOption(e.currentTarget, false);\n    },\n\n    /**\n     * Triggered when the user clicks on an option\n     * in the autocomplete dropdown menu.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onOptionSelect: function(e) {\n      var value, $target, $option, self = this;\n\n      if (e.preventDefault) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      $target = $(e.currentTarget);\n      if ($target.hasClass('create')) {\n        self.createItem(null, function() {\n          if (self.settings.closeAfterSelect) {\n            self.close();\n          }\n        });\n      } else {\n        value = $target.attr('data-value');\n        if (typeof value !== 'undefined') {\n          self.lastQuery = null;\n          self.setTextboxValue('');\n          self.addItem(value);\n          if (self.settings.closeAfterSelect) {\n            self.close();\n          } else if (!self.settings.hideSelected && e.type && /mouse/.test(e.type)) {\n            self.setActiveOption(self.getOption(value));\n          }\n        }\n      }\n    },\n\n    /**\n     * Triggered when the user clicks on an item\n     * that has been selected.\n     *\n     * @param {object} e\n     * @returns {boolean}\n     */\n    onItemSelect: function(e) {\n      var self = this;\n\n      if (self.isLocked) return;\n      if (self.settings.mode === 'multi') {\n        e.preventDefault();\n        self.setActiveItem(e.currentTarget, e);\n      }\n    },\n\n    /**\n     * Invokes the provided method that provides\n     * results to a callback---which are then added\n     * as options to the control.\n     *\n     * @param {function} fn\n     */\n    load: function(fn) {\n      var self = this;\n      var $wrapper = self.$wrapper.addClass(self.settings.loadingClass);\n\n      self.loading++;\n      fn.apply(self, [function(results) {\n        self.loading = Math.max(self.loading - 1, 0);\n        if (results && results.length) {\n          self.addOption(results);\n          self.refreshOptions(self.isFocused && !self.isInputHidden);\n        }\n        if (!self.loading) {\n          $wrapper.removeClass(self.settings.loadingClass);\n        }\n        self.trigger('load', results);\n      }]);\n    },\n\n    /**\n     * Sets the input field of the control to the specified value.\n     *\n     * @param {string} value\n     */\n    setTextboxValue: function(value) {\n      var $input = this.$control_input;\n      var changed = $input.val() !== value;\n      if (changed) {\n        $input.val(value).triggerHandler('update');\n        this.lastValue = value;\n      }\n    },\n\n    /**\n     * Returns the value of the control. If multiple items\n     * can be selected (e.g. <select multiple>), this returns\n     * an array. If only one item can be selected, this\n     * returns a string.\n     *\n     * @returns {mixed}\n     */\n    getValue: function() {\n      if (this.tagType === TAG_SELECT && this.$input.attr('multiple')) {\n        return this.items;\n      } else {\n        return this.items.join(this.settings.delimiter);\n      }\n    },\n\n    /**\n     * Resets the selected items to the given value.\n     *\n     * @param {mixed} value\n     */\n    setValue: function(value, silent) {\n      var events = silent ? [] : ['change'];\n\n      debounce_events(this, events, function() {\n        this.clear(silent);\n        this.addItems(value, silent);\n      });\n    },\n\n    /**\n     * Sets the selected item.\n     *\n     * @param {object} $item\n     * @param {object} e (optional)\n     */\n    setActiveItem: function($item, e) {\n      var self = this;\n      var eventName;\n      var i, idx, begin, end, item, swap;\n      var $last;\n\n      if (self.settings.mode === 'single') return;\n      $item = $($item);\n\n      // clear the active selection\n      if (!$item.length) {\n        $(self.$activeItems).removeClass('active');\n        self.$activeItems = [];\n        if (self.isFocused) {\n          self.showInput();\n        }\n        return;\n      }\n\n      // modify selection\n      eventName = e && e.type.toLowerCase();\n\n      if (eventName === 'mousedown' && self.isShiftDown && self.$activeItems.length) {\n        $last = self.$control.children('.active:last');\n        begin = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$last[0]]);\n        end   = Array.prototype.indexOf.apply(self.$control[0].childNodes, [$item[0]]);\n        if (begin > end) {\n          swap  = begin;\n          begin = end;\n          end   = swap;\n        }\n        for (i = begin; i <= end; i++) {\n          item = self.$control[0].childNodes[i];\n          if (self.$activeItems.indexOf(item) === -1) {\n            $(item).addClass('active');\n            self.$activeItems.push(item);\n          }\n        }\n        e.preventDefault();\n      } else if ((eventName === 'mousedown' && self.isCtrlDown) || (eventName === 'keydown' && this.isShiftDown)) {\n        if ($item.hasClass('active')) {\n          idx = self.$activeItems.indexOf($item[0]);\n          self.$activeItems.splice(idx, 1);\n          $item.removeClass('active');\n        } else {\n          self.$activeItems.push($item.addClass('active')[0]);\n        }\n      } else {\n        $(self.$activeItems).removeClass('active');\n        self.$activeItems = [$item.addClass('active')[0]];\n      }\n\n      // ensure control has focus\n      self.hideInput();\n      if (!this.isFocused) {\n        self.focus();\n      }\n    },\n\n    /**\n     * Sets the selected item in the dropdown menu\n     * of available options.\n     *\n     * @param {object} $object\n     * @param {boolean} scroll\n     * @param {boolean} animate\n     */\n    setActiveOption: function($option, scroll, animate) {\n      var height_menu, height_item, y;\n      var scroll_top, scroll_bottom;\n      var self = this;\n\n      if (self.$activeOption) self.$activeOption.removeClass('active');\n      self.$activeOption = null;\n\n      $option = $($option);\n      if (!$option.length) return;\n\n      self.$activeOption = $option.addClass('active');\n\n      if (scroll || !isset(scroll)) {\n\n        height_menu   = self.$dropdown_content.height();\n        height_item   = self.$activeOption.outerHeight(true);\n        scroll        = self.$dropdown_content.scrollTop() || 0;\n        y             = self.$activeOption.offset().top - self.$dropdown_content.offset().top + scroll;\n        scroll_top    = y;\n        scroll_bottom = y - height_menu + height_item;\n\n        if (y + height_item > height_menu + scroll) {\n          self.$dropdown_content.stop().animate({scrollTop: scroll_bottom}, animate ? self.settings.scrollDuration : 0);\n        } else if (y < scroll) {\n          self.$dropdown_content.stop().animate({scrollTop: scroll_top}, animate ? self.settings.scrollDuration : 0);\n        }\n\n      }\n    },\n\n    /**\n     * Selects all items (CTRL + A).\n     */\n    selectAll: function() {\n      var self = this;\n      if (self.settings.mode === 'single') return;\n\n      self.$activeItems = Array.prototype.slice.apply(self.$control.children(':not(input)').addClass('active'));\n      if (self.$activeItems.length) {\n        self.hideInput();\n        self.close();\n      }\n      self.focus();\n    },\n\n    /**\n     * Hides the input element out of view, while\n     * retaining its focus.\n     */\n    hideInput: function() {\n      var self = this;\n\n      self.setTextboxValue('');\n      self.$control_input.css({opacity: 0, position: 'absolute', left: self.rtl ? 10000 : -10000});\n      self.isInputHidden = true;\n    },\n\n    /**\n     * Restores input visibility.\n     */\n    showInput: function() {\n      this.$control_input.css({opacity: 1, position: 'relative', left: 0});\n      this.isInputHidden = false;\n    },\n\n    /**\n     * Gives the control focus.\n     */\n    focus: function() {\n      var self = this;\n      if (self.isDisabled) return;\n\n      self.ignoreFocus = true;\n      self.$control_input[0].focus();\n      window.setTimeout(function() {\n        self.ignoreFocus = false;\n        self.onFocus();\n      }, 0);\n    },\n\n    /**\n     * Forces the control out of focus.\n     *\n     * @param {Element} dest\n     */\n    blur: function(dest) {\n      this.$control_input[0].blur();\n      this.onBlur(null, dest);\n    },\n\n    /**\n     * Returns a function that scores an object\n     * to show how good of a match it is to the\n     * provided query.\n     *\n     * @param {string} query\n     * @param {object} options\n     * @return {function}\n     */\n    getScoreFunction: function(query) {\n      return this.sifter.getScoreFunction(query, this.getSearchOptions());\n    },\n\n    /**\n     * Returns search options for sifter (the system\n     * for scoring and sorting results).\n     *\n     * @see https://github.com/brianreavis/sifter.js\n     * @return {object}\n     */\n    getSearchOptions: function() {\n      var settings = this.settings;\n      var sort = settings.sortField;\n      if (typeof sort === 'string') {\n        sort = [{field: sort}];\n      }\n\n      return {\n        fields      : settings.searchField,\n        conjunction : settings.searchConjunction,\n        sort        : sort\n      };\n    },\n\n    /**\n     * Searches through available options and returns\n     * a sorted array of matches.\n     *\n     * Returns an object containing:\n     *\n     *   - query {string}\n     *   - tokens {array}\n     *   - total {int}\n     *   - items {array}\n     *\n     * @param {string} query\n     * @returns {object}\n     */\n    search: function(query) {\n      var i, value, score, result, calculateScore;\n      var self     = this;\n      var settings = self.settings;\n      var options  = this.getSearchOptions();\n\n      // validate user-provided result scoring function\n      if (settings.score) {\n        calculateScore = self.settings.score.apply(this, [query]);\n        if (typeof calculateScore !== 'function') {\n          throw new Error('Selectize \"score\" setting must be a function that returns a function');\n        }\n      }\n\n      // perform search\n      if (query !== self.lastQuery) {\n        self.lastQuery = query;\n        result = self.sifter.search(query, $.extend(options, {score: calculateScore}));\n        self.currentResults = result;\n      } else {\n        result = $.extend(true, {}, self.currentResults);\n      }\n\n      // filter out selected items\n      if (settings.hideSelected) {\n        for (i = result.items.length - 1; i >= 0; i--) {\n          if (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n            result.items.splice(i, 1);\n          }\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Refreshes the list of available options shown\n     * in the autocomplete dropdown menu.\n     *\n     * @param {boolean} triggerDropdown\n     */\n    refreshOptions: function(triggerDropdown) {\n      var i, j, k, n, groups, groups_order, option, option_html, optgroup, optgroups, html, html_children, has_create_option;\n      var $active, $active_before, $create;\n\n      if (typeof triggerDropdown === 'undefined') {\n        triggerDropdown = true;\n      }\n\n      var self              = this;\n      var query             = $.trim(self.$control_input.val());\n      var results           = self.search(query);\n      var $dropdown_content = self.$dropdown_content;\n      var active_before     = self.$activeOption && hash_key(self.$activeOption.attr('data-value'));\n\n      // build markup\n      n = results.items.length;\n      if (typeof self.settings.maxOptions === 'number') {\n        n = Math.min(n, self.settings.maxOptions);\n      }\n\n      // render and group available options individually\n      groups = {};\n      groups_order = [];\n\n      for (i = 0; i < n; i++) {\n        option      = self.options[results.items[i].id];\n        option_html = self.render('option', option);\n        optgroup    = option[self.settings.optgroupField] || '';\n        optgroups   = $.isArray(optgroup) ? optgroup : [optgroup];\n\n        for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n          optgroup = optgroups[j];\n          if (!self.optgroups.hasOwnProperty(optgroup)) {\n            optgroup = '';\n          }\n          if (!groups.hasOwnProperty(optgroup)) {\n            groups[optgroup] = [];\n            groups_order.push(optgroup);\n          }\n          groups[optgroup].push(option_html);\n        }\n      }\n\n      // sort optgroups\n      if (this.settings.lockOptgroupOrder) {\n        groups_order.sort(function(a, b) {\n          var a_order = self.optgroups[a].$order || 0;\n          var b_order = self.optgroups[b].$order || 0;\n          return a_order - b_order;\n        });\n      }\n\n      // render optgroup headers & join groups\n      html = [];\n      for (i = 0, n = groups_order.length; i < n; i++) {\n        optgroup = groups_order[i];\n        if (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].length) {\n          // render the optgroup header and options within it,\n          // then pass it to the wrapper template\n          html_children = self.render('optgroup_header', self.optgroups[optgroup]) || '';\n          html_children += groups[optgroup].join('');\n          html.push(self.render('optgroup', $.extend({}, self.optgroups[optgroup], {\n            html: html_children\n          })));\n        } else {\n          html.push(groups[optgroup].join(''));\n        }\n      }\n\n      $dropdown_content.html(html.join(''));\n\n      // highlight matching terms inline\n      if (self.settings.highlight && results.query.length && results.tokens.length) {\n        for (i = 0, n = results.tokens.length; i < n; i++) {\n          highlight($dropdown_content, results.tokens[i].regex);\n        }\n      }\n\n      // add \"selected\" class to selected options\n      if (!self.settings.hideSelected) {\n        for (i = 0, n = self.items.length; i < n; i++) {\n          self.getOption(self.items[i]).addClass('selected');\n        }\n      }\n\n      // add create option\n      has_create_option = self.canCreate(query);\n      if (has_create_option) {\n        $dropdown_content.prepend(self.render('option_create', {input: query}));\n        $create = $($dropdown_content[0].childNodes[0]);\n      }\n\n      // activate\n      self.hasOptions = results.items.length > 0 || has_create_option;\n      if (self.hasOptions) {\n        if (results.items.length > 0) {\n          $active_before = active_before && self.getOption(active_before);\n          if ($active_before && $active_before.length) {\n            $active = $active_before;\n          } else if (self.settings.mode === 'single' && self.items.length) {\n            $active = self.getOption(self.items[0]);\n          }\n          if (!$active || !$active.length) {\n            if ($create && !self.settings.addPrecedence) {\n              $active = self.getAdjacentOption($create, 1);\n            } else {\n              $active = $dropdown_content.find('[data-selectable]:first');\n            }\n          }\n        } else {\n          $active = $create;\n        }\n        self.setActiveOption($active);\n        if (triggerDropdown && !self.isOpen) { self.open(); }\n      } else {\n        self.setActiveOption(null);\n        if (triggerDropdown && self.isOpen) { self.close(); }\n      }\n    },\n\n    /**\n     * Adds an available option. If it already exists,\n     * nothing will happen. Note: this does not refresh\n     * the options list dropdown (use `refreshOptions`\n     * for that).\n     *\n     * Usage:\n     *\n     *   this.addOption(data)\n     *\n     * @param {object|array} data\n     */\n    addOption: function(data) {\n      var i, n, value, self = this;\n\n      if ($.isArray(data)) {\n        for (i = 0, n = data.length; i < n; i++) {\n          self.addOption(data[i]);\n        }\n        return;\n      }\n\n      if (value = self.registerOption(data)) {\n        self.userOptions[value] = true;\n        self.lastQuery = null;\n        self.trigger('option_add', value, data);\n      }\n    },\n\n    /**\n     * Registers an option to the pool of options.\n     *\n     * @param {object} data\n     * @return {boolean|string}\n     */\n    registerOption: function(data) {\n      var key = hash_key(data[this.settings.valueField]);\n      if (!key || this.options.hasOwnProperty(key)) return false;\n      data.$order = data.$order || ++this.order;\n      this.options[key] = data;\n      return key;\n    },\n\n    /**\n     * Registers an option group to the pool of option groups.\n     *\n     * @param {object} data\n     * @return {boolean|string}\n     */\n    registerOptionGroup: function(data) {\n      var key = hash_key(data[this.settings.optgroupValueField]);\n      if (!key) return false;\n\n      data.$order = data.$order || ++this.order;\n      this.optgroups[key] = data;\n      return key;\n    },\n\n    /**\n     * Registers a new optgroup for options\n     * to be bucketed into.\n     *\n     * @param {string} id\n     * @param {object} data\n     */\n    addOptionGroup: function(id, data) {\n      data[this.settings.optgroupValueField] = id;\n      if (id = this.registerOptionGroup(data)) {\n        this.trigger('optgroup_add', id, data);\n      }\n    },\n\n    /**\n     * Removes an existing option group.\n     *\n     * @param {string} id\n     */\n    removeOptionGroup: function(id) {\n      if (this.optgroups.hasOwnProperty(id)) {\n        delete this.optgroups[id];\n        this.renderCache = {};\n        this.trigger('optgroup_remove', id);\n      }\n    },\n\n    /**\n     * Clears all existing option groups.\n     */\n    clearOptionGroups: function() {\n      this.optgroups = {};\n      this.renderCache = {};\n      this.trigger('optgroup_clear');\n    },\n\n    /**\n     * Updates an option available for selection. If\n     * it is visible in the selected items or options\n     * dropdown, it will be re-rendered automatically.\n     *\n     * @param {string} value\n     * @param {object} data\n     */\n    updateOption: function(value, data) {\n      var self = this;\n      var $item, $item_new;\n      var value_new, index_item, cache_items, cache_options, order_old;\n\n      value     = hash_key(value);\n      value_new = hash_key(data[self.settings.valueField]);\n\n      // sanity checks\n      if (value === null) return;\n      if (!self.options.hasOwnProperty(value)) return;\n      if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\n      order_old = self.options[value].$order;\n\n      // update references\n      if (value_new !== value) {\n        delete self.options[value];\n        index_item = self.items.indexOf(value);\n        if (index_item !== -1) {\n          self.items.splice(index_item, 1, value_new);\n        }\n      }\n      data.$order = data.$order || order_old;\n      self.options[value_new] = data;\n\n      // invalidate render cache\n      cache_items = self.renderCache['item'];\n      cache_options = self.renderCache['option'];\n\n      if (cache_items) {\n        delete cache_items[value];\n        delete cache_items[value_new];\n      }\n      if (cache_options) {\n        delete cache_options[value];\n        delete cache_options[value_new];\n      }\n\n      // update the item if it's selected\n      if (self.items.indexOf(value_new) !== -1) {\n        $item = self.getItem(value);\n        $item_new = $(self.render('item', data));\n        if ($item.hasClass('active')) $item_new.addClass('active');\n        $item.replaceWith($item_new);\n      }\n\n      // invalidate last query because we might have updated the sortField\n      self.lastQuery = null;\n\n      // update dropdown contents\n      if (self.isOpen) {\n        self.refreshOptions(false);\n      }\n    },\n\n    /**\n     * Removes a single option.\n     *\n     * @param {string} value\n     * @param {boolean} silent\n     */\n    removeOption: function(value, silent) {\n      var self = this;\n      value = hash_key(value);\n\n      var cache_items = self.renderCache['item'];\n      var cache_options = self.renderCache['option'];\n      if (cache_items) delete cache_items[value];\n      if (cache_options) delete cache_options[value];\n\n      delete self.userOptions[value];\n      delete self.options[value];\n      self.lastQuery = null;\n      self.trigger('option_remove', value);\n      self.removeItem(value, silent);\n    },\n\n    /**\n     * Clears all options.\n     */\n    clearOptions: function() {\n      var self = this;\n\n      self.loadedSearches = {};\n      self.userOptions = {};\n      self.renderCache = {};\n      self.options = self.sifter.items = {};\n      self.lastQuery = null;\n      self.trigger('option_clear');\n      self.clear();\n    },\n\n    /**\n     * Returns the jQuery element of the option\n     * matching the given value.\n     *\n     * @param {string} value\n     * @returns {object}\n     */\n    getOption: function(value) {\n      return this.getElementWithValue(value, this.$dropdown_content.find('[data-selectable]'));\n    },\n\n    /**\n     * Returns the jQuery element of the next or\n     * previous selectable option.\n     *\n     * @param {object} $option\n     * @param {int} direction  can be 1 for next or -1 for previous\n     * @return {object}\n     */\n    getAdjacentOption: function($option, direction) {\n      var $options = this.$dropdown.find('[data-selectable]');\n      var index    = $options.index($option) + direction;\n\n      return index >= 0 && index < $options.length ? $options.eq(index) : $();\n    },\n\n    /**\n     * Finds the first element with a \"data-value\" attribute\n     * that matches the given value.\n     *\n     * @param {mixed} value\n     * @param {object} $els\n     * @return {object}\n     */\n    getElementWithValue: function(value, $els) {\n      value = hash_key(value);\n\n      if (typeof value !== 'undefined' && value !== null) {\n        for (var i = 0, n = $els.length; i < n; i++) {\n          if ($els[i].getAttribute('data-value') === value) {\n            return $($els[i]);\n          }\n        }\n      }\n\n      return $();\n    },\n\n    /**\n     * Returns the jQuery element of the item\n     * matching the given value.\n     *\n     * @param {string} value\n     * @returns {object}\n     */\n    getItem: function(value) {\n      return this.getElementWithValue(value, this.$control.children());\n    },\n\n    /**\n     * \"Selects\" multiple items at once. Adds them to the list\n     * at the current caret position.\n     *\n     * @param {string} value\n     * @param {boolean} silent\n     */\n    addItems: function(values, silent) {\n      var items = $.isArray(values) ? values : [values];\n      for (var i = 0, n = items.length; i < n; i++) {\n        this.isPending = (i < n - 1);\n        this.addItem(items[i], silent);\n      }\n    },\n\n    /**\n     * \"Selects\" an item. Adds it to the list\n     * at the current caret position.\n     *\n     * @param {string} value\n     * @param {boolean} silent\n     */\n    addItem: function(value, silent) {\n      var events = silent ? [] : ['change'];\n\n      debounce_events(this, events, function() {\n        var $item, $option, $options;\n        var self = this;\n        var inputMode = self.settings.mode;\n        var i, active, value_next, wasFull;\n        value = hash_key(value);\n\n        if (self.items.indexOf(value) !== -1) {\n          if (inputMode === 'single') self.close();\n          return;\n        }\n\n        if (!self.options.hasOwnProperty(value)) return;\n        if (inputMode === 'single') self.clear(silent);\n        if (inputMode === 'multi' && self.isFull()) return;\n\n        $item = $(self.render('item', self.options[value]));\n        wasFull = self.isFull();\n        self.items.splice(self.caretPos, 0, value);\n        self.insertAtCaret($item);\n        if (!self.isPending || (!wasFull && self.isFull())) {\n          self.refreshState();\n        }\n\n        if (self.isSetup) {\n          $options = self.$dropdown_content.find('[data-selectable]');\n\n          // update menu / remove the option (if this is not one item being added as part of series)\n          if (!self.isPending) {\n            $option = self.getOption(value);\n            value_next = self.getAdjacentOption($option, 1).attr('data-value');\n            self.refreshOptions(self.isFocused && inputMode !== 'single');\n            if (value_next) {\n              self.setActiveOption(self.getOption(value_next));\n            }\n          }\n\n          // hide the menu if the maximum number of items have been selected or no options are left\n          if (!$options.length || self.isFull()) {\n            self.close();\n          } else {\n            self.positionDropdown();\n          }\n\n          self.updatePlaceholder();\n          self.trigger('item_add', value, $item);\n          self.updateOriginalInput({silent: silent});\n        }\n      });\n    },\n\n    /**\n     * Removes the selected item matching\n     * the provided value.\n     *\n     * @param {string} value\n     */\n    removeItem: function(value, silent) {\n      var self = this;\n      var $item, i, idx;\n\n      $item = (typeof value === 'object') ? value : self.getItem(value);\n      value = hash_key($item.attr('data-value'));\n      i = self.items.indexOf(value);\n\n      if (i !== -1) {\n        $item.remove();\n        if ($item.hasClass('active')) {\n          idx = self.$activeItems.indexOf($item[0]);\n          self.$activeItems.splice(idx, 1);\n        }\n\n        self.items.splice(i, 1);\n        self.lastQuery = null;\n        if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n          self.removeOption(value, silent);\n        }\n\n        if (i < self.caretPos) {\n          self.setCaret(self.caretPos - 1);\n        }\n\n        self.refreshState();\n        self.updatePlaceholder();\n        self.updateOriginalInput({silent: silent});\n        self.positionDropdown();\n        self.trigger('item_remove', value, $item);\n      }\n    },\n\n    /**\n     * Invokes the `create` method provided in the\n     * selectize options that should provide the data\n     * for the new item, given the user input.\n     *\n     * Once this completes, it will be added\n     * to the item list.\n     *\n     * @param {string} value\n     * @param {boolean} [triggerDropdown]\n     * @param {function} [callback]\n     * @return {boolean}\n     */\n    createItem: function(input, triggerDropdown) {\n      var self  = this;\n      var caret = self.caretPos;\n      input = input || $.trim(self.$control_input.val() || '');\n\n      var callback = arguments[arguments.length - 1];\n      if (typeof callback !== 'function') callback = function() {};\n\n      if (typeof triggerDropdown !== 'boolean') {\n        triggerDropdown = true;\n      }\n\n      if (!self.canCreate(input)) {\n        callback();\n        return false;\n      }\n\n      self.lock();\n\n      var setup = (typeof self.settings.create === 'function') ? this.settings.create : function(input) {\n        var data = {};\n        data[self.settings.labelField] = input;\n        data[self.settings.valueField] = input;\n        return data;\n      };\n\n      var create = once(function(data) {\n        self.unlock();\n\n        if (!data || typeof data !== 'object') return callback();\n        var value = hash_key(data[self.settings.valueField]);\n        if (typeof value !== 'string') return callback();\n\n        self.setTextboxValue('');\n        self.addOption(data);\n        self.setCaret(caret);\n        self.addItem(value);\n        self.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n        callback(data);\n      });\n\n      var output = setup.apply(this, [input, create]);\n      if (typeof output !== 'undefined') {\n        create(output);\n      }\n\n      return true;\n    },\n\n    /**\n     * Re-renders the selected item lists.\n     */\n    refreshItems: function() {\n      this.lastQuery = null;\n\n      if (this.isSetup) {\n        this.addItem(this.items);\n      }\n\n      this.refreshState();\n      this.updateOriginalInput();\n    },\n\n    /**\n     * Updates all state-dependent attributes\n     * and CSS classes.\n     */\n    refreshState: function() {\n      var invalid, self = this;\n      if (self.isRequired) {\n        if (self.items.length) self.isInvalid = false;\n        self.$control_input.prop('required', invalid);\n      }\n      self.refreshClasses();\n    },\n\n    /**\n     * Updates all state-dependent CSS classes.\n     */\n    refreshClasses: function() {\n      var self     = this;\n      var isFull   = self.isFull();\n      var isLocked = self.isLocked;\n\n      self.$wrapper\n        .toggleClass('rtl', self.rtl);\n\n      self.$control\n        .toggleClass('focus', self.isFocused)\n        .toggleClass('disabled', self.isDisabled)\n        .toggleClass('required', self.isRequired)\n        .toggleClass('invalid', self.isInvalid)\n        .toggleClass('locked', isLocked)\n        .toggleClass('full', isFull).toggleClass('not-full', !isFull)\n        .toggleClass('input-active', self.isFocused && !self.isInputHidden)\n        .toggleClass('dropdown-active', self.isOpen)\n        .toggleClass('has-options', !$.isEmptyObject(self.options))\n        .toggleClass('has-items', self.items.length > 0);\n\n      self.$control_input.data('grow', !isFull && !isLocked);\n    },\n\n    /**\n     * Determines whether or not more items can be added\n     * to the control without exceeding the user-defined maximum.\n     *\n     * @returns {boolean}\n     */\n    isFull: function() {\n      return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n    },\n\n    /**\n     * Refreshes the original <select> or <input>\n     * element to reflect the current state.\n     */\n    updateOriginalInput: function(opts) {\n      var i, n, options, label, self = this;\n      opts = opts || {};\n\n      if (self.tagType === TAG_SELECT) {\n        options = [];\n        for (i = 0, n = self.items.length; i < n; i++) {\n          label = self.options[self.items[i]][self.settings.labelField] || '';\n          options.push('<option value=\"' + escape_html(self.items[i]) + '\" selected=\"selected\">' + escape_html(label) + '</option>');\n        }\n        if (!options.length && !this.$input.attr('multiple')) {\n          options.push('<option value=\"\" selected=\"selected\"></option>');\n        }\n        self.$input.html(options.join(''));\n      } else {\n        self.$input.val(self.getValue());\n        self.$input.attr('value',self.$input.val());\n      }\n\n      if (self.isSetup) {\n        if (!opts.silent) {\n          self.trigger('change', self.$input.val());\n        }\n      }\n    },\n\n    /**\n     * Shows/hide the input placeholder depending\n     * on if there items in the list already.\n     */\n    updatePlaceholder: function() {\n      if (!this.settings.placeholder) return;\n      var $input = this.$control_input;\n\n      if (this.items.length) {\n        $input.removeAttr('placeholder');\n      } else {\n        $input.attr('placeholder', this.settings.placeholder);\n      }\n      $input.triggerHandler('update', {force: true});\n    },\n\n    /**\n     * Shows the autocomplete dropdown containing\n     * the available options.\n     */\n    open: function() {\n      var self = this;\n\n      if (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n      self.focus();\n      self.isOpen = true;\n      self.refreshState();\n      self.$dropdown.css({visibility: 'hidden', display: 'block'});\n      self.positionDropdown();\n      self.$dropdown.css({visibility: 'visible'});\n      self.trigger('dropdown_open', self.$dropdown);\n    },\n\n    /**\n     * Closes the autocomplete dropdown menu.\n     */\n    close: function() {\n      var self = this;\n      var trigger = self.isOpen;\n\n      if (self.settings.mode === 'single' && self.items.length) {\n        self.hideInput();\n      }\n\n      self.isOpen = false;\n      self.$dropdown.hide();\n      self.setActiveOption(null);\n      self.refreshState();\n\n      if (trigger) self.trigger('dropdown_close', self.$dropdown);\n    },\n\n    /**\n     * Calculates and applies the appropriate\n     * position of the dropdown.\n     */\n    positionDropdown: function() {\n      var $control = this.$control;\n      var offset = this.settings.dropdownParent === 'body' ? $control.offset() : $control.position();\n      offset.top += $control.outerHeight(true);\n\n      this.$dropdown.css({\n        width : $control.outerWidth(),\n        top   : offset.top,\n        left  : offset.left\n      });\n    },\n\n    /**\n     * Resets / clears all selected items\n     * from the control.\n     *\n     * @param {boolean} silent\n     */\n    clear: function(silent) {\n      var self = this;\n\n      if (!self.items.length) return;\n      self.$control.children(':not(input)').remove();\n      self.items = [];\n      self.lastQuery = null;\n      self.setCaret(0);\n      self.setActiveItem(null);\n      self.updatePlaceholder();\n      self.updateOriginalInput({silent: silent});\n      self.refreshState();\n      self.showInput();\n      self.trigger('clear');\n    },\n\n    /**\n     * A helper method for inserting an element\n     * at the current caret position.\n     *\n     * @param {object} $el\n     */\n    insertAtCaret: function($el) {\n      var caret = Math.min(this.caretPos, this.items.length);\n      if (caret === 0) {\n        this.$control.prepend($el);\n      } else {\n        $(this.$control[0].childNodes[caret]).before($el);\n      }\n      this.setCaret(caret + 1);\n    },\n\n    /**\n     * Removes the current selected item(s).\n     *\n     * @param {object} e (optional)\n     * @returns {boolean}\n     */\n    deleteSelection: function(e) {\n      var i, n, direction, selection, values, caret, option_select, $option_select, $tail;\n      var self = this;\n\n      direction = (e && e.keyCode === KEY_BACKSPACE) ? -1 : 1;\n      selection = getSelection(self.$control_input[0]);\n\n      if (self.$activeOption && !self.settings.hideSelected) {\n        option_select = self.getAdjacentOption(self.$activeOption, -1).attr('data-value');\n      }\n\n      // determine items that will be removed\n      values = [];\n\n      if (self.$activeItems.length) {\n        $tail = self.$control.children('.active:' + (direction > 0 ? 'last' : 'first'));\n        caret = self.$control.children(':not(input)').index($tail);\n        if (direction > 0) { caret++; }\n\n        for (i = 0, n = self.$activeItems.length; i < n; i++) {\n          values.push($(self.$activeItems[i]).attr('data-value'));\n        }\n        if (e) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n        if (direction < 0 && selection.start === 0 && selection.length === 0) {\n          values.push(self.items[self.caretPos - 1]);\n        } else if (direction > 0 && selection.start === self.$control_input.val().length) {\n          values.push(self.items[self.caretPos]);\n        }\n      }\n\n      // allow the callback to abort\n      if (!values.length || (typeof self.settings.onDelete === 'function' && self.settings.onDelete.apply(self, [values]) === false)) {\n        return false;\n      }\n\n      // perform removal\n      if (typeof caret !== 'undefined') {\n        self.setCaret(caret);\n      }\n      while (values.length) {\n        self.removeItem(values.pop());\n      }\n\n      self.showInput();\n      self.positionDropdown();\n      self.refreshOptions(true);\n\n      // select previous option\n      if (option_select) {\n        $option_select = self.getOption(option_select);\n        if ($option_select.length) {\n          self.setActiveOption($option_select);\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Selects the previous / next item (depending\n     * on the `direction` argument).\n     *\n     * > 0 - right\n     * < 0 - left\n     *\n     * @param {int} direction\n     * @param {object} e (optional)\n     */\n    advanceSelection: function(direction, e) {\n      var tail, selection, idx, valueLength, cursorAtEdge, $tail;\n      var self = this;\n\n      if (direction === 0) return;\n      if (self.rtl) direction *= -1;\n\n      tail = direction > 0 ? 'last' : 'first';\n      selection = getSelection(self.$control_input[0]);\n\n      if (self.isFocused && !self.isInputHidden) {\n        valueLength = self.$control_input.val().length;\n        cursorAtEdge = direction < 0\n          ? selection.start === 0 && selection.length === 0\n          : selection.start === valueLength;\n\n        if (cursorAtEdge && !valueLength) {\n          self.advanceCaret(direction, e);\n        }\n      } else {\n        $tail = self.$control.children('.active:' + tail);\n        if ($tail.length) {\n          idx = self.$control.children(':not(input)').index($tail);\n          self.setActiveItem(null);\n          self.setCaret(direction > 0 ? idx + 1 : idx);\n        }\n      }\n    },\n\n    /**\n     * Moves the caret left / right.\n     *\n     * @param {int} direction\n     * @param {object} e (optional)\n     */\n    advanceCaret: function(direction, e) {\n      var self = this, fn, $adj;\n\n      if (direction === 0) return;\n\n      fn = direction > 0 ? 'next' : 'prev';\n      if (self.isShiftDown) {\n        $adj = self.$control_input[fn]();\n        if ($adj.length) {\n          self.hideInput();\n          self.setActiveItem($adj);\n          e && e.preventDefault();\n        }\n      } else {\n        self.setCaret(self.caretPos + direction);\n      }\n    },\n\n    /**\n     * Moves the caret to the specified index.\n     *\n     * @param {int} i\n     */\n    setCaret: function(i) {\n      var self = this;\n\n      if (self.settings.mode === 'single') {\n        i = self.items.length;\n      } else {\n        i = Math.max(0, Math.min(self.items.length, i));\n      }\n\n      if(!self.isPending) {\n        // the input must be moved by leaving it in place and moving the\n        // siblings, due to the fact that focus cannot be restored once lost\n        // on mobile webkit devices\n        var j, n, fn, $children, $child;\n        $children = self.$control.children(':not(input)');\n        for (j = 0, n = $children.length; j < n; j++) {\n          $child = $($children[j]).detach();\n          if (j <  i) {\n            self.$control_input.before($child);\n          } else {\n            self.$control.append($child);\n          }\n        }\n      }\n\n      self.caretPos = i;\n    },\n\n    /**\n     * Disables user input on the control. Used while\n     * items are being asynchronously created.\n     */\n    lock: function() {\n      this.close();\n      this.isLocked = true;\n      this.refreshState();\n    },\n\n    /**\n     * Re-enables user input on the control.\n     */\n    unlock: function() {\n      this.isLocked = false;\n      this.refreshState();\n    },\n\n    /**\n     * Disables user input on the control completely.\n     * While disabled, it cannot receive focus.\n     */\n    disable: function() {\n      var self = this;\n      self.$input.prop('disabled', true);\n      self.$control_input.prop('disabled', true).prop('tabindex', -1);\n      self.isDisabled = true;\n      self.lock();\n    },\n\n    /**\n     * Enables the control so that it can respond\n     * to focus and user input.\n     */\n    enable: function() {\n      var self = this;\n      self.$input.prop('disabled', false);\n      self.$control_input.prop('disabled', false).prop('tabindex', self.tabIndex);\n      self.isDisabled = false;\n      self.unlock();\n    },\n\n    /**\n     * Completely destroys the control and\n     * unbinds all event listeners so that it can\n     * be garbage collected.\n     */\n    destroy: function() {\n      var self = this;\n      var eventNS = self.eventNS;\n      var revertSettings = self.revertSettings;\n\n      self.trigger('destroy');\n      self.off();\n      self.$wrapper.remove();\n      self.$dropdown.remove();\n\n      self.$input\n        .html('')\n        .append(revertSettings.$children)\n        .removeAttr('tabindex')\n        .removeClass('selectized')\n        .attr({tabindex: revertSettings.tabindex})\n        .show();\n\n      self.$control_input.removeData('grow');\n      self.$input.removeData('selectize');\n\n      $(window).off(eventNS);\n      $(document).off(eventNS);\n      $(document.body).off(eventNS);\n\n      delete self.$input[0].selectize;\n    },\n\n    /**\n     * A helper method for rendering \"item\" and\n     * \"option\" templates, given the data.\n     *\n     * @param {string} templateName\n     * @param {object} data\n     * @returns {string}\n     */\n    render: function(templateName, data) {\n      var value, id, label;\n      var html = '';\n      var cache = false;\n      var self = this;\n      var regex_tag = /^[\\t \\r\\n]*<([a-z][a-z0-9\\-_]*(?:\\:[a-z][a-z0-9\\-_]*)?)/i;\n\n      if (templateName === 'option' || templateName === 'item') {\n        value = hash_key(data[self.settings.valueField]);\n        cache = !!value;\n      }\n\n      // pull markup from cache if it exists\n      if (cache) {\n        if (!isset(self.renderCache[templateName])) {\n          self.renderCache[templateName] = {};\n        }\n        if (self.renderCache[templateName].hasOwnProperty(value)) {\n          return self.renderCache[templateName][value];\n        }\n      }\n\n      // render markup\n      html = self.settings.render[templateName].apply(this, [data, escape_html]);\n\n      // add mandatory attributes\n      if (templateName === 'option' || templateName === 'option_create') {\n        html = html.replace(regex_tag, '<$1 data-selectable');\n      }\n      if (templateName === 'optgroup') {\n        id = data[self.settings.optgroupValueField] || '';\n        html = html.replace(regex_tag, '<$1 data-group=\"' + escape_replace(escape_html(id)) + '\"');\n      }\n      if (templateName === 'option' || templateName === 'item') {\n        html = html.replace(regex_tag, '<$1 data-value=\"' + escape_replace(escape_html(value || '')) + '\"');\n      }\n\n      // update cache\n      if (cache) {\n        self.renderCache[templateName][value] = html;\n      }\n\n      return html;\n    },\n\n    /**\n     * Clears the render cache for a template. If\n     * no template is given, clears all render\n     * caches.\n     *\n     * @param {string} templateName\n     */\n    clearCache: function(templateName) {\n      var self = this;\n      if (typeof templateName === 'undefined') {\n        self.renderCache = {};\n      } else {\n        delete self.renderCache[templateName];\n      }\n    },\n\n    /**\n     * Determines whether or not to display the\n     * create item prompt, given a user input.\n     *\n     * @param {string} input\n     * @return {boolean}\n     */\n    canCreate: function(input) {\n      var self = this;\n      if (!self.settings.create) return false;\n      var filter = self.settings.createFilter;\n      return input.length\n        && (typeof filter !== 'function' || filter.apply(self, [input]))\n        && (typeof filter !== 'string' || new RegExp(filter).test(input))\n        && (!(filter instanceof RegExp) || filter.test(input));\n    }\n\n  });\n\n\n  Selectize.count = 0;\n  Selectize.defaults = {\n    options: [],\n    optgroups: [],\n\n    plugins: [],\n    delimiter: ',',\n    splitOn: null, // regexp or string for splitting up values from a paste command\n    persist: true,\n    diacritics: true,\n    create: false,\n    createOnBlur: false,\n    createFilter: null,\n    highlight: true,\n    openOnFocus: true,\n    maxOptions: 1000,\n    maxItems: null,\n    hideSelected: null,\n    addPrecedence: false,\n    selectOnTab: false,\n    preload: false,\n    allowEmptyOption: false,\n    closeAfterSelect: false,\n\n    scrollDuration: 60,\n    loadThrottle: 300,\n    loadingClass: 'loading',\n\n    dataAttr: 'data-data',\n    optgroupField: 'optgroup',\n    valueField: 'value',\n    labelField: 'text',\n    optgroupLabelField: 'label',\n    optgroupValueField: 'value',\n    lockOptgroupOrder: false,\n\n    sortField: '$order',\n    searchField: ['text'],\n    searchConjunction: 'and',\n\n    mode: null,\n    wrapperClass: 'selectize-control',\n    inputClass: 'selectize-input',\n    dropdownClass: 'selectize-dropdown',\n    dropdownContentClass: 'selectize-dropdown-content',\n\n    dropdownParent: null,\n\n    copyClassesToDropdown: true,\n\n    /*\n    load                 : null, // function(query, callback) { ... }\n    score                : null, // function(search) { ... }\n    onInitialize         : null, // function() { ... }\n    onChange             : null, // function(value) { ... }\n    onItemAdd            : null, // function(value, $item) { ... }\n    onItemRemove         : null, // function(value) { ... }\n    onClear              : null, // function() { ... }\n    onOptionAdd          : null, // function(value, data) { ... }\n    onOptionRemove       : null, // function(value) { ... }\n    onOptionClear        : null, // function() { ... }\n    onOptionGroupAdd     : null, // function(id, data) { ... }\n    onOptionGroupRemove  : null, // function(id) { ... }\n    onOptionGroupClear   : null, // function() { ... }\n    onDropdownOpen       : null, // function($dropdown) { ... }\n    onDropdownClose      : null, // function($dropdown) { ... }\n    onType               : null, // function(str) { ... }\n    onDelete             : null, // function(values) { ... }\n    */\n\n    render: {\n      /*\n      item: null,\n      optgroup: null,\n      optgroup_header: null,\n      option: null,\n      option_create: null\n      */\n    }\n  };\n\n\n  $.fn.selectize = function(settings_user) {\n    var defaults             = $.fn.selectize.defaults;\n    var settings             = $.extend({}, defaults, settings_user);\n    var attr_data            = settings.dataAttr;\n    var field_label          = settings.labelField;\n    var field_value          = settings.valueField;\n    var field_optgroup       = settings.optgroupField;\n    var field_optgroup_label = settings.optgroupLabelField;\n    var field_optgroup_value = settings.optgroupValueField;\n\n    /**\n     * Initializes selectize from a <input type=\"text\"> element.\n     *\n     * @param {object} $input\n     * @param {object} settings_element\n     */\n    var init_textbox = function($input, settings_element) {\n      var i, n, values, option;\n\n      var data_raw = $input.attr(attr_data);\n\n      if (!data_raw) {\n        var value = $.trim($input.val() || '');\n        if (!settings.allowEmptyOption && !value.length) return;\n        values = value.split(settings.delimiter);\n        for (i = 0, n = values.length; i < n; i++) {\n          option = {};\n          option[field_label] = values[i];\n          option[field_value] = values[i];\n          settings_element.options.push(option);\n        }\n        settings_element.items = values;\n      } else {\n        settings_element.options = JSON.parse(data_raw);\n        for (i = 0, n = settings_element.options.length; i < n; i++) {\n          settings_element.items.push(settings_element.options[i][field_value]);\n        }\n      }\n    };\n\n    /**\n     * Initializes selectize from a <select> element.\n     *\n     * @param {object} $input\n     * @param {object} settings_element\n     */\n    var init_select = function($input, settings_element) {\n      var i, n, tagName, $children, order = 0;\n      var options = settings_element.options;\n      var optionsMap = {};\n\n      var readData = function($el) {\n        var data = attr_data && $el.attr(attr_data);\n        if (typeof data === 'string' && data.length) {\n          return JSON.parse(data);\n        }\n        return null;\n      };\n\n      var addOption = function($option, group) {\n        $option = $($option);\n\n        var value = hash_key($option.attr('value'));\n        if (!value && !settings.allowEmptyOption) return;\n\n        // if the option already exists, it's probably been\n        // duplicated in another optgroup. in this case, push\n        // the current group to the \"optgroup\" property on the\n        // existing option so that it's rendered in both places.\n        if (optionsMap.hasOwnProperty(value)) {\n          if (group) {\n            var arr = optionsMap[value][field_optgroup];\n            if (!arr) {\n              optionsMap[value][field_optgroup] = group;\n            } else if (!$.isArray(arr)) {\n              optionsMap[value][field_optgroup] = [arr, group];\n            } else {\n              arr.push(group);\n            }\n          }\n          return;\n        }\n\n        var option             = readData($option) || {};\n        option[field_label]    = option[field_label] || $option.text();\n        option[field_value]    = option[field_value] || value;\n        option[field_optgroup] = option[field_optgroup] || group;\n\n        optionsMap[value] = option;\n        options.push(option);\n\n        if ($option.is(':selected')) {\n          settings_element.items.push(value);\n        }\n      };\n\n      var addGroup = function($optgroup) {\n        var i, n, id, optgroup, $options;\n\n        $optgroup = $($optgroup);\n        id = $optgroup.attr('label');\n\n        if (id) {\n          optgroup = readData($optgroup) || {};\n          optgroup[field_optgroup_label] = id;\n          optgroup[field_optgroup_value] = id;\n          settings_element.optgroups.push(optgroup);\n        }\n\n        $options = $('option', $optgroup);\n        for (i = 0, n = $options.length; i < n; i++) {\n          addOption($options[i], id);\n        }\n      };\n\n      settings_element.maxItems = $input.attr('multiple') ? null : 1;\n\n      $children = $input.children();\n      for (i = 0, n = $children.length; i < n; i++) {\n        tagName = $children[i].tagName.toLowerCase();\n        if (tagName === 'optgroup') {\n          addGroup($children[i]);\n        } else if (tagName === 'option') {\n          addOption($children[i]);\n        }\n      }\n    };\n\n    return this.each(function() {\n      if (this.selectize) return;\n\n      var instance;\n      var $input = $(this);\n      var tag_name = this.tagName.toLowerCase();\n      var placeholder = $input.attr('placeholder') || $input.attr('data-placeholder');\n      if (!placeholder && !settings.allowEmptyOption) {\n        placeholder = $input.children('option[value=\"\"]').text();\n      }\n\n      var settings_element = {\n        'placeholder' : placeholder,\n        'options'     : [],\n        'optgroups'   : [],\n        'items'       : []\n      };\n\n      if (tag_name === 'select') {\n        init_select($input, settings_element);\n      } else {\n        init_textbox($input, settings_element);\n      }\n\n      instance = new Selectize($input, $.extend(true, {}, defaults, settings_element, settings_user));\n    });\n  };\n\n  $.fn.selectize.defaults = Selectize.defaults;\n  $.fn.selectize.support = {\n    validity: SUPPORTS_VALIDITY_API\n  };\n\n\n  Selectize.define('drag_drop', function(options) {\n    if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n    if (this.settings.mode !== 'multi') return;\n    var self = this;\n\n    self.lock = (function() {\n      var original = self.lock;\n      return function() {\n        var sortable = self.$control.data('sortable');\n        if (sortable) sortable.disable();\n        return original.apply(self, arguments);\n      };\n    })();\n\n    self.unlock = (function() {\n      var original = self.unlock;\n      return function() {\n        var sortable = self.$control.data('sortable');\n        if (sortable) sortable.enable();\n        return original.apply(self, arguments);\n      };\n    })();\n\n    self.setup = (function() {\n      var original = self.setup;\n      return function() {\n        original.apply(this, arguments);\n\n        var $control = self.$control.sortable({\n          items: '[data-value]',\n          forcePlaceholderSize: true,\n          disabled: self.isLocked,\n          start: function(e, ui) {\n            ui.placeholder.css('width', ui.helper.css('width'));\n            $control.css({overflow: 'visible'});\n          },\n          stop: function() {\n            $control.css({overflow: 'hidden'});\n            var active = self.$activeItems ? self.$activeItems.slice() : null;\n            var values = [];\n            $control.children('[data-value]').each(function() {\n              values.push($(this).attr('data-value'));\n            });\n            self.setValue(values);\n            self.setActiveItem(active);\n          }\n        });\n      };\n    })();\n\n  });\n\n  Selectize.define('dropdown_header', function(options) {\n    var self = this;\n\n    options = $.extend({\n      title         : 'Untitled',\n      headerClass   : 'selectize-dropdown-header',\n      titleRowClass : 'selectize-dropdown-header-title',\n      labelClass    : 'selectize-dropdown-header-label',\n      closeClass    : 'selectize-dropdown-header-close',\n\n      html: function(data) {\n        return (\n          '<div class=\"' + data.headerClass + '\">' +\n            '<div class=\"' + data.titleRowClass + '\">' +\n              '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n              '<a href=\"javascript:void(0)\" class=\"' + data.closeClass + '\">&times;</a>' +\n            '</div>' +\n          '</div>'\n        );\n      }\n    }, options);\n\n    self.setup = (function() {\n      var original = self.setup;\n      return function() {\n        original.apply(self, arguments);\n        self.$dropdown_header = $(options.html(options));\n        self.$dropdown.prepend(self.$dropdown_header);\n      };\n    })();\n\n  });\n\n  Selectize.define('optgroup_columns', function(options) {\n    var self = this;\n\n    options = $.extend({\n      equalizeWidth  : true,\n      equalizeHeight : true\n    }, options);\n\n    this.getAdjacentOption = function($option, direction) {\n      var $options = $option.closest('[data-group]').find('[data-selectable]');\n      var index    = $options.index($option) + direction;\n\n      return index >= 0 && index < $options.length ? $options.eq(index) : $();\n    };\n\n    this.onKeyDown = (function() {\n      var original = self.onKeyDown;\n      return function(e) {\n        var index, $option, $options, $optgroup;\n\n        if (this.isOpen && (e.keyCode === KEY_LEFT || e.keyCode === KEY_RIGHT)) {\n          self.ignoreHover = true;\n          $optgroup = this.$activeOption.closest('[data-group]');\n          index = $optgroup.find('[data-selectable]').index(this.$activeOption);\n\n          if(e.keyCode === KEY_LEFT) {\n            $optgroup = $optgroup.prev('[data-group]');\n          } else {\n            $optgroup = $optgroup.next('[data-group]');\n          }\n\n          $options = $optgroup.find('[data-selectable]');\n          $option  = $options.eq(Math.min($options.length - 1, index));\n          if ($option.length) {\n            this.setActiveOption($option);\n          }\n          return;\n        }\n\n        return original.apply(this, arguments);\n      };\n    })();\n\n    var getScrollbarWidth = function() {\n      var div;\n      var width = getScrollbarWidth.width;\n      var doc = document;\n\n      if (typeof width === 'undefined') {\n        div = doc.createElement('div');\n        div.innerHTML = '<div style=\"width:50px;height:50px;position:absolute;left:-50px;top:-50px;overflow:auto;\"><div style=\"width:1px;height:100px;\"></div></div>';\n        div = div.firstChild;\n        doc.body.appendChild(div);\n        width = getScrollbarWidth.width = div.offsetWidth - div.clientWidth;\n        doc.body.removeChild(div);\n      }\n      return width;\n    };\n\n    var equalizeSizes = function() {\n      var i, n, height_max, width, width_last, width_parent, $optgroups;\n\n      $optgroups = $('[data-group]', self.$dropdown_content);\n      n = $optgroups.length;\n      if (!n || !self.$dropdown_content.width()) return;\n\n      if (options.equalizeHeight) {\n        height_max = 0;\n        for (i = 0; i < n; i++) {\n          height_max = Math.max(height_max, $optgroups.eq(i).height());\n        }\n        $optgroups.css({height: height_max});\n      }\n\n      if (options.equalizeWidth) {\n        width_parent = self.$dropdown_content.innerWidth() - getScrollbarWidth();\n        width = Math.round(width_parent / n);\n        $optgroups.css({width: width});\n        if (n > 1) {\n          width_last = width_parent - width * (n - 1);\n          $optgroups.eq(n - 1).css({width: width_last});\n        }\n      }\n    };\n\n    if (options.equalizeHeight || options.equalizeWidth) {\n      hook.after(this, 'positionDropdown', equalizeSizes);\n      hook.after(this, 'refreshOptions', equalizeSizes);\n    }\n\n\n  });\n\n  Selectize.define('remove_button', function(options) {\n    if (this.settings.mode === 'single') return;\n\n    options = $.extend({\n      label     : '&times;',\n      title     : 'Remove',\n      className : 'remove',\n      append    : true\n    }, options);\n\n    var self = this;\n    var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n    /**\n     * Appends an element as a child (with raw HTML).\n     *\n     * @param {string} html_container\n     * @param {string} html_element\n     * @return {string}\n     */\n    var append = function(html_container, html_element) {\n      var pos = html_container.search(/(<\\/[^>]+>\\s*)$/);\n      return html_container.substring(0, pos) + html_element + html_container.substring(pos);\n    };\n\n    this.setup = (function() {\n      var original = self.setup;\n      return function() {\n        // override the item rendering method to add the button to each\n        if (options.append) {\n          var render_item = self.settings.render.item;\n          self.settings.render.item = function(data) {\n            return append(render_item.apply(this, arguments), html);\n          };\n        }\n\n        original.apply(this, arguments);\n\n        // add event listener\n        this.$control.on('click', '.' + options.className, function(e) {\n          e.preventDefault();\n          if (self.isLocked) return;\n\n          var $item = $(e.currentTarget).parent();\n          self.setActiveItem($item);\n          if (self.deleteSelection()) {\n            self.setCaret(self.items.length);\n          }\n        });\n\n      };\n    })();\n\n  });\n\n  Selectize.define('restore_on_backspace', function(options) {\n    var self = this;\n\n    options.text = options.text || function(option) {\n      return option[this.settings.labelField];\n    };\n\n    this.onKeyDown = (function() {\n      var original = self.onKeyDown;\n      return function(e) {\n        var index, option;\n        if (e.keyCode === KEY_BACKSPACE && this.$control_input.val() === '' && !this.$activeItems.length) {\n          index = this.caretPos - 1;\n          if (index >= 0 && index < this.items.length) {\n            option = this.options[this.items[index]];\n            if (this.deleteSelection(e)) {\n              this.setTextboxValue(options.text.apply(this, [option]));\n              this.refreshOptions(true);\n            }\n            e.preventDefault();\n            return;\n          }\n        }\n        return original.apply(this, arguments);\n      };\n    })();\n  });\n\n\n  return Selectize;\n}));\n","(function($) {\n  if ($('input[name=name]').length && $('input[name=slug]').length) {\n    $('input[name=name]').on('keyup', function() {\n      var slug = $('input[name=name]').val()\n        .toLowerCase()\n        .replace(/[^\\w ]+/g,'')\n        .replace(/ +/g,'-');\n\n      $('input[name=slug]').val(slug);\n    });\n  }\n\n  $('input[name=tags]').selectize({\n    plugins: ['remove_button'],\n    persist: false,\n    create: function(input) {\n      return {\n        value: input,\n        text: input\n      };\n    }\n  });\n\n  $('select[name=series_id]').selectize();\n})(jQuery);\n"],"sourceRoot":"/source/"}