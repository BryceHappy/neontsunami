{"version":3,"sources":["shards.js","app.js"],"names":["$","Plugin","me","c1","c2","sh","steps","wheel","light","alf","fs","this","el","sharp","filter","colours","c3","shade","alpha","init","prototype","cssPrefix","ua","navigator","userAgent","test","window","opera","percents","percentage","stringBuilder","colourFilter","css","fit","console","log","col","catcol","deg","Math","random","a","b","c","d","beg","end","part","toString","concat","width","height","innerHeight","p1","p2","p3","p4","colstep","push","hsl","hue","rgb","r1","g1","b1","maxColor","max","minColor","min","L","S","H","result","m1","m2","r","g","h","s","l","hue2rgb","round","v","fn","shards","colour1","colour2","shadeColour","lightness","fullscreen","resize","jQuery"],"mappings":"CAUA,SAAAA,GAEA,GAAAC,GAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAC,KAAAC,GAAAV,EACAS,KAAAE,OAAA,EACAF,KAAAD,GAAAA,EACAC,KAAAG,OAAA,GACAH,KAAAI,SACAZ,GAAAA,EACAC,GAAAA,EACAY,GAAAZ,EACAa,MAAAZ,EACAa,MAAAT,EACAH,MAAAA,EACAC,MAAAA,EACAC,QAAA,GAEAG,KAAAQ,OAEAlB,GAAAmB,UAAAD,KAAA,WAEAR,KAAAU,WAAA,CAEA,IAAAC,GAAAC,UAAAC,SAYA,IAXA,gBAAAC,KAAAH,IAAA,qBAAAG,KAAAH,GACAX,KAAAU,UAAA,UAEA,iBAAAI,KAAAH,GACAX,KAAAU,UAAA,OACAK,OAAAC,MACAhB,KAAAU,UAAA,KACA,eAAAI,KAAAH,KACAX,KAAAU,UAAA,OAGAV,KAAAU,UAAA,CAGA,IAFA,GAAAf,GAAAK,KAAAI,QAAAT,MAEAA,EAAA,GACAK,KAAAiB,SAAAjB,KAAAkB,aACAlB,KAAAmB,gBACAnB,KAAAoB,eACAzB,GAAA,EACAA,EAAA,IAAAK,KAAAG,QAAA,KAEAH,MAAAC,GAAAoB,IAAA,mBAAArB,KAAAG,QAEAH,KAAAD,IAAAC,KAAAsB,UAEAC,SAAAC,IAAA,4CAIAlC,EAAAmB,UAAAU,cAAA,WAEA,GAAAM,GAAAzB,KAAAI,QACAZ,EAAAQ,KAAA0B,OAAAD,EAAAjC,IACAC,EAAAO,KAAA0B,OAAAD,EAAAhC,IACAY,EAAAL,KAAA0B,OAAAD,EAAApB,IACAC,EAAAN,KAAA0B,OAAAD,EAAAnB,OACAqB,KAAA,IAAAC,KAAAC,SAEA7B,MAAAG,QAAAH,KAAAU,UAAA,oBAAAiB,EAAA,OAAAnC,EAAA,IAAAQ,KAAAiB,SAAAa,EAAA,KAAAxB,EAAA,IAAAN,KAAAiB,SAAAc,EAAA,KAAAtC,EAAA,IAAAO,KAAAiB,SAAAe,EAAA,KAAA3B,EAAA,IAAAL,KAAAiB,SAAAgB,EAAA,KAGA3C,EAAAmB,UAAAiB,OAAA,SAAAD,GAEA,GAAAS,GAAA,QACAC,EAAA,IACAC,EAAAX,EAAAY,UAEA,OAAAH,GAAAI,OAAAF,GAAAE,OAAAH,IAEA7C,EAAAmB,UAAAa,IAAA,WACAtB,KAAAC,GAAAoB,KACAkB,MAAA,OACAC,OAAAzB,OAAA0B,eAIAnD,EAAAmB,UAAAS,WAAA,WAEA,GAAAwB,MAAA,GAAAd,KAAAC,UACAc,EAAAD,KAAA,GAAAd,KAAAC,UACAe,EAAAD,EACAE,EAAA,IAAAF,KAAAf,KAAAC,SAAAc,GAEA1B,GACAa,EAAAY,EAAA,IACAX,EAAAY,EAAA,IACAX,EAAAY,EAAA,IACAX,EAAAY,EAAA,IAGA,OAAA5B,IAEA3B,EAAAmB,UAAAW,aAAA,WAEA,GAAAK,GAAAzB,KAAAI,OAEAqB,GAAAjC,GAAAQ,KAAA8C,QAAArB,EAAAjC,IACAiC,EAAAjC,GAAAuD,KAAAtB,EAAAlB,OACAkB,EAAAhC,GAAAO,KAAA8C,QAAArB,EAAAhC,IACAgC,EAAAhC,GAAAsD,KAAAtB,EAAAlB,OACAkB,EAAApB,GAAAL,KAAA8C,QAAArB,EAAAhC,IACAgC,EAAApB,GAAA0C,KAAAtB,EAAAlB,OACAkB,EAAAnB,MAAAN,KAAA8C,QAAArB,EAAAnB,OACAmB,EAAAnB,MAAAyC,KAAAtB,EAAAlB,QAEAjB,EAAAmB,UAAAqC,QAAA,SAAArB,GAEA,GAAAuB,GAAAhD,KAAAgD,IAAAvB,GACA7B,EAAAI,KAAAI,QAAAR,MACAqD,EAAA,IAAArD,CAOA,OALAI,MAAAI,QAAAP,MAAA,IAAAG,KAAAI,QAAAP,MAAA,GAEAmD,EAAA,GAAAA,EAAA,MAAApB,KAAAC,SAAAoB,EAAA,MAAArB,KAAAC,SAAAoB,EAAA,GACAD,EAAA,GAAA,IAAApD,EACAoD,EAAA,GAAA,GAAAhD,KAAAI,QAAAP,MACAG,KAAAkD,IAAAF,IAEA1D,EAAAmB,UAAAuC,IAAA,SAAAE,GAEA,GAAAC,GAAAD,EAAA,GAAA,IACAE,EAAAF,EAAA,GAAA,IACAG,EAAAH,EAAA,GAAA,IACAI,EAAA1B,KAAA2B,IAAAJ,EAAAC,EAAAC,GACAG,EAAA5B,KAAA6B,IAAAN,EAAAC,EAAAC,GAEAK,GAAAJ,EAAAE,GAAA,EACAG,EAAA,EACAC,EAAA,CACAN,IAAAE,IAGAG,EADA,GAAAD,GACAJ,EAAAE,IAAAF,EAAAE,IAEAF,EAAAE,IAAA,EAAAF,EAAAE,GAIAI,EADAT,GAAAG,GACAF,EAAAC,IAAAC,EAAAE,GACAJ,GAAAE,EACA,GAAAD,EAAAF,IAAAG,EAAAE,GAEA,GAAAL,EAAAC,IAAAE,EAAAE,IAIAE,EAAA,IAAAA,EACAC,EAAA,IAAAA,EACAC,EAAA,GAAAA,EACA,EAAAA,IACAA,GAAA,IAGA,IAAAC,IAAAD,EAAAD,EAAAD,EACA,OAAAG,IAGAvE,EAAAmB,UAAAyC,IAAA,SAAAF,GACA,GAIAc,GAAAC,EAAAd,EACAe,EAAAC,EAAAlC,EALAmC,EAAAlB,EAAA,GACAmB,EAAAnB,EAAA,GACAoB,EAAApB,EAAA,EAmBA,OAfAmB,IAAA,IACAC,GAAA,IACA,GAAAD,EACAH,EAAAC,EAAAlC,EAAA,IAAAqC,GAGAL,EADA,IAAAK,EACAA,GAAAD,EAAA,GAEAC,EAAAD,EAAAC,EAAAD,EACAL,EAAA,EAAAM,EAAAL,EACAd,EAAAiB,EAAA,IACAF,EAAAhE,KAAAqE,QAAAP,EAAAC,EAAAd,EAAA,EAAA,GACAgB,EAAAjE,KAAAqE,QAAAP,EAAAC,EAAAd,GACAlB,EAAA/B,KAAAqE,QAAAP,EAAAC,EAAAd,EAAA,EAAA,KAEArB,KAAA0C,MAAAN,GAAApC,KAAA0C,MAAAL,GAAArC,KAAA0C,MAAAvC,KAEAzC,EAAAmB,UAAA4D,QAAA,SAAAP,EAAAC,EAAAd,GACA,GAAAsB,EAeA,OAdA,GAAAtB,EACAA,GAAA,EACAA,EAAA,IACAA,GAAA,GAGAsB,EADA,EAAA,EAAAtB,EACAa,GAAAC,EAAAD,GAAAb,EAAA,EACA,EAAA,EAAAA,EACAc,EACA,EAAA,EAAAd,EACAa,GAAAC,EAAAD,IAAA,EAAA,EAAAb,GAAA,EAEAa,EAEA,IAAAS,GAEAlF,EAAAmF,GAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAjF,EAAAC,EAAAiF,EAAAtE,EAAAuE,GAEA,GAAA7E,GAAAZ,EAAAW,MACAyE,EAAA,GAAAnF,GAAAW,EAAAyE,EAAAC,EAAAC,EAAAjF,EAAAC,EAAAiF,EAAAtE,EAAAuE,EAQA,OANAA,IACAzF,EAAA0B,QAAAgE,OAAA,WACAN,EAAAnD,QAIAtB,KAAAC,KAGA+E,QCpOA3F,EAAA,WACAA,EAAA,WAAAoF,QAAA,IAAA,GAAA,GAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,GAAA","file":"app.js","sourcesContent":["/**\n* Shards jQuery plug-in\n* Multilayered gradient background effect\n*\n* @author Jean-Christophe Nicolas <mrjcnicolas@gmail.com>\n* @homepage http://bite-software.co.uk/shards/\n* @version 1.1\n* @license MIT http://opensource.org/licenses/MIT\n* @date 03-06-2013\n*/\n(function($) {\n\nvar Plugin = function(me,c1,c2,sh,steps,wheel,light,alf,fs){\n\n    this.el = me;\n    this.sharp = true;\n    this.fs = fs;\n    this.filter = '';\n    this.colours = {\n        c1      : c1,\n        c2      : c2,\n        c3      : c2,\n        shade   : sh,\n        alpha   : alf,\n        steps   : steps,\n        wheel   : wheel,\n        light   : ~~(light)\n    }   \n    this.init();\n}\nPlugin.prototype.init = function(){\n\n    this.cssPrefix = false;\n\n    var ua = navigator.userAgent;\n    if(/Chrome\\/(\\S+)/.test(ua)|| /AppleWebKit\\/(\\S+)/.test(ua)) {\n        this.cssPrefix = '-webkit';\n    }\n    else if(/Firefox\\/(\\S+)/.test(ua)) {\n        this.cssPrefix = '-moz';\n    }else if(window.opera) {\n        this.cssPrefix = '-o';\n    }else if(/MSIE ([^;]+)/.test(ua)) {\n        this.cssPrefix = '-ms';\n    };\n\n    if(this.cssPrefix){\n        var steps = this.colours.steps;\n        \n        while( steps > 0){\n            this.percents = this.percentage();\n            this.stringBuilder();\n            this.colourFilter();\n            steps -= 1;\n            if(steps > 0) this.filter += ', ';\n        }\n        this.el.css('background-image',this.filter);\n        \n        if(this.fs) this.fit();\n    }else{\n        console.log('sorry bro, your browser isnt supported.');\n    }\n\n}\nPlugin.prototype.stringBuilder = function(){\n\n    var col = this.colours,\n        c1 = this.catcol(col.c1),\n        c2 = this.catcol(col.c2),\n        c3 = this.catcol(col.c3),\n        shade = this.catcol(col.shade),\n        deg = ~~(Math.random()*360);\n    \n    this.filter += this.cssPrefix+'-linear-gradient('+deg+'deg,'+c1+' '+this.percents.a+' ,'+shade+' '+this.percents.b+', '+c2+' '+this.percents.c+', '+c3+' '+this.percents.d+')'; \n    \n}\nPlugin.prototype.catcol = function(col){\n        \n    var beg = 'rgba(',\n        end = ')',\n        part = col.toString();\n\n    return beg.concat(part).concat(end);\n}\nPlugin.prototype.fit = function(){\n    this.el.css({\n        'width':'100%',\n        'height': window.innerHeight\n    })\n}\n\nPlugin.prototype.percentage = function(){\n        \n    var p1 = ~~(Math.random()*85),\n    p2 = p1 + ~~(Math.random()*15),\n    p3 = p2,\n    p4 = 100-p2 + ~~(Math.random()*p2); \n    \n    var percents = {\n        a:p1+'%',\n        b:p2+'%',\n        c:p3+'%',\n        d:p4+'%'\n    }\n\n    return percents;\n}\nPlugin.prototype.colourFilter = function(){\n\n    var col = this.colours;\n    \n    col.c1 = this.colstep(col.c1);\n    col.c1.push(col.alpha);\n    col.c2 = this.colstep(col.c2);\n    col.c2.push(col.alpha);\n    col.c3 = this.colstep(col.c2);\n    col.c3.push(col.alpha);\n    col.shade = this.colstep(col.shade);\n    col.shade.push(col.alpha);\n}\nPlugin.prototype.colstep = function(col){\n    \n    var hsl = this.hsl(col),\n        wheel = this.colours.wheel,\n        hue = (360 * wheel);\n\n    if(this.colours.light>3) this.colours.light = 3;\n\n    hsl[0] = hsl[0] - (~~(Math.random()*hue/2)) + (~~(Math.random()*hue/2));\n    hsl[1] = wheel * 100;\n    hsl[2] = 30 * this.colours.light;\n    return this.rgb(hsl);\n}\nPlugin.prototype.hsl = function(rgb){\n\n    var r1 = rgb[0] / 255;\n    var g1 = rgb[1] / 255;\n    var b1 = rgb[2] / 255;\n    var maxColor = Math.max(r1,g1,b1);\n    var minColor = Math.min(r1,g1,b1);\n    //Calculate L:\n    var L = (maxColor + minColor) / 2 ;\n    var S = 0;\n    var H = 0;\n    if(maxColor != minColor){\n        //Calculate S:\n        if(L < 0.5){\n            S = (maxColor - minColor) / (maxColor + minColor);\n        }else{\n            S = (maxColor - minColor) / (2.0 - maxColor - minColor);\n        }\n        //Calculate H:\n        if(r1 == maxColor){\n            H = (g1-b1) / (maxColor - minColor);\n        }else if(g1 == maxColor){\n            H = 2.0 + (b1 - r1) / (maxColor - minColor);\n        }else{\n            H = 4.0 + (r1 - g1) / (maxColor - minColor);\n        }\n    }\n\n    L = L * 100;\n    S = S * 100;\n    H = H * 60;\n    if(H<0){\n        H += 360;\n    }\n\n    var result = [H, S, L];\n    return result;\n    \n}\nPlugin.prototype.rgb = function(hsl){\n    var h = hsl[0];\n    var s = hsl[1];\n    var l = hsl[2];\n    \n    var m1, m2, hue;\n    var r, g, b;\n    s /=100;\n    l /= 100;\n    if (s == 0)\n        r = g = b = (l * 255);\n    else {\n        if (l <= 0.5)\n            m2 = l * (s + 1);\n        else\n            m2 = l + s - l * s;\n        m1 = l * 2 - m2;\n        hue = h / 360;\n        r = this.hue2rgb(m1, m2, hue + 1/3);\n        g = this.hue2rgb(m1, m2, hue);\n        b = this.hue2rgb(m1, m2, hue - 1/3);\n    }\n    return [Math.round(r), Math.round(g), Math.round(b)];\n}\nPlugin.prototype.hue2rgb = function(m1, m2, hue) {\n    var v;\n    if (hue < 0)\n        hue += 1;\n    else if (hue > 1)\n        hue -= 1;\n\n    if (6 * hue < 1)\n        v = m1 + (m2 - m1) * hue * 6;\n    else if (2 * hue < 1)\n        v = m2;\n    else if (3 * hue < 2)\n        v = m1 + (m2 - m1) * (2/3 - hue) * 6;\n    else\n        v = m1;\n\n    return 255 * v;\n};\n$.fn.shards = function(colour1, colour2, shadeColour, steps, wheel, lightness, alpha, fullscreen){\n\n    var el = $(this);\n    var shards = new Plugin(el,colour1,colour2,shadeColour,steps,wheel,lightness,alpha,fullscreen);\n    \n    if(fullscreen){\n        $(window).resize( function(){\n            shards.fit();\n        });\n    }\n\n    return this.el; \n}\n\n})(jQuery);","$(function() {\n  $('.shards').shards([239, 84, 17, 0.5], [245, 153, 113, 0.5], [255, 255, 255, 0.5], 1, 1, 1, 1, false); \n});"],"sourceRoot":"/source/"}